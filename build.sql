--This will create the tables for the database
--Change the nba variable from openquery to the name of the Linked Server you are loading from.
Select * into game -- This creates the game table
from openquery(nba, 'select * from game')
GO
---------------------------------------------------------------------------------
Select * into player -- This creates the player table
from openquery(nba, 'select * from player')
GO
---------------------------------------------------------------------------------
Select * into player_game_log -- This creates the player_game_log table
from openquery(nba, 'select * from player_game_log')
GO
---------------------------------------------------------------------------------
Select * into pgtt -- This creates the player_general_traditional_total table as pgtt. I found the title of the former took up took much space
from openquery(nba, 'select * from player_general_traditional_total')
GO
---------------------------------------------------------------------------------
Select * into player_season -- This creates the player_season table
from openquery(nba, 'select * from player_season')
GO
---------------------------------------------------------------------------------
Select * into season -- This creates the season table
from openquery(nba, 'select * from season')
GO
---------------------------------------------------------------------------------
Select * into team -- This creates the team table
from openquery(nba, 'select * from team')
GO
---------------------------------------------------------------------------------
Select * into pbp -- This creates the play by play table as pbp
from openquery(nba, 'select * from play_by_play')
GO
---------------------------------------------------------------------------------
Select * into event_message_type -- This creates the event message type table
from openquery(nba, 'select * from event_message_type')
GO
-------------------------------------------------------------------------------
Select * into scd -- This creates the play by play table as pbp
from openquery(nba, 'select * from shot_chart_detail')
GO
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
-------------------------------------------------------------------------------
--CREATION FOR team_game_log
----Creates the initial table for the first team in each game
SELECT season.season_id,  game.game_id, team.team_id, t2.team_id as opteam_id,
									SUM(player_game_log.pts) as score, 									
								       SUM(player_game_log.ast)  as asts,
									   SUM(player_game_log.reb) as rebs,
									   SUM(player_game_log.oreb) as orebs,
									   SUM(player_game_log.dreb) as drebs,
									   SUM(player_game_log.stl) as stls,
									   SUM(player_game_log.blk) as blks,
									   SUM(player_game_log.fgm)-SUM(player_game_log.fg3m) as fgs,
									   SUM(player_game_log.fga)-SUM(player_game_log.fg3a)as fga,
									   ROUND((SUM(player_game_log.fgm)-SUM(player_game_log.fg3m))/(SUM(player_game_log.fga)-SUM(player_game_log.fg3a))*100,1) as fgpct,
									   SUM(player_game_log.fg3m) as fg3s,
									   SUM(player_game_log.fg3a) as fg3a,
									   ROUND(SUM(player_game_log.fg3m)/SUM(player_game_log.fg3a)*100,1) as fg3Pct,
									   SUM(player_game_log.ftm) as fts,
									   SUM(player_game_log.fta) as fta,
									   ROUND(SUM(player_game_log.ftm)/SUM(player_game_log.fta)*100,1) as ftpct,
									   player_game_log.wl as result									  
INTO team_winner_game_log

FROM game INNER JOIN
	 team on game.team_id_winner = team.team_id JOIN
	 team as t2 on game.team_id_loser = t2.team_id INNER JOIN
	 player_game_log on team.team_id = player_game_log.team_id INNER JOIN
	 season on player_game_log.season_id = season.season_id

WHERE game.game_id = player_game_log.game_id AND player_game_log.team_id = team.team_id 
GROUP BY team.team_id, game.game_id, player_game_log.wl, season.season_id, t2.team_id
ORDER BY game_id ASC

GO

--Creates the matching table for the opponent of the teams selected above
SELECT season.season_id,  game.game_id, t2.team_id, team.team_id as opteam_id,
									SUM(player_game_log.pts) as score, 									
								       SUM(player_game_log.ast)  as asts,
									   SUM(player_game_log.reb) as rebs,
									   SUM(player_game_log.oreb) as orebs,
									   SUM(player_game_log.dreb) as drebs,
									   SUM(player_game_log.stl) as stls,
									   SUM(player_game_log.blk) as blks,
									   SUM(player_game_log.fgm)-SUM(player_game_log.fg3m) as fgs,
									   SUM(player_game_log.fga)-SUM(player_game_log.fg3a)as fga,
									   ROUND((SUM(player_game_log.fgm)-SUM(player_game_log.fg3m))/(SUM(player_game_log.fga)-SUM(player_game_log.fg3a))*100,1) as fgpct,
									   SUM(player_game_log.fg3m) as fg3s,
									   SUM(player_game_log.fg3a) as fg3a,
									   ROUND(SUM(player_game_log.fg3m)/SUM(player_game_log.fg3a)*100,1) as fg3Pct,
									   SUM(player_game_log.ftm) as fts,
									   SUM(player_game_log.fta) as fta,
									   ROUND(SUM(player_game_log.ftm)/SUM(player_game_log.fta)*100,1) as ftpct,
									   player_game_log.wl as result										  
INTO team_loser_game_log

FROM game INNER JOIN
	 team on game.team_id_winner = team.team_id JOIN
	 team as t2 on game.team_id_loser = t2.team_id INNER JOIN
	 player_game_log on t2.team_id = player_game_log.team_id INNER JOIN
	 season on game.season_id = season.season_id

WHERE game.game_id = player_game_log.game_id AND player_game_log.team_id = t2.team_id 
GROUP BY team.team_id, game.game_id, player_game_log.wl, season.season_id, t2.team_id
ORDER BY game_id ASC
GO


--Creates a temp table to insert the contents of both the team_loser and team_winner tables
SELECT x.* INTO team_game_log FROM
	(SELECT * from team_loser_game_log 

	UNION

	SELECT * from team_winner_game_log)x
GO

--Drops redundant tables
drop table team_loser_game_log
GO
drop table team_winner_game_log
GO

--CREATION FOR opteam_game_log
SELECT team_game_log.season_id, team_game_log.game_id, team_game_log.team_id, team_game_log.opteam_id,
	   optgl.score as opscore,
	   optgl.asts as opasts,
	   optgl.rebs as oprebs,
	   optgl.orebs as oporebs,
	   optgl.drebs as opdrebs,
	   optgl.stls as opstls,
	   optgl.blks as opblks,
	   optgl.fgs as opfgs,
	   optgl.fga as opfga,
	   optgl.fgpct as opfgpct,
	   optgl.fg3s as opfg3s,
	   optgl.fg3a as opfg3a,
	   optgl.fg3Pct as opfg3Pct,
	   optgl.fts as opfts,
	   optgl.fta as opfta,
	   optgl.ftpct as opftpct
INTO opteam_game_log

FROM team_game_log JOIN
	team_game_log as optgl ON team_game_log.opteam_id = optgl.team_id AND team_game_log.game_id = optgl.game_id 
GO

---------------------------------------------------------------------------------

--Creation for team_season
SELECT season.season_id, team.team_id,
				AVG(player_season.age) as avgage,
				CONCAT(AVG(player_season.player_height_inches)/12, '''', AVG(player_season.player_height_inches)%12)as avgheight,
									   ROUND(SUM(team_game_log.score)/COUNT(team_game_log.game_id),1) as ppg, 
									   ROUND(SUM(team_game_log.asts)/COUNT(team_game_log.game_id),0) as apg,
									   ROUND(SUM(team_game_log.orebs)/COUNT(team_game_log.game_id),0) as orbpg,
									   ROUND(SUM(team_game_log.drebs)/COUNT(opteam_game_log.game_id),0) as drbpg,
									   ROUND(SUM(team_game_log.rebs)/COUNT(team_game_log.game_id),0) as rbpg,
									   ROUND(SUM(team_game_log.fgs)/COUNT(team_game_log.game_id),0)as fgm,
									   ROUND(SUM(team_game_log.fga)/COUNT(team_game_log.game_id),0) as fga,									   									   
									   ROUND(AVG(team_game_log.fgpct),1) as fgpct,
									   ROUND(SUM(team_game_log.fts)/COUNT(team_game_log.game_id),0)as ftm,
									   ROUND(SUM(team_game_log.fta)/COUNT(team_game_log.game_id),0) as fta,									   									   
									   ROUND(AVG(team_game_log.ftpct),1) as ftpct,
									   ROUND(ROUND(SUM(team_game_log.fg3s),1)/COUNT(team_game_log.game_id),0) as fg3m,
									   ROUND(ROUND(SUM(team_game_log.fg3a),1)/COUNT(team_game_log.game_id),0) as fg3a,									   									   
									   ROUND(AVG(team_game_log.fg3Pct),1) as fg3Pct,
									   --The rank here is ROUNDED by 2 to get a more accurate reading of the statistics
									   ----ROUNDING by more than 2 does not generate a completely unique list, thus this is the maximum it can be rounded by
									   RANK() OVER(ORDER BY ROUND(SUM(team_game_log.score)/COUNT(team_game_log.game_id),2)DESC) as ppg_rank,
									   RANK() OVER(ORDER BY ROUND(SUM(opteam_game_log.opscore)/COUNT(team_game_log.game_id),2)) as ptsallowed_rank,
									   RANK() OVER(ORDER BY	 ROUND(SUM(team_game_log.asts)/COUNT(team_game_log.game_id),1)) as apg_rank,
									   RANK() OVER(ORDER BY	 ROUND(SUM(team_game_log.orebs)/COUNT(team_game_log.game_id),1)) as orbpg_rank,
									   RANK() OVER(ORDER BY	 ROUND(SUM(team_game_log.drebs)/COUNT(team_game_log.game_id),1)) as drbpg_rank,
									   RANK() OVER(ORDER BY	 ROUND(SUM(team_game_log.rebs)/COUNT(team_game_log.game_id),1)) as rbpg_rank,								   					   
									   --The rank here is ROUNDED by 2 to get a more accurate reading of the statistics
									   RANK() OVER(ORDER BY ROUND(AVG(team_game_log.fgpct),2) DESC) as fgpct_rank,
									   RANK() OVER(ORDER BY ROUND(SUM(team_game_log.fga)/COUNT(team_game_log.game_id),2) ASC) as fga_rank,								   								   
									   --The rank is ROUNDED by 1 here in order to get a more accurate reading of the statistics
									   ----I found that when ROUNDING by 0 returns a lot of ties								   
									   RANK() OVER(ORDER BY ROUND(AVG(team_game_log.fg3Pct),2) DESC) as fg3Pct_rank,									   
									   RANK() OVER(ORDER BY ROUND(SUM(team_game_log.fg3a)/COUNT(team_game_log.game_id),2) ASC) as fg3a_rank,									   
									   --The rank is ROUNDED by 1 here in order to get a more accurate reading of the statistics
									   ----I found that when ROUNDING by 0 returns a lot of ties	
									   RANK() OVER(ORDER BY ROUND(AVG(team_game_log.ftpct),2)DESC) as ftpct_rank,							   
									   RANK() OVER(ORDER BY ROUND(SUM(team_game_log.fta)/COUNT(team_game_log.game_id),2) ASC) as fta_rank,
									   

									   --opteam season columns
									   ROUND(SUM(opteam_game_log.opscore)/COUNT(team_game_log.game_id),1) as op_ppg,
									   ROUND(SUM(opteam_game_log.opasts)/COUNT(opteam_game_log.game_id),0) as opapg,
									   ROUND(SUM(opteam_game_log.oporebs)/COUNT(opteam_game_log.game_id),0) as oporbpg,
									   ROUND(SUM(opteam_game_log.opdrebs)/COUNT(opteam_game_log.game_id),0) as opdrbpg,
									   ROUND(SUM(opteam_game_log.oprebs)/COUNT(opteam_game_log.game_id),0) as oprbpg,
									   --Adding stats to show how the opposing team fares against this team
									   ROUND(SUM(opteam_game_log.opfgs)/COUNT(team_game_log.game_id),0) as opfgm,
									    ROUND(SUM(opteam_game_log.opfga)/COUNT(team_game_log.game_id),0) as opfga,									   									   
									   ROUND(AVG(opteam_game_log.opfgpct),1) as opfgpct,
									   ROUND(SUM(opteam_game_log.opfts)/COUNT(team_game_log.game_id),0) as opftm,
									   ROUND(SUM(opteam_game_log.opfta)/COUNT(team_game_log.game_id),0) as opfta,									   									   
									   ROUND(AVG(opteam_game_log.opftpct),1) as opftpct,
									   ROUND(ROUND(SUM(opteam_game_log.opfg3s),1)/COUNT(team_game_log.game_id),0) as opfg3m,
									   ROUND(ROUND(SUM(opteam_game_log.opfg3a),1)/COUNT(opteam_game_log.game_id),0) as opfg3a,									   									   
									   ROUND(AVG(opteam_game_log.opfg3Pct),1) as opfg3Pct,							   
									   RANK() OVER(ORDER BY	 ROUND(SUM(opteam_game_log.opasts)/COUNT(opteam_game_log.game_id),1)) as opapg_rank,
									   RANK() OVER(ORDER BY	 ROUND(SUM(opteam_game_log.oporebs)/COUNT(opteam_game_log.game_id),1)) as oporbpg_rank,
									   RANK() OVER(ORDER BY	 ROUND(SUM(opteam_game_log.opdrebs)/COUNT(opteam_game_log.game_id),1)) as opdrbpg_rank,
									   RANK() OVER(ORDER BY	 ROUND(SUM(opteam_game_log.oprebs)/COUNT(opteam_game_log.game_id),1)) as oprbpg_rank,								   					   
									   --The rank here is ROUNDED by 2 to get a more accurate reading of the statistics
									   ----ROUNDING by more than 2 does not generate a completely unique list, thus this is the maximum it can be rounded by
									   RANK() OVER(ORDER BY ROUND(AVG(opteam_game_log.opfgpct),2)) as opfgpct_rank,
									   RANK() OVER(ORDER BY ROUND(SUM(opteam_game_log.opfga)/COUNT(team_game_log.game_id),2) ASC) as opfga_rank,								   								   
									   --The rank is ROUNDED by 1 here in order to get a more accurate reading of the statistics
									   ----I found that when ROUNDING by 0 returns a lot of ties								   
									   RANK() OVER(ORDER BY ROUND(AVG(opteam_game_log.opfg3Pct),2)) as opfg3Pct_rank,									   
									   RANK() OVER(ORDER BY ROUND(SUM(opteam_game_log.opfg3a)/COUNT(opteam_game_log.game_id),2) ASC) as opfg3a_rank,									   
									   --The rank is ROUNDED by 1 here in order to get a more accurate reading of the statistics
									   ----I found that when ROUNDING by 0 returns a lot of ties	
									   RANK() OVER(ORDER BY ROUND(AVG(opteam_game_log.opftpct),2)) as opftpct_rank,							   
									   RANK() OVER(ORDER BY ROUND(SUM(opteam_game_log.opfta)/COUNT(team_game_log.game_id),2) ASC) as opfta_rank									   
									   
INTO team_season

FROM team_game_log INNER JOIN
	opteam_game_log on team_game_log.game_id = opteam_game_log.game_id INNER JOIN
	team on team.team_id = team_game_log.team_id INNER JOIN
	season on team_game_log.season_id = season.season_id JOIN
	player_season on team_game_log.team_id = player_season.team_id


GROUP BY team.team_id, season.season_id
ORDER BY team_id
GO

---------------------------------------------------------------------------------

--Creation for team wins table
--Wins
SELECT team.team_id, season.season_id, CONCAT('(',team.abbreviation,')', team.city, ' ', team.nickname) as Team, 
	   COUNT(team_game_log.score) as Wins
INTO team_wins
FROM GAME INNER JOIN
	team on game.team_id_winner = team.team_id JOIN --Our players' team
	team as loserTeam on game.team_id_loser = loserTeam.team_id INNER JOIN --Creating this as the "opteam" table
	team_game_log on team.team_id = team_game_log.team_id and team_game_log.game_id = game.game_id INNER JOIN --Getting this table for total team score
	opteam_game_log on loserTeam.team_id = opteam_game_log.opteam_id AND opteam_game_log.game_id = game.game_id INNER JOIN --Total team score for opteam
	season on season.season_id = game.season_id

WHERE team_game_log.score > opteam_game_log.opscore
GROUP BY CONCAT('(',team.abbreviation,')', team.city, ' ', team.nickname), team.team_id, season.season_id
GO

---------------------------------------------------------------------------------

--Creation for team losses table
--Losses
SELECT team.team_id, season.season_id, CONCAT('(',team.abbreviation,')', team.city, ' ', team.nickname) as Team,
	   COUNT(team_game_log.score) as Losses
INTO team_losses
FROM GAME INNER JOIN
	team on game.team_id_loser = team.team_id JOIN --Our players' team
	team as loserTeam on game.team_id_winner = loserTeam.team_id INNER JOIN --Creating this as the "opteam" table
	team_game_log on team.team_id = team_game_log.team_id and team_game_log.game_id = game.game_id INNER JOIN --Getting this table for total team score
	opteam_game_log on loserTeam.team_id = opteam_game_log.opteam_id AND opteam_game_log.game_id = game.game_id INNER JOIN --Total team score for opteam
	season on season.season_id = game.season_id

WHERE opteam_game_log.opscore > team_game_log.score
GROUP BY CONCAT('(',team.abbreviation,')', team.city, ' ', team.nickname), team.team_id, season.season_id
GO

---------------------------------------------------------------------------------

--Creates table for Eastern Conference teams
SELECT team.team_id, team.nickname
INTO team_east
FROM team
WHERE  team.abbreviation = 'BOS' OR
	   team.abbreviation = 'MIL' OR
	   team.abbreviation = 'BKN' OR
	   team.abbreviation = 'CLE' OR
	   team.abbreviation = 'PHI' OR
	   team.abbreviation = 'NYK' OR
	   team.abbreviation = 'IND' OR
	   team.abbreviation = 'MIA' OR
	   team.abbreviation = 'ATL' OR
	   team.abbreviation = 'TOR' OR
	   team.abbreviation = 'CHI' OR
	   team.abbreviation = 'WAS' OR
	   team.abbreviation = 'ORL' OR
	   team.abbreviation = 'CHA' OR
	   team.abbreviation = 'DET'
GO	   
	   
---------------------------------------------------------------------------------
	    
--Creates table for Western Conference teams
SELECT team.team_id, team.nickname
INTO team_west
FROM team
WHERE  team.abbreviation = 'DEN' OR
	   team.abbreviation = 'NOP' OR
	   team.abbreviation = 'MEM' OR
	   team.abbreviation = 'LAC' OR
	   team.abbreviation = 'PHX' OR
	   team.abbreviation = 'DAL' OR
	   team.abbreviation = 'SAC' OR
	   team.abbreviation = 'POR' OR
	   team.abbreviation = 'UTA' OR
	   team.abbreviation = 'GSW' OR
	   team.abbreviation = 'MIN' OR
	   team.abbreviation = 'OKC' OR
	   team.abbreviation = 'LAL' OR
	   team.abbreviation = 'SAS' OR
	   team.abbreviation = 'HOU'	   
GO	  

---------------------------------------------------------------------------------

--Creates temp table for pgl_injuries_w
SELECT	game.game_id,
		CAST(game.date as date) date, 
		team.team_id,
		team.nickname,
		team_game_log.score,
		player_game_log.wl,
		team2.team_id as oTeam_id,
		team2.nickname as oNickname,
		opteam_game_log.opscore as oScore,
		player.player_id, 
		player.player_name,
		ROUND(player_game_log.min,1) as min,
		player_game_log.pts,
		player_game_log.ast,
		player_game_log.reb,
		player_game_log.stl,
		player_game_log.blk,
		player_game_log.tov,
		player_game_log.fgm - player_game_log.fg3m as FG2M,
		player_game_log.fga - player_game_log.fg3a as FG2A,
		ROUND(player_game_log.fg_pct *100,1) as "fg_pct",
		player_game_log.ftm,
		player_game_log.fta,
		ROUND(player_game_log.ft_pct *100,1) as "DNP",
		player_game_log.fg3m as FG3M,
		player_game_log.fg3a as FG3A,
		ROUND(player_game_log.fg3_pct *100,1) as "fg3_pct",
		player_game_log.plus_minus

INTO pgl_injuries_w

FROM	game INNER JOIN
		team on game.team_id_winner = team.team_id INNER JOIN
		player_season on team.team_id = player_season.team_id LEFT JOIN
		player on player_season.player_id = player.player_id LEFT JOIN
		player_game_log on game.game_id = player_game_log.game_id AND team.team_id = player_game_log.team_id AND player_game_log.player_id = player_season.player_id INNER JOIN
		team as team2 on game.team_id_loser = team2.team_id INNER JOIN
		team_game_log on team.team_id = team_game_log.team_id AND game.game_id = team_game_log.game_id INNER JOIN 
		opteam_game_log on team2.team_id = opteam_game_log.opteam_id and game.game_id = opteam_game_log.game_id
GO



--Creates temp table for pgl_injuries_l
SELECT	game.game_id,
		CAST(game.date as date) date,
		team.team_id,
		team.nickname,
		team_game_log.score,
		player_game_log.wl,
		team2.team_id as oTeam_id,
		team2.nickname as oNickname,
		opteam_game_log.opscore as oScore,

		player.player_id, 
		player.player_name,
		ROUND(player_game_log.min,1) as min,
		player_game_log.pts,
		player_game_log.ast,
		player_game_log.reb,
		player_game_log.stl,
		player_game_log.blk,
		player_game_log.tov,
		player_game_log.fgm - player_game_log.fg3m as FG2M,
		player_game_log.fga - player_game_log.fg3a as FG2A,
		ROUND(player_game_log.fg_pct *100,1) as "fg_pct",
		player_game_log.ftm,
		player_game_log.fta,
		ROUND(player_game_log.ft_pct *100,1) as "ft_pct",
		player_game_log.fg3m as FG3M,
		player_game_log.fg3m as FG3A,
		ROUND(player_game_log.fg3_pct *100,1) as "fg3_pct",
		player_game_log.plus_minus

INTO pgl_injuries_l

FROM	game INNER JOIN
		team on game.team_id_loser = team.team_id INNER JOIN
		player_season on team.team_id = player_season.team_id LEFT JOIN
		player on player_season.player_id = player.player_id LEFT JOIN
		player_game_log on game.game_id = player_game_log.game_id AND team.team_id = player_game_log.team_id AND player_game_log.player_id = player_season.player_id INNER JOIN
		team as team2 on game.team_id_winner = team2.team_id INNER JOIN
		team_game_log on team.team_id = team_game_log.team_id AND game.game_id = team_game_log.game_id INNER JOIN 
		opteam_game_log on team2.team_id = opteam_game_log.opteam_id and game.game_id = opteam_game_log.game_id
GO

--Creates a temp table to insert the contents of both the team_loser and team_winner tables
SELECT x.* INTO player_game_log_injured_players FROM
	(SELECT * from pgl_injuries_w 

	UNION

	SELECT * from pgl_injuries_l)x
GO

--Drops redundant tables
drop table pgl_injuries_w
GO
drop table pgl_injuries_l
GO
------#####################################################################################
------#####################################################################################
------#####################################################################################
------------This section will update the tables with the appropriate key values------------
------#####################################################################################
------#####################################################################################
------#####################################################################################
ALTER TABLE team
ALTER COLUMN team_id int NOT NULL
GO
ALTER TABLE team
ADD primary key (team_id)
GO
---------------------------------------------------------------------------------
ALTER TABLE player	
ALTER COLUMN player_id int NOT NULL
GO
ALTER TABLE player	
ADD primary key (player_id)
GO
---------------------------------------------------------------------------------
ALTER TABLE season
ALTER COLUMN season_id int NOT NULL
GO
ALTER TABLE season
ADD primary key (season_id)
GO
---------------------------------------------------------------------------------
ALTER TABLE game	
ALTER COLUMN game_id int NOT NULL
GO
ALTER TABLE game
ADD primary key (game_id)
GO
ALTER TABLE game
ADD foreign key (team_id_winner) references team(team_id)
GO
ALTER TABLE game
ADD foreign key (season_id) references season(season_id)
GO
---------------------------------------------------------------------------------
ALTER TABLE player_game_log
ALTER COLUMN player_id int NOT NULL
GO
ALTER TABLE player_game_log
ALTER COLUMN game_id int NOT NULL
GO
ALTER TABLE player_game_log
ALTER COLUMN team_id int NOT NULL
GO
ALTER TABLE player_game_log WITH NOCHECK
ADD foreign key (player_id) references player(player_id)
GO
ALTER TABLE player_game_log
ADD foreign key (game_id) references game(game_id)
GO
ALTER TABLE player_game_log
ADD foreign key (team_id) references team(team_id)
GO
ALTER TABLE player_game_log
ADD foreign key (season_id) references season(season_id)
GO
---------------------------------------------------------------------------------
ALTER TABLE pgtt
DROP COLUMN id
GO
ALTER TABLE pgtt
ADD id int identity(1,1) primary key
GO
ALTER TABLE pgtt
ADD foreign key (team_id) references team(team_id)
GO
ALTER TABLE pgtt
ADD foreign key (season_id) references season(season_id)
GO
---------------------------------------------------------------------------------
ALTER TABLE player_season
drop column id
GO
ALTER TABLE player_season
ADD id int identity(1,1) primary key
GO
ALTER TABLE player_season WITH NOCHECK
ADD foreign key (player_id) references player(player_id)
GO
ALTER TABLE player_season
ADD foreign key (team_id) references team(team_id)
GO
ALTER TABLE player_season
ADD foreign key (season_id) references season(season_id)
GO
---------------------------------------------------------------------------------
ALTER TABLE team_game_log
ADD foreign key (season_id) references season(season_id)
GO
ALTER TABLE team_game_log
ADD foreign key (game_id) references game(game_id)
GO
---------------------------------------------------------------------------------
ALTER TABLE opteam_game_log
ADD foreign key (season_id) references season(season_id)
GO
ALTER TABLE opteam_game_log
ADD foreign key (game_id) references game(game_id)
GO
---------------------------------------------------------------------------------
ALTER TABLE team_season
ADD FOREIGN KEY (season_id) references season(season_id)
GO
ALTER TABLE team_season
ADD FOREIGN KEY (team_id) references team(team_id)
GO
---------------------------------------------------------------------------------
ALTER TABLE team_wins
ADD FOREIGN KEY (team_id) references team(team_id)
GO
ALTER TABLE team_wins
ADD FOREIGN KEY (season_id) references season(season_id)
GO
---------------------------------------------------------------------------------
ALTER TABLE team_losses
ADD FOREIGN KEY (team_id) references team(team_id)
GO
ALTER TABLE team_losses
ADD FOREIGN KEY (season_id) references season(season_id)
GO
---------------------------------------------------------------------------------
ALTER TABLE team_east
ADD FOREIGN KEY (team_id) references team(team_id)
GO
---------------------------------------------------------------------------------
ALTER TABLE team_west
ADD FOREIGN KEY (team_id) references team(team_id)
GO
---------------------------------------------------------------------------------
ALTER TABLE player_game_log_injured_players
ADD FOREIGN KEY (team_id) references team(team_id)
GO
ALTER TABLE player_game_log_injured_players
ADD FOREIGN KEY (game_id) references game(game_id)
GO
ALTER TABLE player_game_log_injured_players
ALTER COLUMN DNP varchar(10)
GO
UPDATE player_game_log_injured_players
SET DNP = 'DNP'

WHERE min IS NULL
GO
---------------------------------------------------------------------------------
----------------------------Stored Procedure Creation----------------------------
---------------------------------------------------------------------------------
--Stored procedure to retrive box score results for both teams in a specified matchup
----Returns results for each game, sorted by winning and losing team, then sorted by player minutes and points descending
------The team whose players' results are being displayed will appear first in the "Matchup" column
----Returns most recent games first
--drop procedure seasonbox 
--go
--drop procedure seasonbox_6players
--go
--drop procedure seasonbox_playergames
--go
--drop procedure seasonbox_playersinmatchupwin
--go
--drop procedure seasonbox_playersinwin
--go
CREATE PROCEDURE seasonbox
							@team1 varchar(255), @team2 varchar(255)
AS
SELECT	team.nickname as Team,
		CAST(game.date as date) as date, 
		player.player_name as Player,
		CONCAT(ROUND(team_season.ppg,0), 'ppg - ', team_season.apg, 'apg - ', team_season.rbpg, 'rbpg')				as "Team ppg - apg - rbpg",
		player_game_log.wl as Result,
		CONCAT(team_game_log.score, ' - ', opteam_game_log.opscore) as Score,
		ROUND(player_game_log.min,0) as MIN,
		player_game_log.pts as PTS, 
		player_game_log.ast as AST, 
		player_game_log.reb as REB,
		player_game_log.blk as BLK,
		player_game_log.stl as STL,
		player_game_log.pf as PF,	
		player_game_log.fgm - player_game_log.fg3m	as "FGM",
		player_game_log.fga - player_game_log.fg3a	as "FGA",
		CONCAT(player_game_log.fg_pct * 100, '%')	as "FG%",
		player_game_log.ftm							as FTM,		 
		player_game_log.fta							as FTA, 
		CONCAT(player_game_log.ft_pct * 100, '%')	as "FT%",
		player_game_log.fg3m						as "FG3M",
		player_game_log.fg3a						as "FG3A",
		CONCAT(player_game_log.fg3_pct * 100, '%')	as "FG3%",
		CONCAT(ROUND(opteam_season.op_ppg,0), ' PtsAlwd - Rank ', opteam_season.ptsallowed_rank)				as "OpPtsAlwd - Rank",
		opteam_season.opfgm							as "oFGM",
		opteam_season.opfga							as "oFGA",
		 
		CONCAT(opteam_season.opfgpct, '% Rank - ', opteam_season.opfgpct_rank) as "oFG% - Rank",
		opteam_season.opfg3m						as "oFG3M",
		opteam_season.opfg3a						as "oFG3A",
		 
		CONCAT(opteam_season.opfg3Pct, '% Rank - ', opteam_season.opfg3Pct_rank) as "oFG3% - Rank"
		
		

FROM game INNER JOIN
		team on game.team_id_winner = team.team_id JOIN --Our players' team
		team as loserTeam on game.team_id_loser = loserTeam.team_id INNER JOIN --"opteam" table, losing team from each matchup
		player_game_log on game.game_id = player_game_log.game_id  INNER JOIN --This is getting our players' game stats in each win
		player on player_game_log.player_id = player.player_id LEFT JOIN   --And for their names
		team_game_log on team.team_id = team_game_log.team_id and team_game_log.game_id = game.game_id INNER JOIN --Getting this table for total team score
		team_season on team.team_id = team_season.team_id  JOIN --Getting our players' team_season table here 
		team_season as opteam_season on loserTeam.team_id = opteam_season.team_id INNER JOIN --And getting the "opteam" team_season table here
		opteam_game_log on loserTeam.team_id = opteam_game_log.opteam_id AND opteam_game_log.game_id = game.game_id --Total team score for opteam


WHERE (CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname)=@team1 or CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname) = @team2)		AND 
	  (CONCAT('(',loserTeam.abbreviation, ') ', loserTeam.city, ' ', loserTeam.nickname)=@team1 or CONCAT('(',loserTeam.abbreviation, ') ', loserTeam.city, ' ', loserTeam.nickname) = @team2) AND 
	  player_game_log.wl = 'W'


UNION


SELECT	team.nickname as Team,
		CAST(game.date as date) as date, 
		player.player_name as Player,
		CONCAT(ROUND(team_season.ppg,0), 'ppg - ', team_season.apg, 'apg - ', team_season.rbpg, 'rbpg')				as "Team ppg - apg - rbpg",
		player_game_log.wl as Result,
		CONCAT(team_game_log.score, ' - ', opteam_game_log.opscore) as Score,
		ROUND(player_game_log.min,0) as MIN,
		player_game_log.pts as PTS, 
		player_game_log.ast as AST, 
		player_game_log.reb as REB,
		player_game_log.blk as BLK,
		player_game_log.stl as STL,
		player_game_log.pf as PF,
		player_game_log.fgm - player_game_log.fg3m as "FGM",
		player_game_log.fga - player_game_log.fg3a as "FGA",
		CONCAT(player_game_log.fg_pct * 100, '%')  as "FG%",
		player_game_log.ftm as FTM,		 
		player_game_log.fta as FTA, 
		CONCAT(player_game_log.ft_pct * 100, '%') as "FT%",
		player_game_log.fg3m as "FG3M",
		player_game_log.fg3a as "FG3A",
		CONCAT(player_game_log.fg3_pct * 100, '%')	as "FG3%",
		CONCAT(ROUND(opteam_season.op_ppg,0), ' PtsAlwd - Rank ', opteam_season.ptsallowed_rank)				as "OpPtsAlwd - Rank",
		opteam_season.opfgm							as "oFGM",
		opteam_season.opfga							as "oFGA",
		 
		CONCAT(opteam_season.opfgpct, '% Rank - ', opteam_season.opfgpct_rank) as "oFG% - Rank",
		opteam_season.opfg3m						as "oFG3M",
		opteam_season.opfg3a						as "oFG3A",
		 
		CONCAT(opteam_season.opfg3Pct, '% Rank - ', opteam_season.opfg3Pct_rank) as "oFG3% - Rank"
		

FROM game INNER JOIN
		team on game.team_id_loser = team.team_id JOIN --Joining the losing team from each matchup as the main table 
		team as winnerTeam on game.team_id_winner = winnerTeam.team_id INNER JOIN --Joining the winning team from each matchup
		player_game_log on game.game_id = player_game_log.game_id  INNER JOIN --Losing team's player stats
		player on player_game_log.player_id = player.player_id LEFT JOIN --And for their names
		team_game_log on team.team_id = team_game_log.team_id and team_game_log.game_id = game.game_id INNER JOIN --Losing team's stats
		team_season on team.team_id = team_season.team_id JOIN --Losing team season stats
		team_season as opteam_season on winnerTeam.team_id = opteam_season.team_id INNER JOIN --Winning team's stats again but as "opteam" 
		opteam_game_log on winnerTeam.team_id = opteam_game_log.opteam_id and opteam_game_log.game_id = game.game_id --Added this table to get opteam, or team2's, score

WHERE (CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname)=@team1 or CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname) = @team2)		AND 
	  (CONCAT('(',winnerTeam.abbreviation, ') ', winnerTeam.city, ' ', winnerTeam.nickname)=@team1 or CONCAT('(',winnerTeam.abbreviation, ') ', winnerTeam.city, ' ', winnerTeam.nickname) = @team2) AND  player_game_log.wl = 'L'
ORDER BY  date DESC, player_game_log.wl DESC, MIN DESC, PTS DESC
GO


--################################################################################################################################################################################################################################--
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
--################################################################################################################################################################################################################################--
--Stored procedure to retrieve box score results for up to six specified players in a particular matchup
----Enter as few players as you would like
----Returns results for each game, sorted by the date and winner and loser of each matchup, sorted by minutes, then points descending
----Returns most recent games first
--Enter the team names and player name(s)
----For example, @team1 = 'Pelicans',
-----------------@team2 = 'Suns',
-----------------@player= 'Brandon Ingram', and so on and so forth
CREATE PROCEDURE seasonbox_6players
									@team1 varchar(255), @team2 varchar(255), 
									@player varchar(255), @player1 varchar(255), @player2 varchar(255), @player3 varchar(255), @player4 varchar(255), @player5 varchar(255), 
									@player6 varchar(255), @player7 varchar(255), @player8 varchar(255), @player9 varchar(255), @player10 varchar(255), @player11 varchar(255)
AS
SELECT	team.nickname as Team,
		CAST(game.date as date) as date, 
		player.player_name as Player,
		CONCAT(ROUND(team_season.ppg,0), 'ppg - ', team_season.apg, 'apg - ', team_season.rbpg, 'rbpg')				as "Team ppg - apg - rbpg",
		player_game_log.wl as Result,
		CONCAT(team_game_log.score, ' - ', opteam_game_log.opscore) as Score,
		ROUND(player_game_log.min,0) as MIN,
		player_game_log.pts as PTS, 
		player_game_log.ast as AST, 
		player_game_log.reb as REB,
		player_game_log.blk as BLK,
		player_game_log.stl as STL,
		player_game_log.pf as PF,
		player_game_log.fgm - player_game_log.fg3m as "FGM",
		player_game_log.fga - player_game_log.fg3a as "FGA",
		CONCAT(player_game_log.fg_pct * 100, '%')  as "FG%",
		player_game_log.ftm as FTM,		 
		player_game_log.fta as FTA, 
		CONCAT(player_game_log.ft_pct * 100, '%') as "FT%",
		player_game_log.fg3m as "FG3M",
		player_game_log.fg3a as "FG3A",
		CONCAT(player_game_log.fg3_pct * 100, '%')	as "FG3%",
		CONCAT(ROUND(opteam_season.op_ppg,0), ' PtsAlwd - Rank ', opteam_season.ptsallowed_rank)				as "OpPtsAlwd - Rank",
		opteam_season.opfgm							as "oFGM",
		opteam_season.opfga							as "oFGA",
		 
		CONCAT(opteam_season.opfgpct, '% Rank - ', opteam_season.opfgpct_rank) as "oFG% - Rank",
		opteam_season.opfg3m						as "oFG3M",
		opteam_season.opfg3a						as "oFG3A",
		 
		CONCAT(opteam_season.opfg3Pct, '% Rank - ', opteam_season.opfg3Pct_rank) as "oFG3% - Rank"

FROM game INNER JOIN
		team on game.team_id_winner = team.team_id JOIN --Our players' team
		team as loserTeam on game.team_id_loser = loserTeam.team_id INNER JOIN --"opteam" table, losing team from each matchup
		player_game_log on game.game_id = player_game_log.game_id  INNER JOIN --This is getting our players' game stats in each win
		player on player_game_log.player_id = player.player_id LEFT JOIN   --And for their names
		team_game_log on team.team_id = team_game_log.team_id and team_game_log.game_id = game.game_id INNER JOIN --Getting this table for total team score
		team_season on team.team_id = team_season.team_id  JOIN --Getting our players' team_season table here 
		team_season as opteam_season on loserTeam.team_id = opteam_season.team_id INNER JOIN --And getting the "opteam" team_season table here
		opteam_game_log on loserTeam.team_id = opteam_game_log.opteam_id AND opteam_game_log.game_id = game.game_id --Total team score for opteam

WHERE (CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname)=@team1 or CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname) = @team2)		AND 
	  (CONCAT('(',loserTeam.abbreviation, ') ', loserTeam.city, ' ', loserTeam.nickname)=@team1 or CONCAT('(',loserTeam.abbreviation, ') ', loserTeam.city, ' ', loserTeam.nickname) = @team2) AND player_game_log.wl = 'W' AND (player.player_name = @player 
																																					 OR   player.player_name = @player1
																																					 OR   player.player_name = @player2
																																					 OR   player.player_name = @player3
																																					 OR   player.player_name = @player4
																																					 OR   player.player_name = @player5
																																					 OR   player.player_name = @player6
																																					 OR   player.player_name = @player7
																																					 OR   player.player_name = @player8
																																					 OR   player.player_name = @player9
																																					 OR   player.player_name = @player10
																																					 OR   player.player_name = @player11)
UNION


SELECT	team.nickname as Team,
		CAST(game.date as date) as date,  		
		player.player_name as Player,
		CONCAT(ROUND(team_season.ppg,0), 'ppg - ', team_season.apg, 'apg - ', team_season.rbpg, 'rbpg')				as "Team ppg - apg - rbpg",
		player_game_log.wl as Result,
		CONCAT(team_game_log.score, ' - ', opteam_game_log.opscore) as Score,
		ROUND(player_game_log.min,0) as MIN,
		player_game_log.pts as PTS, 
		player_game_log.ast as AST, 
		player_game_log.reb as REB,
		player_game_log.blk as BLK,
		player_game_log.stl as STL,
		player_game_log.pf as PF,
		player_game_log.fgm - player_game_log.fg3m as "FGM",
		player_game_log.fga - player_game_log.fg3a as "FGA",
		CONCAT(player_game_log.fg_pct * 100, '%')  as "FG%",
		player_game_log.ftm as FTM,		 
		player_game_log.fta as FTA, 
		CONCAT(player_game_log.ft_pct * 100, '%') as "FT%",
		player_game_log.fg3m as "FG3M",
		player_game_log.fg3a as "FG3A", 
		CONCAT(player_game_log.fg3_pct * 100, '%')	as "FG3%",
		CONCAT(ROUND(opteam_season.op_ppg,0), ' PtsAlwd - Rank ', opteam_season.ptsallowed_rank)				as "OpPtsAlwd - Rank",
		opteam_season.opfgm							as "oFGM",
		opteam_season.opfga							as "oFGA",
		 
		CONCAT(opteam_season.opfgpct, '% Rank - ', opteam_season.opfgpct_rank) as "oFG% - Rank",
		opteam_season.opfg3m						as "oFG3M",
		opteam_season.opfg3a						as "oFG3A",
		 
		CONCAT(opteam_season.opfg3Pct, '% Rank - ', opteam_season.opfg3Pct_rank) as "oFG3% - Rank"

FROM game INNER JOIN
		team on game.team_id_loser = team.team_id JOIN --Joining the losing team from each matchup as the main table 
		team as winnerTeam on game.team_id_winner = winnerTeam.team_id INNER JOIN --Joining the winning team from each matchup
		player_game_log on game.game_id = player_game_log.game_id  INNER JOIN --Losing team's player stats
		player on player_game_log.player_id = player.player_id LEFT JOIN --And for their names
		team_game_log on team.team_id = team_game_log.team_id and team_game_log.game_id = game.game_id INNER JOIN --Losing team's stats
		team_season on team.team_id = team_season.team_id JOIN --Losing team season stats
		team_season as opteam_season on winnerTeam.team_id = opteam_season.team_id INNER JOIN --Winning team's stats again but as "opteam" 
		opteam_game_log on winnerTeam.team_id = opteam_game_log.opteam_id and opteam_game_log.game_id = game.game_id --Added this table to get opteam, or team2's, score

WHERE (CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname)=@team1 or CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname) = @team2)		AND 
	  (CONCAT('(',winnerTeam.abbreviation, ') ', winnerTeam.city, ' ', winnerTeam.nickname)=@team1 or CONCAT('(',winnerTeam.abbreviation, ') ', winnerTeam.city, ' ', winnerTeam.nickname) = @team2) AND player_game_log.wl = 'L' AND (player.player_name = @player 
																																					 OR   player.player_name = @player1
																																					 OR   player.player_name = @player2
																																					 OR   player.player_name = @player3
																																					 OR   player.player_name = @player4
																																					 OR   player.player_name = @player5
																																					 OR   player.player_name = @player6
																																					 OR   player.player_name = @player7
																																					 OR   player.player_name = @player8
																																					 OR   player.player_name = @player9
																																					 OR   player.player_name = @player10
																																					 OR   player.player_name = @player11)
ORDER BY  date DESC, player_game_log.wl DESC, MIN DESC, PTS DESC
GO

--################################################################################################################################################################################################################################--
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
--################################################################################################################################################################################################################################--
--Stored procedure to retrieve box score results for up to six specified players in a particular matchup
----Enter as few players as you would like
----Returns results for each game, sorted by the date and winner and loser of each matchup, sorted by minutes, then points descending
----Returns most recent games first
--Enter the team name and player name(s)
----For example, @team1 = 'Pelicans',
-----------------@player= 'Zion Williamson', and so on and so forth
CREATE PROCEDURE seasonbox_playersinwin 
				 @player11 varchar(255), @player1 varchar(255), @player2 varchar(255), @player3 varchar(255), @player4 varchar(255), @player5 varchar(255), 
									@player6 varchar(255), @player7 varchar(255), @player8 varchar(255), @player9 varchar(255), @player10 varchar(255)
AS
SELECT	CONCAT('vs. ',  loserTeam.nickname) as Matchup,
		team.nickname as Team,
		CAST(game.date as date) as date, 
		player.player_name as Player,

		CONCAT(ROUND(team_season.ppg,0), 'ppg - ', team_season.apg, 'apg - ', team_season.rbpg, 'rbpg')				as "Team ppg - apg - rbpg",
		player_game_log.wl as Result,
		CONCAT(team_game_log.score, ' - ', opteam_game_log.opscore) as Score,
		ROUND(player_game_log.min,0) as MIN,
		player_game_log.pts as PTS, 
		player_game_log.ast as AST, 
		player_game_log.reb as REB,
		player_game_log.blk as BLK,
		player_game_log.stl as STL,
		player_game_log.pf as PF,
		player_game_log.fgm - player_game_log.fg3m as "FGM",
		player_game_log.fga - player_game_log.fg3a as "FGA",
		CONCAT(player_game_log.fg_pct * 100, '%')  as "FG%",
		player_game_log.ftm as FTM,		 
		player_game_log.fta as FTA, 
		CONCAT(player_game_log.ft_pct * 100, '%') as "FT%",
		player_game_log.fg3m as "FG3M",
		player_game_log.fg3a as "FG3A",
		CONCAT(player_game_log.fg3_pct * 100, '%')	as "FG3%",
		CONCAT(ROUND(opteam_season.op_ppg,0), ' PtsAlwd - Rank ', opteam_season.ptsallowed_rank)				as "OpPtsAlwd - Rank",
		opteam_season.opfgm							as "oFGM",
		opteam_season.opfga							as "oFGA",
		 
		CONCAT(opteam_season.opfgpct, '% Rank - ', opteam_season.opfgpct_rank) as "oFG% - Rank",
		opteam_season.opfg3m						as "oFG3M",
		opteam_season.opfg3a						as "oFG3A",
		 
		CONCAT(opteam_season.opfg3Pct, '% Rank - ', opteam_season.opfg3Pct_rank) as "oFG3% - Rank"

FROM game INNER JOIN
		team on game.team_id_winner = team.team_id JOIN --Our players' team
		team as loserTeam on game.team_id_loser = loserTeam.team_id INNER JOIN --"opteam" table 
		player_game_log on game.game_id = player_game_log.game_id  INNER JOIN --This is getting our players' game stats in each win
		player on player_game_log.player_id = player.player_id LEFT JOIN  --And for their names
		team_game_log on team.team_id = team_game_log.team_id and team_game_log.game_id = game.game_id INNER JOIN --Getting this table for total team score
		team_season on team.team_id = team_season.team_id  JOIN --Getting our players' team_season table here 
		team_season as opteam_season on loserTeam.team_id = opteam_season.team_id INNER JOIN --And getting the "opteam" team_season table here
		opteam_game_log on loserTeam.team_id = opteam_game_log.opteam_id AND opteam_game_log.game_id = game.game_id --Total team score for opteam

WHERE player_game_log.wl = 'W' AND (player.player_name = @player11 
																							  OR   player.player_name = @player1
																							  OR   player.player_name = @player2
																							  OR   player.player_name = @player3
																							  OR   player.player_name = @player4
																							  OR   player.player_name = @player5
																							  OR   player.player_name = @player6
																							  OR   player.player_name = @player7
																							  OR   player.player_name = @player8
																							  OR   player.player_name = @player9
																							  OR   player.player_name = @player10)
ORDER BY  date DESC, player_game_log.wl DESC, MIN DESC, PTS DESC
GO

--################################################################################################################################################################################################################################--
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
--################################################################################################################################################################################################################################--
--Stored procedure to retrieve box score results for up to six specified players in a particular matchup
----Enter as few players as you would like
----Returns results for each game, sorted by winner and loser the date of each matchup, sorted by minutes, then points descending
----Returns most recent games first
--Enter the team name and player name(s)
----For example, @team1  = 'Pelicans',
-----------------@team2  = 'Suns',
-----------------@player = 'Zion Williamson'
-----------------@player1= 'Chris Paul', and so on and so forth
CREATE PROCEDURE seasonbox_playersinmatchupwin
				 @team1 varchar(255), @team2 varchar(255), 
				 @player varchar(255), @player1 varchar(255), @player2 varchar(255), @player3 varchar(255), @player4 varchar(255), @player5 varchar(255), 
									@player6 varchar(255), @player7 varchar(255), @player8 varchar(255), @player9 varchar(255), @player10 varchar(255), @player11 varchar(255)
AS
SELECT	team.nickname as Team,
		CAST(game.date as date) as date,  
		player.player_name as Player,
		CONCAT(ROUND(team_season.ppg,0), 'ppg - ', team_season.apg, 'apg - ', team_season.rbpg, 'rbpg')				as "Team ppg - apg - rbpg",
		player_game_log.wl as Result,
		CONCAT(team_game_log.score, ' - ', opteam_game_log.opscore) as Score,
		ROUND(player_game_log.min,0) as MIN,
		player_game_log.pts as PTS, 
		player_game_log.ast as AST, 
		player_game_log.reb as REB,
		player_game_log.blk as BLK,
		player_game_log.stl as STL,
		player_game_log.pf as PF,
		player_game_log.fgm - player_game_log.fg3m as "FGM",
		player_game_log.fga - player_game_log.fg3a as "FGA",
		CONCAT(player_game_log.fg_pct * 100, '%')  as "FG%",
		player_game_log.ftm as FTM,		 
		player_game_log.fta as FTA, 
		CONCAT(player_game_log.ft_pct * 100, '%') as "FT%",
		player_game_log.fg3m as "FG3M",
		player_game_log.fg3a as "FG3A",
		CONCAT(player_game_log.fg3_pct * 100, '%')	as "FG3%",
		CONCAT(ROUND(opteam_season.op_ppg,0), ' PtsAlwd - Rank ', opteam_season.ptsallowed_rank)				as "OpPtsAlwd - Rank",
		opteam_season.opfgm							as "oFGM",
		opteam_season.opfga							as "oFGA",
		 
		CONCAT(opteam_season.opfgpct, '% Rank - ', opteam_season.opfgpct_rank) as "oFG% - Rank",
		opteam_season.opfg3m						as "oFG3M",
		opteam_season.opfg3a						as "oFG3A",
		 
		CONCAT(opteam_season.opfg3Pct, '% Rank - ', opteam_season.opfg3Pct_rank) as "oFG3% - Rank"

FROM game INNER JOIN
		team on game.team_id_winner = team.team_id JOIN --If team one has won in the matchup, builds out team table (Pelicans)
		team as loserTeam on game.team_id_loser = loserTeam.team_id INNER JOIN --Corresponding "oppteam" table (suns)
		player_game_log on game.game_id = player_game_log.game_id  INNER JOIN --Getting the player stats of the first team if they've won (Pels, Zion Williamson)
		player on player_game_log.player_id = player.player_id LEFT JOIN  --For player names
		team_game_log on team.team_id = team_game_log.team_id and team_game_log.game_id = game.game_id INNER JOIN --And the team's game log 
		team_season on team.team_id = team_season.team_id  JOIN --Getting our players' team_season table here 
		team_season as opteam_season on loserTeam.team_id = opteam_season.team_id INNER JOIN --And getting the "opteam" team_season table here
		opteam_game_log on loserTeam.team_id = opteam_game_log.opteam_id AND opteam_game_log.game_id = game.game_id --Total team score for opteam

WHERE (CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname)=@team1 AND CONCAT('(',loserTeam.abbreviation, ') ', loserTeam.city, ' ', loserTeam.nickname)=@team2)  AND player_game_log.wl = 'W' AND (player.player_name = @player 
																							  OR   player.player_name = @player1
																							  OR   player.player_name = @player2
																							  OR   player.player_name = @player3
																							  OR   player.player_name = @player4
																							  OR   player.player_name = @player5
																							  OR   player.player_name = @player6
																							  OR   player.player_name = @player7
																							  OR   player.player_name = @player8
																							  OR   player.player_name = @player9
																							  OR   player.player_name = @player10
																																					 OR   player.player_name = @player11)
UNION

SELECT	team.nickname as Team,
		CAST(game.date as date) as date, 
		player.player_name as Player,
		CONCAT(ROUND(team_season.ppg,0), 'ppg - ', team_season.apg, 'apg - ', team_season.rbpg, 'rbpg')				as "Team ppg - apg - rbpg",
		player_game_log.wl as Result,
		CONCAT(team_game_log.score, ' - ', opteam_game_log.opscore) as Score,
		ROUND(player_game_log.min,0) as MIN,
		player_game_log.pts as PTS, 
		player_game_log.ast as AST, 
		player_game_log.reb as REB,
		player_game_log.blk as BLK,
		player_game_log.stl as STL,
		player_game_log.pf as PF,
		player_game_log.fgm - player_game_log.fg3m as "FGM",
		player_game_log.fga - player_game_log.fg3a as "FGA",
		CONCAT(player_game_log.fg_pct * 100, '%')  as "FG%",
		player_game_log.ftm as FTM,		 
		player_game_log.fta as FTA, 
		CONCAT(player_game_log.ft_pct * 100, '%') as "FT%",
		player_game_log.fg3m as "FG3M",
		player_game_log.fg3a as "FG3A", 
		CONCAT(player_game_log.fg3_pct * 100, '%')	as "FG3%",
		CONCAT(ROUND(opteam_season.op_ppg,0), ' PtsAlwd - Rank ', opteam_season.ptsallowed_rank)				as "OpPtsAlwd - Rank",
		opteam_season.opfgm							as "oFGM",
		opteam_season.opfga							as "oFGA",
		 
		CONCAT(opteam_season.opfgpct, '% Rank - ', opteam_season.opfgpct_rank) as "oFG% - Rank",
		opteam_season.opfg3m						as "oFG3M",
		opteam_season.opfg3a						as "oFG3A",
		 
		CONCAT(opteam_season.opfg3Pct, '% Rank - ', opteam_season.opfg3Pct_rank) as "oFG3% - Rank"

FROM game INNER JOIN
		team on game.team_id_winner = team.team_id JOIN --This is our second team's table (Suns)
		team as loserTeam on game.team_id_loser = loserTeam.team_id INNER JOIN --This will be our first team, but here as "opteam" (Pelicans)
		player_game_log on game.game_id = player_game_log.game_id  INNER JOIN --Second team's players' stats in wins (suns, Chirs Paul)
		player on player_game_log.player_id = player.player_id LEFT JOIN --And for their names
		team_game_log on team.team_id = team_game_log.team_id and team_game_log.game_id = game.game_id INNER JOIN --Team2 game stats (suns)
		team_season on team.team_id = team_season.team_id JOIN --Team2 season stats
		team_season as opteam_season on loserTeam.team_id = opteam_season.team_id INNER JOIN --Team 1 stats again but as "opteam" 
		opteam_game_log on loserTeam.team_id = opteam_game_log.opteam_id and opteam_game_log.game_id = game.game_id --Added this table to get opteam, or team2's, score

WHERE ( CONCAT('(',loserTeam.abbreviation, ') ', loserTeam.city, ' ', loserTeam.nickname)=@team1 AND CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname)=@team2)  AND player_game_log.wl = 'W' AND (player.player_name = @player 
																							  OR   player.player_name = @player1
																							  OR   player.player_name = @player2
																							  OR   player.player_name = @player3
																							  OR   player.player_name = @player4
																							  OR   player.player_name = @player5
																							  OR   player.player_name = @player6
																							  OR   player.player_name = @player7
																							  OR   player.player_name = @player8
																							  OR   player.player_name = @player9
																							  OR   player.player_name = @player10
																																					 OR   player.player_name = @player11)
ORDER BY   date DESC, player_game_log.wl DESC, MIN DESC, PTS DESC
GO
--################################################################################################################################################################################################################################--
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
--################################################################################################################################################################################################################################--
--Stored procedure to retrieve box score results for up to six specified players from a particular team
----Enter as few players as you would like
----Returns results for each game, sorted by the date of each matchup, sorted by minutes, then points descending
----Returns most recent games first
--Enter the team name and player name(s)
----For example, @team1  = 'Pelicans',
-----------------@player = 'Zion Williamson'
-----------------@player1= 'Brandon Ingram', and so on and so forth
CREATE PROCEDURE seasonbox_playergames
				  @player1 varchar(255), @player2 varchar(255), @player3 varchar(255), @player4 varchar(255), @player5 varchar(255), 
									@player6 varchar(255), @player7 varchar(255), @player8 varchar(255), @player9 varchar(255), @player10 varchar(255), @player11 varchar(255)
AS									
SELECT	CONCAT('vs. ',  loserTeam.nickname) as Matchup,
		team.nickname as Team,
		CAST(game.date as date) as date, 
		player.player_name as Player,
		CONCAT(ROUND(team_season.ppg,0), 'ppg - ', team_season.apg, 'apg - ', team_season.rbpg, 'rbpg')				as "Team ppg - apg - rbpg",
		player_game_log.wl as Result,
		CONCAT(team_game_log.score, ' - ', opteam_game_log.opscore) as Score,
		ROUND(player_game_log.min,0) as MIN,
		player_game_log.pts as PTS, 
		player_game_log.ast as AST, 
		player_game_log.reb as REB,
		player_game_log.blk as BLK,
		player_game_log.stl as STL,
		player_game_log.pf as PF,
		player_game_log.fgm - player_game_log.fg3m as "FGM",
		player_game_log.fga - player_game_log.fg3a as "FGA",
		CONCAT(player_game_log.fg_pct * 100, '%')  as "FG%",
		player_game_log.ftm as FTM,		 
		player_game_log.fta as FTA, 
		CONCAT(player_game_log.ft_pct * 100, '%') as "FT%",
		player_game_log.fg3m as "FG3M",
		player_game_log.fg3a as "FG3A", 
		CONCAT(player_game_log.fg3_pct * 100, '%')	as "FG3%",
		CONCAT(ROUND(opteam_season.op_ppg,0), ' PtsAlwd - Rank ', opteam_season.ptsallowed_rank)				as "OpPtsAlwd - Rank",
		opteam_season.opfgm							as "oFGM",
		opteam_season.opfga							as "oFGA",
		 
		CONCAT(opteam_season.opfgpct, '% Rank - ', opteam_season.opfgpct_rank) as "oFG% - Rank",
		opteam_season.opfg3m						as "oFG3M",
		opteam_season.opfg3a						as "oFG3A",
		 
		CONCAT(opteam_season.opfg3Pct, '% Rank - ', opteam_season.opfg3Pct_rank) as "oFG3% - Rank"

FROM game INNER JOIN
		team on game.team_id_winner = team.team_id JOIN --Our players' team
		team as loserTeam on game.team_id_loser = loserTeam.team_id INNER JOIN --Creating this as the "opteam" table
		player_game_log on game.game_id = player_game_log.game_id  INNER JOIN --Tying our players to each specific game they logged minutes in
		player on player_game_log.player_id = player.player_id LEFT JOIN --Getting the game log to the player table for their names
		team_game_log on team.team_id = team_game_log.team_id and team_game_log.game_id = game.game_id INNER JOIN --Getting this table for total team score
		team_season on team.team_id = team_season.team_id  JOIN --Getting our players' team_season table here 
		team_season as opteam_season on loserTeam.team_id = opteam_season.team_id INNER JOIN --And getting the "opteam" team_season table here
		opteam_game_log on loserTeam.team_id = opteam_game_log.opteam_id AND opteam_game_log.game_id = game.game_id --Total team score for opteam

WHERE   player_game_log.wl = 'W' AND (player.player_name = @player11 
																							  OR   player.player_name = @player1
																							  OR   player.player_name = @player2
																							  OR   player.player_name = @player3
																							  OR   player.player_name = @player4
																							  OR   player.player_name = @player5
																							  OR   player.player_name = @player6
																							  OR   player.player_name = @player7
																							  OR   player.player_name = @player8
																							  OR   player.player_name = @player9
																							  OR   player.player_name = @player10)

UNION

SELECT	CONCAT('vs. ',team.nickname) as Matchup,
		loserTeam.nickname as Team,
		CAST(game.date as date) as date, 
		player.player_name as Player,
		CONCAT(ROUND(team_season.ppg,0), 'ppg - ', team_season.apg, 'apg - ', team_season.rbpg, 'rbpg')				as "Team ppg - apg - rbpg",
		player_game_log.wl as Result,
		CONCAT(team_game_log.score, ' - ', opteam_game_log.opscore) as Score,
		ROUND(player_game_log.min,0) as MIN,
		player_game_log.pts as PTS, 
		player_game_log.ast as AST, 
		player_game_log.reb as REB,
		player_game_log.blk as BLK,
		player_game_log.stl as STL,
		player_game_log.pf as PF,
		player_game_log.fgm - player_game_log.fg3m as "FGM",
		player_game_log.fga - player_game_log.fg3a as "FGA",
		CONCAT(player_game_log.fg_pct * 100, '%')  as "FG%",
		player_game_log.ftm as FTM,		 
		player_game_log.fta as FTA, 
		CONCAT(player_game_log.ft_pct * 100, '%') as "FT%",
		player_game_log.fg3m as "FG3M",
		player_game_log.fg3a as "FG3A", 
		CONCAT(player_game_log.fg3_pct * 100, '%')	as "FG3%",
		CONCAT(ROUND(opteam_season.op_ppg,0), ' PtsAlwd - Rank ', opteam_season.ptsallowed_rank)				as "OpPtsAlwd - Rank",
		opteam_season.opfgm							as "oFGM",
		opteam_season.opfga							as "oFGA",
		 
		CONCAT(opteam_season.opfgpct, '% Rank - ', opteam_season.opfgpct_rank) as "oFG% - Rank",
		opteam_season.opfg3m						as "oFG3M",
		opteam_season.opfg3a						as "oFG3A",
		 
		CONCAT(opteam_season.opfg3Pct, '% Rank - ', opteam_season.opfg3Pct_rank) as "oFG3% - Rank"

FROM game INNER JOIN
		team on game.team_id_winner = team.team_id JOIN --This is our "opteam" table
		team as loserTeam on game.team_id_loser = loserTeam.team_id INNER JOIN --Here, we have the team we are selecting in our execution as the loserTeam
		player_game_log on game.game_id = player_game_log.game_id  INNER JOIN --Our players' team again here
		player on player_game_log.player_id = player.player_id LEFT JOIN --And here
		team_game_log on loserTeam.team_id = team_game_log.team_id and team_game_log.game_id = game.game_id INNER JOIN --Our players' team, used for score
		team_season on loserTeam.team_id = team_season.team_id JOIN --Our players' team
		team_season as opteam_season on team.team_id = opteam_season.team_id INNER JOIN --"opteam" table again
		opteam_game_log on team.team_id = opteam_game_log.opteam_id and opteam_game_log.game_id = game.game_id --Added this table here to get opteam's score

WHERE  player_game_log.wl = 'L' AND (player.player_name = @player11 
																							  OR   player.player_name = @player1
																							  OR   player.player_name = @player2
																							  OR   player.player_name = @player3
																							  OR   player.player_name = @player4
																							  OR   player.player_name = @player5
																							  OR   player.player_name = @player6
																							  OR   player.player_name = @player7
																							  OR   player.player_name = @player8
																							  OR   player.player_name = @player9
																							  OR   player.player_name = @player10)
ORDER BY  date DESC, player_game_log.wl DESC, MIN DESC, PTS DESC
GO



--################################################################################################################################################################################################################################--
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
--################################################################################################################################################################################################################################--
--Procedure creations for all teams ranked by win percentage.
--One for east, west and league

---------------------------------------------------------------------------------
CREATE PROCEDURE east_rank
AS
SELECT team_wins.Team as "Eastern Conference", CONCAT(team_wins.Wins, '-', team_losses.Losses) as Record, CONCAT(ROUND(CAST(Wins as float)/(CAST(Wins as float)+CAST(Losses as float))*100,1),'%') as "Win Pct"
FROM team_wins INNER JOIN
	 team on team.team_id = team_wins.team_id INNER JOIN 
	 team_losses on team_wins.team_id = team_losses.team_id INNER JOIN
	 team_east on team_wins.team_id = team_east.team_id
	
ORDER BY CONCAT(ROUND(CAST(Wins as float)/(CAST(Wins as float)+CAST(Losses as float))*100,1),'%') DESC
GO

---------------------------------------------------------------------------------
CREATE PROCEDURE west_rank
AS
SELECT team_wins.Team as "Western Conference", CONCAT(team_wins.Wins, '-', team_losses.Losses) as Record, CONCAT(ROUND(CAST(Wins as float)/(CAST(Wins as float)+CAST(Losses as float))*100,1),'%') as "Win Pct"
FROM team_wins INNER JOIN
	 team on team.team_id = team_wins.team_id INNER JOIN 
	 team_losses on team_wins.team_id = team_losses.team_id INNER JOIN
	 team_west on team_wins.team_id = team_west.team_id
	
ORDER BY CONCAT(ROUND(CAST(Wins as float)/(CAST(Wins as float)+CAST(Losses as float))*100,1),'%') DESC
GO

---------------------------------------------------------------------------------
CREATE PROCEDURE rank
AS
SELECT team_wins.Team, CONCAT(team_wins.Wins, '-', team_losses.Losses) as Record, CONCAT(ROUND(CAST(Wins as float)/(CAST(Wins as float)+CAST(Losses as float))*100,1),'%') as "Win Pct"
FROM team_wins INNER JOIN
	 team on team.team_id = team_wins.team_id INNER JOIN 
	 team_losses on team_wins.team_id = team_losses.team_id INNER JOIN
	 team_east on team_wins.team_id = team_east.team_id
UNION

SELECT team_wins.Team, CONCAT(team_wins.Wins, '-', team_losses.Losses) as Record, CONCAT(ROUND(CAST(Wins as float)/(CAST(Wins as float)+CAST(Losses as float))*100,1),'%') as "Win Pct"

FROM team_wins INNER JOIN
	 team on team.team_id = team_wins.team_id INNER JOIN 
	 team_losses on team_wins.team_id = team_losses.team_id INNER JOIN
	 team_west on team_wins.team_id = team_west.team_id
	
ORDER BY CONCAT(ROUND(CAST(Wins as float)/(CAST(Wins as float)+CAST(Losses as float))*100,1),'%') DESC
GO

--################################################################################################################################################################################################################################--
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
--################################################################################################################################################################################################################################--
--Creates a stored procedure that returns the teams that played last night/today and who won
CREATE PROCEDURE yesterdaygames
AS
SELECT	team.nickname as Team,
		'' as "vs.",
		loserTeam.nickname as Matchup, 
CONCAT(team.nickname, ' ',team_game_log.result, 'in') as Result,
CONCAT(team_game_log.score ,' - ', opteam_game_log.opscore) as Score

FROM game INNER JOIN
		team on game.team_id_winner = team.team_id JOIN
		team as loserTeam on game.team_id_loser = loserTeam.team_id INNER JOIN
		team_game_log on team.team_id = team_game_log.team_id and team_game_log.game_id = game.game_id AND team_game_log.opteam_id = loserTeam.team_id INNER JOIN
		opteam_game_log on loserTeam.team_id = opteam_game_log.opteam_id AND opteam_game_log.game_id = game.game_id


WHERE game.date = DATEADD(day, -1, CAST(GETDATE() AS DATE)) OR game.date = CAST(GETDATE() AS DATE)
GO

--################################################################################################################################################################################################################################--
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
--################################################################################################################################################################################################################################--
CREATE PROCEDURE roster @team varchar(255) 
as
SELECT     player.player_name AS Roster,
		   player_season.age as Age,
		   player_season.gp as GP,
		   ROUND(	SUM(player_game_log.min/player_season.gp),0) as MIN,
		   ROUND(player_season.pts/player_season.gp,1) as PTS,
		   ROUND(player_season.ast/player_season.gp,1) as AST,
		   ROUND(player_season.reb/player_season.gp,1) as REB,	   
		   ROUND(	SUM(player_game_log.plus_minus)/player_season.gp,1) as "+/-",
		   ROUND(	SUM(player_game_log.fgm-player_game_log.fg3m)/player_season.gp,1)as "2FGM",		
		       
		   ROUND(	SUM(player_game_log.fga-player_game_log.fg3a)/player_season.gp,1) as "2FGA",
		   CONCAT(	ROUND(	SUM(player_game_log.fgm-player_game_log.fg3m)/SUM(player_game_log.fga-player_game_log.fg3a)*100,1), '%')	as "2FG%",
		   ROUND(	SUM(player_game_log.ftm)/player_season.gp,1)as "FTA",
		   
		   ROUND(	SUM(player_game_log.fta)/player_season.gp,1) as "FTM",
		   CONCAT(	ROUND(	SUM(player_game_log.ftm)/SUM(player_game_log.fta) * 100, 1),'%') as "FT%",
		   ROUND(	SUM(player_game_log.fg3m)/player_season.gp,1) as "3FGM",
		   
		   ROUND(	SUM(player_game_log.fg3a)/player_season.gp,1) as "3FGA",
		   CONCAT(	ROUND(	SUM(player_game_log.fg3m)/SUM(player_game_log.fg3a) * 100, 1),'%') as "3FG%",
		   ROUND(	SUM(player_game_log.stl)/player_season.gp,1) as STL,
		   ROUND(	SUM(player_game_log.blk)/player_season.gp,1) as BLK,
		   ROUND(	SUM(player_game_log.tov)/player_season.gp,1) as TOV,
		   CONCAT(player_season.oreb_pct*100,'%') as "OREB%",
		   CONCAT( player_season.dreb_pct*100,'%') as "DREB%",
		   CONCAT(player_season.usg_pct*100,'%') as "USG%",
		   CONCAT(player_season.ts_pct*100,'%') as "TS%",
		   CONCAT(player_season.ast_pct*100,'%') as "AST%"



FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN
						 team_season on team.team_id = team_season.team_id INNER JOIN
						 player_game_log on player_game_log.player_id = player.player_id
WHERE nickname = @team AND player_season.gp != 0  
GROUP BY player.player_name,
		   player_season.age,
		   
		   player_season.gp,
		   ROUND(player_season.pts/player_season.gp,1),
		   ROUND(player_season.ast/player_season.gp,1) ,
		   ROUND(player_season.reb/player_season.gp,1) ,
		   player_season.net_rating,
		   CONCAT(player_season.oreb_pct*100,'%'),
		   CONCAT( player_season.dreb_pct*100,'%'),
		   CONCAT(player_season.usg_pct*100,'%'),
		   CONCAT(player_season.ts_pct*100,'%'),
		   CONCAT(player_season.ast_pct*100,'%')
HAVING SUM(player_game_log.FTA) != 0		AND	SUM(player_game_log.fga)!= 0	AND SUM(player_game_log.fg3a) != 0	AND SUM(player_game_log.fta) != 0 AND SUM(player_game_log.fga-player_game_log.fg3a) != 0 	   	   
ORDER BY PTS DESC
GO
--################################################################################################################################################################################################################################--
CREATE PROCEDURE rosterseason @team varchar(255)
AS
SELECT     player.player_name AS Roster,
		   player_season.age as Age,
		   player_season.gp as GP,
		   ROUND(SUM(player_game_log.min),0) as MIN,
		   ROUND(SUM(player_game_log.pts),1) as PTS,
		   ROUND(SUM(player_game_log.ast),1) as AST,
		   ROUND(SUM(player_game_log.reb),1) as REB,	   
		   ROUND(	SUM(player_game_log.plus_minus),1) as "+/-",
		   ROUND(	SUM(player_game_log.fgm-player_game_log.fg3m)/player_season.gp,1)as "2FGM",		
		       
		   ROUND(	SUM(player_game_log.fga-player_game_log.fg3a)/player_season.gp,1) as "2FGA",
		   CONCAT(	ROUND(	SUM(player_game_log.fgm-player_game_log.fg3m)/SUM(player_game_log.fga-player_game_log.fg3a)*100,1), '%')	as "2FG%",
		   ROUND(	SUM(player_game_log.ftm)/player_season.gp,1)as "FTA",
		   
		   ROUND(	SUM(player_game_log.fta)/player_season.gp,1) as "FTM",
		   CONCAT(	ROUND(	SUM(player_game_log.ftm)/SUM(player_game_log.fta) * 100, 1),'%') as "FT%",
		   ROUND(	SUM(player_game_log.fg3m)/player_season.gp,1) as "3FGM",
		   
		   ROUND(	SUM(player_game_log.fg3a)/player_season.gp,1) as "3FGA",
		   CONCAT(	ROUND(	SUM(player_game_log.fg3m)/SUM(player_game_log.fg3a) * 100, 1),'%') as "3FG%",
		   ROUND(	SUM(player_game_log.stl),1) as STL,
		   ROUND(	SUM(player_game_log.blk),1) as BLK,
		   ROUND(	SUM(player_game_log.tov),1) as TOV,
		   CONCAT(player_season.oreb_pct*100,'%') as "OREB%",
		   CONCAT( player_season.dreb_pct*100,'%') as "DREB%",
		   CONCAT(player_season.usg_pct*100,'%') as "USG%",
		   CONCAT(player_season.ts_pct*100,'%') as "TS%",
		   CONCAT(player_season.ast_pct*100,'%') as "AST%",
		   SUM(player_game_log.dd2) as DD,
		   SUM(player_game_log.td3) as TD


FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN
						 team_season on team.team_id = team_season.team_id INNER JOIN
						 player_game_log on player_game_log.player_id = player.player_id
WHERE nickname = @team AND player_season.gp != 0 
GROUP BY player.player_name,
		   player_season.age,
		   
		   player_season.gp,
		   ROUND(player_season.pts/player_season.gp,1),
		   ROUND(player_season.ast/player_season.gp,1) ,
		   ROUND(player_season.reb/player_season.gp,1) ,
		   player_season.net_rating,
		   CONCAT(player_season.oreb_pct*100,'%'),
		   CONCAT( player_season.dreb_pct*100,'%'),
		   CONCAT(player_season.usg_pct*100,'%'),
		   CONCAT(player_season.ts_pct*100,'%'),
		   CONCAT(player_season.ast_pct*100,'%')
HAVING SUM(player_game_log.FTA) != 0		AND	SUM(player_game_log.fga)!= 0	AND SUM(player_game_log.fg3a) != 0	AND SUM(player_game_log.fta) != 0 AND SUM(player_game_log.fga-player_game_log.fg3a) != 0 
ORDER BY PTS DESC
GO
--################################################################################################################################################################################################################################--
CREATE PROCEDURE rosterperminute @team varchar(255) 
AS
SELECT     player.player_name AS Roster,
		   player_season.age as Age,
		   player_season.gp as GP,
		   ROUND(	SUM(player_game_log.min/player_season.gp),0) as MIN,
		   ROUND(ROUND(SUM(player_game_log.pts),2)/ROUND(SUM(player_game_log.min),2),2) as "PTS",
		   ROUND(ROUND(SUM(player_game_log.ast),2)/ROUND(SUM(player_game_log.min),2),2) as AST,
		   ROUND(ROUND(SUM(player_game_log.reb),2)/ROUND(SUM(player_game_log.min),2),2) as REB,	   
		   ROUND(ROUND(SUM(player_game_log.plus_minus),2)/ROUND(SUM(player_game_log.min),2),2) as "+/-",
		   ROUND(	ROUND(	SUM(player_game_log.fgm-player_game_log.fg3m),1)/ROUND(SUM(player_game_log.min),2),2)  as "2FGM",
		   
		   ROUND(	ROUND(	SUM(player_game_log.fga-player_game_log.fg3a),1)/ROUND(SUM(player_game_log.min),2),2) as "2FGA",
		   CONCAT(	ROUND(	SUM(player_game_log.fgm-player_game_log.fg3m)/SUM(player_game_log.fga-player_game_log.fg3a)*100,1), '%')	as "2FG%",		   		   
		   ROUND(	ROUND(	SUM(player_game_log.ftm),1)/ROUND(SUM(player_game_log.min),2),2)as "FTM",
		   
		   ROUND(	ROUND(	SUM(player_game_log.fta),1)/ROUND(SUM(player_game_log.min),2),2) as "FTA",
		   CONCAT(	ROUND(	SUM(player_game_log.ftm)/SUM(player_game_log.fta) * 100, 1),'%') as "FT%",
		   ROUND(	ROUND(	SUM(player_game_log.fg3m),1)/ROUND(SUM(player_game_log.min),2),2) as "3FGM",
		   
		   ROUND(	ROUND(	SUM(player_game_log.fg3a),1)/ROUND(SUM(player_game_log.min),2),2) as "3FGA",
		   CONCAT(	ROUND(	SUM(player_game_log.fg3m)/SUM(player_game_log.fg3a) * 100, 1),'%') as "3FG%"


FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN
						 team_season on team.team_id = team_season.team_id INNER JOIN
						 player_game_log on player_game_log.player_id = player.player_id
WHERE nickname = @team AND player_season.gp != 0 
GROUP BY player.player_name,
		   player_season.age,
		   
		   player_season.gp,
		   ROUND(player_season.pts/player_season.gp,1),
		   ROUND(player_season.ast/player_season.gp,1) ,
		   ROUND(player_season.reb/player_season.gp,1) ,
		   player_season.net_rating,
		   CONCAT(player_season.oreb_pct*100,'%'),
		   CONCAT( player_season.dreb_pct*100,'%'),
		   CONCAT(player_season.usg_pct*100,'%'),
		   CONCAT(player_season.ts_pct*100,'%'),
		   CONCAT(player_season.ast_pct*100,'%')
HAVING SUM(player_game_log.FTA) != 0		AND	SUM(player_game_log.fga)!= 0	AND SUM(player_game_log.fg3a) != 0 AND SUM(player_game_log.fta) != 0 AND SUM(player_game_log.fga-player_game_log.fg3a) != 0 
ORDER BY PTS DESC
GO

--################################################################################################################################################################################################################################--

CREATE PROCEDURE teampage @team varchar(255)
as
SELECT team.nickname,
[ppg] as PPG, 
ROUND(ppg-op_ppg,1) as "MoV",
[apg] as APG,
[rbpg] as RBPG,
[orbpg] as oRBPG,
[drbpg] as dRBPG,
team_season.fgm as FGM,
team_season.fga as FGA,
CONCAT(fgpct, '%') as "FG%",
team_season.fg3m as FG3M,
team_season.fg3a as FG3A,
CONCAT(fg3Pct, '%') as "FG3%",
[op_ppg] as opPPG,
[opapg]	 as opAPG,
[oprbpg] as opRBPG,
[oporbpg] as opORBPG,
[opdrbpg] as opDRBPG,
team_season.opfgm as opFGM,
team_season.opfga as opFGA,
CONCAT(opfgpct, '%') as "opFG%",
team_season.opfg3m as opFG3M,
team_season.opfg3a as opFG3A,
CONCAT(opfg3Pct, '%') as "opFG3%"

  FROM [nba].[dbo].[team_season] INNER JOIN team on team_season.team_id=team.team_id
  WHERE team.nickname = @team
  GO
--################################################################################################################################################################################################################################--
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
--################################################################################################################################################################################################################################--
CREATE PROCEDURE dnpTeams
AS 
SELECT   CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname) AS Team
FROM   team INNER JOIN
						 team_season on team.team_id = team_season.team_id INNER JOIN
						 team_wins on team.team_id = team_wins.team_id INNER JOIN 
						 team_losses on team.team_id = team_losses.team_id
GO
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE dnpRoster @team varchar(255)
AS
SELECT	     player.player_name as Player
		
FROM		 player INNER JOIN 
			 player_season on player.player_id = player_season.player_id INNER JOIN
			 team on player_season.team_id = team.team_id

WHERE		CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname) = @team
GO
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE dnp2p @team varchar(255), @player1 varchar(255), @player2 varchar(255)
AS
SELECT	CONCAT(ROUND(AVG(player_game_log_injured_players.score),1), ' - ', ROUND(AVG(player_game_log_injured_players.oScore),1)) as Score,
		player_game_log_injured_players.player_name,
		COUNT(player_game_log_injured_players.pts) as GP,
		
		ROUND(SUM(player_game_log_injured_players.min)/COUNT(player_game_log_injured_players.pts),1) as MIN,
		ROUND(SUM(player_game_log_injured_players.pts)/COUNT(player_game_log_injured_players.pts),1) as PTS,
		ROUND(SUM(player_game_log_injured_players.ast)/COUNT(player_game_log_injured_players.pts),1) as AST,
		ROUND(SUM(player_game_log_injured_players.reb)/COUNT(player_game_log_injured_players.pts),1) as REB,
		ROUND(SUM(player_game_log_injured_players.stl)/COUNT(player_game_log_injured_players.pts),1) as STL,
		ROUND(SUM(player_game_log_injured_players.blk)/COUNT(player_game_log_injured_players.blk),1) as BLK,
		ROUND(SUM(player_game_log_injured_players.FG2M)/COUNT(player_game_log_injured_players.pts),1) as "FG2M",
		ROUND(SUM(player_game_log_injured_players.FG2A)/COUNT(player_game_log_injured_players.pts),1) as "FG2A",
		ROUND(SUM(player_game_log_injured_players.ftm)/COUNT(player_game_log_injured_players.pts),1) as "FTM",
		ROUND(SUM(player_game_log_injured_players.fta)/COUNT(player_game_log_injured_players.pts),1) as "FTA",

		ROUND(SUM(player_game_log_injured_players.FG3M)/COUNT(player_game_log_injured_players.pts),1) as "FG3M",
		ROUND(SUM(player_game_log_injured_players.FG3A)/COUNT(player_game_log_injured_players.pts),1) as "FG3A"
FROM	player_game_log_injured_players JOIN
		player_game_log_injured_players as injured on player_game_log_injured_players.game_id = injured.game_id  
										AND player_game_log_injured_players.team_id = injured.team_id AND injured.player_name = @player1 JOIN
		player_game_log_injured_players as injured2 on player_game_log_injured_players.game_id = injured2.game_id  
										AND player_game_log_injured_players.team_id = injured2.team_id AND injured2.player_name = @player2 INNER JOIN
		team_game_log on player_game_log_injured_players.team_id = team_game_log.team_id AND player_game_log_injured_players.game_id = team_game_log.game_id INNER JOIN
		team on team_game_log.team_id = team.team_id

		

WHERE	CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname) = @team AND injured.dnp = 'DNP' AND injured2.dnp = 'DNP' 
GROUP BY player_game_log_injured_players.player_name

ORDER BY MIN DESC
GO
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE dnp @team varchar(255), @player1 varchar(255)
AS
SELECT	CONCAT(ROUND(AVG(player_game_log_injured_players.score),1), ' - ', ROUND(AVG(player_game_log_injured_players.oScore),1)) as Score,
		player_game_log_injured_players.player_name,
		COUNT(player_game_log_injured_players.pts) as GP,
		
		ROUND(SUM(player_game_log_injured_players.min)/COUNT(player_game_log_injured_players.pts),1) as MIN,
		ROUND(SUM(player_game_log_injured_players.pts)/COUNT(player_game_log_injured_players.pts),1) as PTS,
		ROUND(SUM(player_game_log_injured_players.ast)/COUNT(player_game_log_injured_players.pts),1) as AST,
		ROUND(SUM(player_game_log_injured_players.reb)/COUNT(player_game_log_injured_players.pts),1) as REB,
		ROUND(SUM(player_game_log_injured_players.stl)/COUNT(player_game_log_injured_players.pts),1) as STL,
		ROUND(SUM(player_game_log_injured_players.blk)/COUNT(player_game_log_injured_players.blk),1) as BLK,
		ROUND(SUM(player_game_log_injured_players.FG2M)/COUNT(player_game_log_injured_players.pts),1) as "FG2M",
		ROUND(SUM(player_game_log_injured_players.FG2A)/COUNT(player_game_log_injured_players.pts),1) as "FG2A",
		ROUND(SUM(player_game_log_injured_players.ftm)/COUNT(player_game_log_injured_players.pts),1) as "FTM",
		ROUND(SUM(player_game_log_injured_players.fta)/COUNT(player_game_log_injured_players.pts),1) as "FTA",

		ROUND(SUM(player_game_log_injured_players.FG3M)/COUNT(player_game_log_injured_players.pts),1) as "FG3M",
		ROUND(SUM(player_game_log_injured_players.FG3A)/COUNT(player_game_log_injured_players.pts),1) as "FG3A"
FROM	player_game_log_injured_players JOIN
		player_game_log_injured_players as injured on player_game_log_injured_players.game_id = injured.game_id  
										AND player_game_log_injured_players.team_id = injured.team_id AND injured.player_name = @player1 INNER JOIN
		team_game_log on player_game_log_injured_players.team_id = team_game_log.team_id AND player_game_log_injured_players.game_id = team_game_log.game_id INNER JOIN
		team on team_game_log.team_id = team.team_id

		

WHERE	CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname) = @team AND injured.dnp = 'DNP'  
GROUP BY player_game_log_injured_players.player_name

ORDER BY MIN DESC
GO
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE dnpW @team varchar(255), @player1 varchar(255)
AS
SELECT	CONCAT(ROUND(AVG(player_game_log_injured_players.score),1), ' - ', ROUND(AVG(player_game_log_injured_players.oScore),1)) as Score,
		player_game_log_injured_players.player_name,
		COUNT(player_game_log_injured_players.pts) as GP,
		
		ROUND(SUM(player_game_log_injured_players.min)/COUNT(player_game_log_injured_players.pts),1) as MIN,
		ROUND(SUM(player_game_log_injured_players.pts)/COUNT(player_game_log_injured_players.pts),1) as PTS,
		ROUND(SUM(player_game_log_injured_players.ast)/COUNT(player_game_log_injured_players.pts),1) as AST,
		ROUND(SUM(player_game_log_injured_players.reb)/COUNT(player_game_log_injured_players.pts),1) as REB,
		ROUND(SUM(player_game_log_injured_players.stl)/COUNT(player_game_log_injured_players.pts),1) as STL,
		ROUND(SUM(player_game_log_injured_players.blk)/COUNT(player_game_log_injured_players.blk),1) as BLK,
		ROUND(SUM(player_game_log_injured_players.FG2M)/COUNT(player_game_log_injured_players.pts),1) as "FG2M",
		ROUND(SUM(player_game_log_injured_players.FG2A)/COUNT(player_game_log_injured_players.pts),1) as "FG2A",
		ROUND(SUM(player_game_log_injured_players.ftm)/COUNT(player_game_log_injured_players.pts),1) as "FTM",
		ROUND(SUM(player_game_log_injured_players.fta)/COUNT(player_game_log_injured_players.pts),1) as "FTA",

		ROUND(SUM(player_game_log_injured_players.FG3M)/COUNT(player_game_log_injured_players.pts),1) as "FG3M",
		ROUND(SUM(player_game_log_injured_players.FG3A)/COUNT(player_game_log_injured_players.pts),1) as "FG3A"
FROM	player_game_log_injured_players JOIN
		player_game_log_injured_players as injured on player_game_log_injured_players.game_id = injured.game_id  
										AND player_game_log_injured_players.team_id = injured.team_id AND injured.player_name = @player1 INNER JOIN
		team_game_log on player_game_log_injured_players.team_id = team_game_log.team_id AND player_game_log_injured_players.game_id = team_game_log.game_id INNER JOIN
		team on team_game_log.team_id = team.team_id 
		
		
WHERE	CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname) = @team AND injured.dnp = 'DNP'   AND player_game_log_injured_players.wl = 'W'
GROUP BY player_game_log_injured_players.player_name
ORDER BY MIN DESC
GO
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE dnp2pW @team varchar(255), @player1 varchar(255), @player2 varchar(255)
AS
SELECT	CONCAT(ROUND(AVG(player_game_log_injured_players.score),1), ' - ', ROUND(AVG(player_game_log_injured_players.oScore),1)) as Score,
		player_game_log_injured_players.player_name,
		COUNT(player_game_log_injured_players.pts) as GP,
		
		ROUND(SUM(player_game_log_injured_players.min)/COUNT(player_game_log_injured_players.pts),1) as MIN,
		ROUND(SUM(player_game_log_injured_players.pts)/COUNT(player_game_log_injured_players.pts),1) as PTS,
		ROUND(SUM(player_game_log_injured_players.ast)/COUNT(player_game_log_injured_players.pts),1) as AST,
		ROUND(SUM(player_game_log_injured_players.reb)/COUNT(player_game_log_injured_players.pts),1) as REB,
		ROUND(SUM(player_game_log_injured_players.stl)/COUNT(player_game_log_injured_players.pts),1) as STL,
		ROUND(SUM(player_game_log_injured_players.blk)/COUNT(player_game_log_injured_players.blk),1) as BLK,
		ROUND(SUM(player_game_log_injured_players.FG2M)/COUNT(player_game_log_injured_players.pts),1) as "FG2M",
		ROUND(SUM(player_game_log_injured_players.FG2A)/COUNT(player_game_log_injured_players.pts),1) as "FG2A",
		ROUND(SUM(player_game_log_injured_players.ftm)/COUNT(player_game_log_injured_players.pts),1) as "FTM",
		ROUND(SUM(player_game_log_injured_players.fta)/COUNT(player_game_log_injured_players.pts),1) as "FTA",

		ROUND(SUM(player_game_log_injured_players.FG3M)/COUNT(player_game_log_injured_players.pts),1) as "FG3M",
		ROUND(SUM(player_game_log_injured_players.FG3A)/COUNT(player_game_log_injured_players.pts),1) as "FG3A"
FROM	player_game_log_injured_players JOIN
		player_game_log_injured_players as injured on player_game_log_injured_players.game_id = injured.game_id  
										AND player_game_log_injured_players.team_id = injured.team_id AND injured.player_name = @player1 JOIN
		player_game_log_injured_players as injured2 on player_game_log_injured_players.game_id = injured2.game_id  
										AND player_game_log_injured_players.team_id = injured2.team_id AND injured2.player_name = @player2 INNER JOIN
		team_game_log on player_game_log_injured_players.team_id = team_game_log.team_id AND player_game_log_injured_players.game_id = team_game_log.game_id INNER JOIN
		team on team_game_log.team_id = team.team_id

		

WHERE	CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname) = @team AND injured.dnp = 'DNP' AND injured2.dnp = 'DNP' AND player_game_log_injured_players.wl = 'W'
GROUP BY player_game_log_injured_players.player_name
ORDER BY MIN DESC
GO
--################################################################################################################################################################################################################################--
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
--################################################################################################################################################################################################################################--
CREATE PROCEDURE teamspage
AS
SELECT   CONCAT('(',team.abbreviation, ')', team.city, ' ', team.nickname) AS Team,
team_wins.Wins as Wins,
team_losses.Losses as Losses,
CONCAT(ROUND(CAST(Wins as float)/(CAST(Wins as float)+CAST(Losses as float))*100,1),'%') as "Win Pct",
ROUND(team_season.ppg,1) as PPG,
ROUND(ROUND(team_season.ppg,1)-ROUND(team_season.op_ppg,1),1) as MoV, 
team_season.apg as APG, 
team_season.rbpg as RBPG,
team_season.orbpg as oRBPG, 
team_season.drbpg as dRBPG,  
team_season.fgm as FGM, 
team_season.fga as FGA,
CONCAT(team_season.fgpct, '%') as "FG%",
team_season.fgpct_rank as "FG% Rank",
team_season.ftm as FTM, 
team_season.fta as FTA,
CONCAT(team_season.ftpct, '%') as "FT%",
team_season.ftpct_rank as "FT% Rank",
team_season.fg3m as FG3M, 
team_season.fg3a as FG3A,
CONCAT(team_season.fg3Pct, '%') as "FG3%",
team_season.fg3Pct_rank as "FG3% Rank"
FROM   team INNER JOIN
						 team_season on team.team_id = team_season.team_id INNER JOIN
						 team_wins on team.team_id = team_wins.team_id INNER JOIN 
						 team_losses on team.team_id = team_losses.team_id
ORDER BY [Win Pct] DESC
GO
---------------------------------------------------------------------------------
CREATE PROCEDURE oTeamspage
AS
SELECT   CONCAT('(',team.abbreviation, ')', team.city, ' ', team.nickname) AS Team,
team_wins.Wins as Wins,
team_losses.Losses as Losses,
CONCAT(ROUND(CAST(Wins as float)/(CAST(Wins as float)+CAST(Losses as float))*100,1),'%') as "Win Pct", 
ROUND(team_season.op_ppg,1) as oPPG,
ROUND(ROUND(team_season.op_ppg,1)-ROUND(team_season.ppg,1),1) as oMoV, 
team_season.opapg as oAPG, 
team_season.oprbpg as oRBPG,
team_season.oporbpg as oORBPG, 
team_season.opdrbpg as oDRBPG,  
team_season.opfgm as oFGM, 
team_season.opfga as oFGA,
CONCAT(team_season.opfgpct, '%') as "oFG%",
team_season.opfgpct_rank as "oFG% Rank",
team_season.opftm as oFTM, 
team_season.opfta as oFTA,
CONCAT(team_season.opftpct, '%') as "oFT%",
team_season.opftpct_rank as "oFT% Rank",
team_season.opfg3m as oFG3M, 
team_season.opfg3a as oFG3A,
CONCAT(team_season.opfg3Pct, '%') as "oFG3%",
team_season.opfg3Pct_rank as "oFG3% Rank"
FROM   team INNER JOIN
						 team_season on team.team_id = team_season.team_id INNER JOIN
						 team_wins on team.team_id = team_wins.team_id INNER JOIN 
						 team_losses on team.team_id = team_losses.team_id
ORDER BY [Win Pct] DESC
GO
--################################################################################################################################################################################################################################--
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
-------------##########################################################################################################################################################################################################-------------
--################################################################################################################################################################################################################################--
CREATE PROCEDURE pelicans 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'Pelicans'
GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE "76ers" 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = '76ers'
GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE bucks 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'bucks'
GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE bulls 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'Bulls'
GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE cavaliers 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'Cavaliers'
GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE celtics 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'celtics'
GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE clippers 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'clippers'
GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE grizzlies 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'grizzlies'
GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE hawks 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'hawks' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE heat 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'heat' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE hornets 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'hornets' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE jazz 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'jazz' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE kings 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'kings' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE knicks 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'knicks' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE lakers 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'lakers' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE magic 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'magic' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE mavericks 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'mavericks' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE nets 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'nets' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE nuggets 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'nuggets' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE pacers 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'pacers' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE pistons 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'pistons' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE raptors 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'raptors' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE rockets 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'rockets' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE spurs 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'spurs' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE suns 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'suns' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE thunder 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'thunder' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE timberwolves 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'timberwolves' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE trailblazers 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'trail blazers' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE warriors 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'warriors' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO

CREATE PROCEDURE wizards 
AS
SELECT player_name

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN player_game_log on player.player_id = player_game_log.player_id

where team.nickname = 'wizards' GROUP BY player.player_name ORDER BY SUM(player_game_log.pts) DESC
GO
--------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------------

CREATE TABLE distance(
distance_id int identity(1,1),
distance varchar(10)
primary key (distance_id))
GO

CREATE TABLE shotVerb(
shotVerb_id int identity(1,1),
verb varchar(10),
primary key (shotVerb_id))
GO

CREATE TABLE shotDescriptor(
shotDescriptor_id int identity(1,1),
descriptor varchar(20),
primary key (shotDescriptor_id))
GO

CREATE TABLE shotType(
shotType_id int identity(1,1),
shot varchar(15),
primary key (shotType_id))
GO

CREATE TABLE shots(
team_id int,
player_id int,
distance_id int,
shotVerb_id int,
shotVerb1_id int,
shotDescriptor_id int,
shotDescriptor1_id int,
shotDescriptor2_id int,
shotType_id int,
make int,
miss int,
fg int,
foreign key (team_id) references team(team_id),
foreign key (player_id) references player(player_id),
foreign key (distance_id) references distance(distance_id),
foreign key (shotVerb_id) references shotVerb(shotVerb_id),
foreign key (shotVerb1_id) references shotVerb(shotVerb_id),
foreign key (shotType_id) references shotType(shotType_id),
foreign key (shotDescriptor_id) references shotDescriptor(shotDescriptor_id),
foreign key (shotDescriptor1_id) references shotDescriptor(shotDescriptor_id),
foreign key (shotDescriptor2_id) references shotDescriptor(shotDescriptor_id))
GO


INSERT INTO distance (distance)  values ('1 Foot') 
INSERT INTO distance (distance)  values ('2 Foot') 
INSERT INTO distance (distance)  values ('3 Foot') 
INSERT INTO distance (distance)  values ('4 Foot') 
INSERT INTO distance (distance)  values ('5 Foot') 
INSERT INTO distance (distance)  values ('6 Foot') 
INSERT INTO distance (distance)  values ('7 Foot') 
INSERT INTO distance (distance)  values ('8 Foot') 
INSERT INTO distance (distance)  values ('9 Foot') 
INSERT INTO distance (distance)  values ('10 Foot') 
INSERT INTO distance (distance)  values ('11 Foot') 
INSERT INTO distance (distance)  values ('12 Foot') 
INSERT INTO distance (distance)  values ('13 Foot') 
INSERT INTO distance (distance)  values ('14 Foot') 
INSERT INTO distance (distance)  values ('15 Foot') 
INSERT INTO distance (distance)  values ('16 Foot') 
INSERT INTO distance (distance)  values ('17 Foot') 
INSERT INTO distance (distance)  values ('18 Foot') 
INSERT INTO distance (distance)  values ('19 Foot') 
INSERT INTO distance (distance)  values ('20 Foot') 
INSERT INTO distance (distance)  values ('21 Foot') 
INSERT INTO distance (distance)  values ('22 Foot') 
INSERT INTO distance (distance)  values ('23 Foot') 
INSERT INTO distance (distance)  values ('24 Foot') 
INSERT INTO distance (distance)  values ('25 Foot') 
INSERT INTO distance (distance)  values ('26 Foot') 
INSERT INTO distance (distance)  values ('27 Foot') 
INSERT INTO distance (distance)  values ('28 Foot') 
INSERT INTO distance (distance)  values ('29 Foot') 
INSERT INTO distance (distance)  values ('30 Foot') 
INSERT INTO distance (distance)  values ('31 Foot') 
INSERT INTO distance (distance)  values ('32 Foot') 
INSERT INTO distance (distance)  values ('33 Foot') 
INSERT INTO distance (distance)  values ('34 Foot') 
INSERT INTO distance (distance)  values ('35 Foot') 
INSERT INTO distance (distance)  values ('36 Foot') 
INSERT INTO distance (distance)  values ('37 Foot') 
INSERT INTO distance (distance)  values ('38 Foot') 
INSERT INTO distance (distance)  values ('39 Foot') 
INSERT INTO distance (distance)  values ('40 Foot') 
INSERT INTO distance (distance)  values ('41 Foot') 
INSERT INTO distance (distance)  values ('42 Foot') 
INSERT INTO distance (distance)  values ('43 Foot') 
INSERT INTO distance (distance)  values ('44 Foot') 
INSERT INTO distance (distance)  values ('45 Foot') 
INSERT INTO distance (distance)  values ('46 Foot') 
INSERT INTO distance (distance)  values ('47 Foot') 
INSERT INTO distance (distance)  values ('48 Foot') 
INSERT INTO distance (distance)  values ('49 Foot') 
INSERT INTO distance (distance)  values ('50 Foot') 
INSERT INTO distance (distance)  values ('51 Foot') 
INSERT INTO distance (distance)  values ('52 Foot') 
INSERT INTO distance (distance)  values ('53 Foot') 
INSERT INTO distance (distance)  values ('54 Foot') 
INSERT INTO distance (distance)  values ('55 Foot') 
INSERT INTO distance (distance)  values ('56 Foot') 
INSERT INTO distance (distance)  values ('57 Foot') 
INSERT INTO distance (distance)  values ('58 Foot') 
INSERT INTO distance (distance)  values ('59 Foot') 
INSERT INTO distance (distance)  values ('60 Foot') 
INSERT INTO distance (distance)  values ('61 Foot') 
INSERT INTO distance (distance)  values ('62 Foot') 
INSERT INTO distance (distance)  values ('63 Foot') 
INSERT INTO distance (distance)  values ('64 Foot') 
INSERT INTO distance (distance)  values ('65 Foot') 
INSERT INTO distance (distance)  values ('66 Foot') 
INSERT INTO distance (distance)  values ('67 Foot') 
INSERT INTO distance (distance)  values ('68 Foot') 
INSERT INTO distance (distance)  values ('69 Foot') 
INSERT INTO distance (distance)  values ('70 Foot') 
INSERT INTO distance (distance)  values ('71 Foot') 
INSERT INTO distance (distance)  values ('72 Foot') 
INSERT INTO distance (distance)  values ('73 Foot') 
INSERT INTO distance (distance)  values ('74 Foot') 
INSERT INTO distance (distance)  values ('75 Foot') 
INSERT INTO distance (distance)  values ('76 Foot') 
INSERT INTO distance (distance)  values ('77 Foot') 
INSERT INTO distance (distance)  values ('78 Foot') 
INSERT INTO distance (distance)  values ('79 Foot') 
INSERT INTO distance (distance)  values ('80 Foot') 
INSERT INTO distance (distance)  values ('81 Foot') 
INSERT INTO distance (distance)  values ('82 Foot') 
INSERT INTO distance (distance)  values ('83 Foot') 
INSERT INTO distance (distance)  values ('84 Foot') 
INSERT INTO distance (distance)  values ('85 Foot') 
INSERT INTO distance (distance)  values ('86 Foot') 
INSERT INTO distance (distance)  values ('87 Foot') 
INSERT INTO distance (distance)  values ('88 Foot') 
INSERT INTO distance (distance)  values ('89 Foot') 
INSERT INTO distance (distance)  values ('90 Foot') 
INSERT INTO distance (distance)  values ('91 Foot') 
INSERT INTO distance (distance)  values ('92 Foot') 
INSERT INTO distance (distance)  values ('93 Foot')
INSERT INTO distance (distance)  values ('94 Foot')

INSERT INTO shotVerb (verb)  values ('Running') 
INSERT INTO shotVerb (verb)  values ('Driving') 
INSERT INTO shotVerb (verb)  values ('Floating')
INSERT INTO shotVerb (verb)  values ('Cutting')
INSERT INTO shotVerb (verb)  values ('')
--INSERT INTO shotVerb (verb)  values ('Driving Floating')

INSERT INTO shotDescriptor (descriptor)  values ('Turnaround')
INSERT INTO shotDescriptor (descriptor)  values ('Pull-Up')
INSERT INTO shotDescriptor (descriptor)  values ('Hook')
INSERT INTO shotDescriptor (descriptor)  values ('Step Back') 
INSERT INTO shotDescriptor (descriptor)  values ('Tip') 
INSERT INTO shotDescriptor (descriptor)  values ('Bank')
INSERT INTO shotDescriptor (descriptor)  values ('Finger Roll') 
INSERT INTO shotDescriptor (descriptor)  values ('Putback') 
INSERT INTO shotDescriptor (descriptor)  values ('Reverse') 
INSERT INTO shotDescriptor (descriptor)  values ('Fadeaway') 
INSERT INTO shotDescriptor (descriptor)  values ('Alley Oop')
INSERT INTO shotDescriptor (descriptor)  values ('')
--INSERT INTO shotDescriptor (descriptor)  values ('Turnaround Hook')
--INSERT INTO shotDescriptor (descriptor)  values ('Turnaround Bank')
--INSERT INTO shotDescriptor (descriptor)  values ('Turnaround Bank Hook')
--INSERT INTO shotDescriptor (descriptor)  values ('Turnaround Fadeaway')
--INSERT INTO shotDescriptor (descriptor)  values ('Turnaround Fadeaway Bank')  
--INSERT INTO shotDescriptor (descriptor)  values ('Pull-Up Bank')  --Pullup
--INSERT INTO shotDescriptor (descriptor)  values ('Hook Bank') 
--INSERT INTO shotDescriptor (descriptor)  values ('Step Back Bank') 
--INSERT INTO shotDescriptor (descriptor)  values ('Bank Hook')

INSERT INTO shotType (shot)  values ('Jump Shot') --Jumper
INSERT INTO shotType (shot)  values ('Layup') 
INSERT INTO shotType (shot)  values ('Dunk')
INSERT INTO shotType (shot)  values ('Shot') 
GO

CREATE procedure insertShots	@team_id int, 
								@player_id int, 
								@distance_id int, 
								@shotVerb_id int,
								@shotVerb1_id int,
								@shotDescriptor_id int,
								@shotDescriptor1_id int,
								@shotDescriptor2_id int,
								@shotType_id int,
								@make int,
								@miss int,
								@fg int
as
insert into shots values(
@team_id,
@player_id,
@distance_id,
@shotVerb_id,
@shotVerb1_id,
@shotDescriptor_id,
@shotDescriptor1_id,
@shotDescriptor2_id,
@shotType_id,
@make,
@miss,
@fg)
GO

CREATE PROCEDURE dropShots
AS
DROP TABLE shots
GO
CREATE PROCEDURE createShots
as
CREATE TABLE dbo.shots(
team_id int,
player_id int,
distance_id int,
shotVerb_id int,
shotVerb1_id int,
shotDescriptor_id int,
shotDescriptor1_id int,
shotDescriptor2_id int,
shotType_id int,
make int,
miss int,
fg int,
foreign key (team_id) references team(team_id),
foreign key (player_id) references player(player_id),
foreign key (distance_id) references distance(distance_id),
foreign key (shotVerb_id) references shotVerb(shotVerb_id),
foreign key (shotVerb1_id) references shotVerb(shotVerb_id),
foreign key (shotType_id) references shotType(shotType_id),
foreign key (shotDescriptor_id) references shotDescriptor(shotDescriptor_id),
foreign key (shotDescriptor1_id) references shotDescriptor(shotDescriptor_id),
foreign key (shotDescriptor2_id) references shotDescriptor(shotDescriptor_id))
GO

CREATE PROCEDURE shotsPbp
AS
SELECT		pbp.id,
			pbp.home_description as description,
			team.nickname as team,
			player_season.gp,
			pbp.period as quarter,
			pbp.event_msg_type_id, 
			player.player_id, 
			team.team_id, 
			pbp.game_id,
			CAST(game.date as date) as date,  
			opteam.nickname,
			opteam.team_id opteam_id
			

FROM		pbp	 INNER JOIN
			game on pbp.game_id = game.game_id INNER JOIN
			player on pbp.player1_id = player.player_id INNER JOIN
			team on pbp.player1_team_id = team.team_id INNER JOIN
			team_game_log on team.team_id =  team_game_log.team_id AND game.game_id = team_game_log.game_id INNER JOIN
			team as opTeam on team_game_log.opteam_id = opTeam.team_id INNER JOIN
			player_season on player.player_id = player_season.player_id 
			
WHERE		(pbp.event_msg_type_id = 1 OR pbp.event_msg_type_id = 2) 
			AND pbp.home_description IS NOT NULL 
UNION

SELECT		pbp.id,
			pbp.visitor_description as description,
			team.nickname as team,			
			player_season.gp,
			pbp.period as quarter,
			pbp.event_msg_type_id, 
			player.player_id, 
			team.team_id, 
			pbp.game_id,
			CAST(game.date as date) as date, 
			opteam.nickname,
			opteam.team_id opteam_id
			
			
			
FROM		pbp	 INNER JOIN
			game on pbp.game_id = game.game_id INNER JOIN
			player on pbp.player1_id = player.player_id INNER JOIN
			team on pbp.player1_team_id = team.team_id INNER JOIN
			team_game_log on team.team_id =  team_game_log.team_id AND game.game_id = team_game_log.game_id INNER JOIN
			team as opTeam on team_game_log.opteam_id = opTeam.team_id INNER JOIN
			player_season on player.player_id = player_season.player_id 
			
WHERE		(pbp.event_msg_type_id = 1 OR pbp.event_msg_type_id = 2)
			AND pbp.visitor_description IS NOT NULL 
ORDER BY	pbp.game_id DESC
GO
--DROP VIEW shotsView
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE VIEW shotsView
-----------------------------------------------------------------------------
AS
SELECT  nickname as Team,
player_name as Player, 
distance as Distance,
RTRIM(LTRIM(CONCAT(shotVerb.verb,' ', sV1.verb))) as Verb,
RTRIM(LTRIM(CONCAT(shotDescriptor.descriptor, ' ', sD1.descriptor, ' ', sD2.descriptor))) as Descriptor,
shotType.shot as Shot,
make as Make,
miss as Miss,
fg as Pt
  FROM  shots INNER JOIN 
		team on shots.team_id = team.team_id INNER JOIN
		player on shots.player_id = player.player_id INNER JOIN 
		distance on shots.distance_id = distance.distance_id INNER JOIN 
		shotVerb on shots.shotVerb_id = shotVerb.shotVerb_id   JOIN
		shotVerb as sV1 on shots.shotVerb1_id = sV1.shotVerb_id INNER JOIN
		shotDescriptor on shots.shotDescriptor_id = shotDescriptor.shotDescriptor_id JOIN
		shotDescriptor as sD1 on shots.shotDescriptor1_id = sD1.shotDescriptor_id JOIN
		shotDescriptor as sD2 on shots.shotDescriptor2_id = sD2.shotDescriptor_id INNER JOIN
		shotType on shots.shotType_id = shotType.shotType_id
GO
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE PROCEDURE shotsProcedure @player varchar(50)
-----------------------------------------------------------------------------
AS
SELECT	shotsView.Shot,
		sum(case when Make = 1 then 1 else 0 end) AS FGM,
		count(Player) as FGA,
		CONCAT(ROUND(CAST(sum(case when Make = 1 then 1 else 0 end) as float) / count(Player),3)*100, '%') as "FG%"
		
FROM		shotsView
WHERE		player = @player
GROUP BY	shotsView.Shot
ORDER BY FGA DESC
GO
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE view shots1_5
-----------------------------------------------------------------------------
AS
SELECT	player Player,
		CONCAT(CAST(LEFT(distance,2) as int), ' Foot') as Distance,
			
		LTRIM(CONCAT(shotsView.Verb, ' ', shotsView.Descriptor, ' ',shotsView.Shot)) as Shot,	
		sum(case when Make = 1 then 1 else 0 end) AS FGM,
		count(Player) as FGA,
		
		CONCAT(ROUND(CAST(sum(case when Make = 1 then 1 else 0 end) as float) / count(Player),3)*100, '%') as "FG%"
		
FROM		shotsView

WHERE		 CAST(LEFT(distance,2) as int) <= 5 AND CAST(LEFT(distance,2) as int) >= 1

GROUP BY	shotsView.Shot, CAST(LEFT(distance,2) as int), LTRIM(CONCAT(shotsView.Verb, ' ', shotsView.Descriptor, ' ',shotsView.Shot)), player
GO
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE PROCEDURE shotsP1_5 @player varchar(255)
-----------------------------------------------------------------------------
AS
SELECT		Shot,
			SUM(FGM) as FGM,
			SUM(FGA) as FGA,
			CONCAT(ROUND(CAST(SUM(FGM)as float)/CAST(SUM(FGA)as float) ,3) *100, '%') "FG%"

FROM		shots1_5
WHERE Player = @player AND FGA >= 2
GROUP BY Shot
ORDER BY FGA DESC
GO
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE view shots5_10
-----------------------------------------------------------------------------
AS
SELECT	player Player,
		CONCAT(CAST(LEFT(distance,2) as int), ' Foot') as Distance,
			
		LTRIM(CONCAT(shotsView.Verb, ' ', shotsView.Descriptor, ' ',shotsView.Shot)) as Shot,	
		sum(case when Make = 1 then 1 else 0 end) AS FGM,
		count(Player) as FGA,
		
		CONCAT(ROUND(CAST(sum(case when Make = 1 then 1 else 0 end) as float) / count(Player),3)*100, '%') as "FG%"
		
FROM		shotsView

WHERE		 CAST(LEFT(distance,2) as int) <= 10 AND CAST(LEFT(distance,2) as int) >= 5

GROUP BY	shotsView.Shot, CAST(LEFT(distance,2) as int), LTRIM(CONCAT(shotsView.Verb, ' ', shotsView.Descriptor, ' ',shotsView.Shot)), player
GO
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE PROCEDURE shotsP5_10 @player varchar(255)
-----------------------------------------------------------------------------
AS
SELECT		Shot,
			SUM(FGM) as FGM,
			SUM(FGA) as FGA,
			CONCAT(ROUND(CAST(SUM(FGM)as float)/CAST(SUM(FGA)as float) ,3) *100, '%') "FG%"

FROM		shots5_10
WHERE  Player = @player AND FGA >= 2
GROUP BY  Shot
ORDER BY FGA DESC
GO
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE view shots10_23
-----------------------------------------------------------------------------
AS
SELECT	player Player,
		CONCAT(CAST(LEFT(distance,2) as int), ' Foot') as Distance,
			
		LTRIM(CONCAT(shotsView.Verb, ' ', shotsView.Descriptor, ' ',shotsView.Shot)) as Shot,	
		sum(case when Make = 1 then 1 else 0 end) AS FGM,
		count(Player) as FGA,
		
		CONCAT(ROUND(CAST(sum(case when Make = 1 then 1 else 0 end) as float) / count(Player),3)*100, '%') as "FG%"
		
FROM		shotsView

WHERE		 CAST(LEFT(distance,2) as int) <= 23 AND CAST(LEFT(distance,2) as int) >= 10

GROUP BY	shotsView.Shot, CAST(LEFT(distance,2) as int), LTRIM(CONCAT(shotsView.Verb, ' ', shotsView.Descriptor, ' ',shotsView.Shot)), player
GO
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE PROCEDURE shotsP10_23 @player varchar(255)
-----------------------------------------------------------------------------
AS
SELECT		Shot,
			SUM(FGM) as FGM,
			SUM(FGA) as FGA,
			CONCAT(ROUND(CAST(SUM(FGM)as float)/CAST(SUM(FGA)as float) ,3) *100, '%') "FG%"

FROM		shots10_23
WHERE  Player = @player AND FGA >= 2
GROUP BY  Shot
ORDER BY FGA DESC
GO
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE view shots3Pt
-----------------------------------------------------------------------------
AS
SELECT	player Player,
		CONCAT(CAST(LEFT(distance,2) as int), ' Foot') as Distance,
			
		LTRIM(CONCAT(shotsView.Verb, ' ', shotsView.Descriptor, ' ',shotsView.Shot)) as Shot,	
		sum(case when Make = 1 then 1 else 0 end) AS FGM,
		count(Player) as FGA,
		
		CONCAT(ROUND(CAST(sum(case when Make = 1 then 1 else 0 end) as float) / count(Player),3)*100, '%') as "FG%"
		
FROM		shotsView

WHERE		 CAST(LEFT(distance,2) as int) <= 90 AND CAST(LEFT(distance,2) as int) >= 24

GROUP BY	shotsView.Shot, CAST(LEFT(distance,2) as int), LTRIM(CONCAT(shotsView.Verb, ' ', shotsView.Descriptor, ' ',shotsView.Shot)), player
GO
-----------------------------------------------------------------------------
-----------------------------------------------------------------------------
CREATE PROCEDURE shotsP3Pt @player varchar(255)
-----------------------------------------------------------------------------
AS
SELECT		Shot,
			SUM(FGM) as FGM,
			SUM(FGA) as FGA,
			CONCAT(ROUND(CAST(SUM(FGM)as float)/CAST(SUM(FGA)as float) ,3) *100, '%') "FG%"

FROM		shots3Pt
WHERE Player = @player AND FGA >= 2
GROUP BY Shot
ORDER BY FGA DESC
GO
-----------------------------
CREATE PROCEDURE winAvg @team varchar(25)
AS
SELECT		p.player_name AS Player,
			ROUND(SUM(pgl.min)/sum(case when pgl.wl = 'W' then 1 else 0 end),1) as MPG,
			ROUND(SUM(pgl.pts)/sum(case when pgl.wl = 'W' then 1 else 0 end),1) as PPG,
			ROUND(SUM(pgl.ast)/sum(case when pgl.wl = 'W' then 1 else 0 end),1) as APG,
			ROUND(SUM(pgl.reb)/sum(case when pgl.wl = 'W' then 1 else 0 end),1) as RPG,
			ROUND((SUM(pgl.fgm)-SUM(pgl.fg3m))/sum(case when pgl.wl = 'W' then 1 else 0 end),1) as "2FGM",
			ROUND((SUM(pgl.fga)-SUM(pgl.fg3a))/sum(case when pgl.wl = 'W' then 1 else 0 end),1) as "2FGA",
			ROUND(SUM(pgl.fg3m)/sum(case when pgl.wl = 'W' then 1 else 0 end),1) as "3FGM",
			ROUND(SUM(pgl.fg3a)/sum(case when pgl.wl = 'W' then 1 else 0 end),1) as "3FGA",
			ROUND(SUM(pgl.ftm)/sum(case when pgl.wl = 'W' then 1 else 0 end),1) as "FTM",
			ROUND(SUM(pgl.fTa)/sum(case when pgl.wl = 'W' then 1 else 0 end),1) as "FTA",
			ROUND(SUM(pgl.stl)/sum(case when pgl.wl = 'W' then 1 else 0 end),1) as SPG,
			ROUND(SUM(pgl.blk)/sum(case when pgl.wl = 'W' then 1 else 0 end),1) as BPG

FROM            player p LEFT OUTER JOIN
                         player_season ps ON p.player_id = ps.player_id LEFT OUTER JOIN
                         team t ON ps.team_id = t.team_id  INNER JOIN
						 player_game_log pgl on pgl.player_id = p.player_id


WHERE			pgl.wl = 'W' 
and t.nickname = @team

GROUP BY		p.player_name
ORDER BY PPG DESC
GO
----------------------------------------------
CREATE PROCEDURE q1P
AS
SELECT		pbp.id,
			pbp.home_description as description,
			team.nickname as team,
			player_season.gp,
			pbp.period as quarter,
			pbp.event_msg_type_id, 
			player.player_id,		
			team.team_id, 
			pbp.game_id,
			CAST(game.date as date) as date,  
			opteam.nickname,
			opteam.team_id opteam_id,
			pbp.player2_id


FROM		pbp	 INNER JOIN
			game on pbp.game_id = game.game_id INNER JOIN
			player on pbp.player1_id = player.player_id INNER JOIN
			team on pbp.player1_team_id = team.team_id INNER JOIN
			team_game_log on team.team_id =  team_game_log.team_id AND game.game_id = team_game_log.game_id INNER JOIN
			team as opTeam on team_game_log.opteam_id = opTeam.team_id INNER JOIN
			player_season on player.player_id = player_season.player_id 
			
WHERE		(pbp.event_msg_type_id = 1 OR pbp.event_msg_type_id = 2 OR pbp.event_msg_type_id = 3 OR pbp.event_msg_type_id = 4)
			AND pbp.home_description IS NOT NULL AND pbp.period = 1 
UNION

SELECT		pbp.id,
			pbp.visitor_description as description,
			team.nickname as team,			
			player_season.gp,
			pbp.period as quarter,
			pbp.event_msg_type_id, 
			player.player_id, 
			team.team_id, 
			pbp.game_id,
			CAST(game.date as date) as date,  
			opteam.nickname,
			opteam.team_id opteam_id,
			pbp.player2_id
			
			
			
FROM		pbp	 INNER JOIN
			game on pbp.game_id = game.game_id INNER JOIN
			player on pbp.player1_id = player.player_id INNER JOIN
			team on pbp.player1_team_id = team.team_id INNER JOIN
			team_game_log on team.team_id =  team_game_log.team_id AND game.game_id = team_game_log.game_id INNER JOIN
			team as opTeam on team_game_log.opteam_id = opTeam.team_id INNER JOIN
			player_season on player.player_id = player_season.player_id 
			
WHERE		(pbp.event_msg_type_id = 1 OR pbp.event_msg_type_id = 2 OR pbp.event_msg_type_id = 3 OR pbp.event_msg_type_id = 4)
			AND pbp.visitor_description IS NOT NULL AND pbp.period = 1 
ORDER BY	pbp.game_id DESC
GO

CREATE procedure q1Insert		@team_id int, 
								@player_id int, 
								@points int, 
								@assists int,
								@rebounds int,
								@fgm int,
								@fga int,
								@fg3m int,
								@fg3a int,
								@ftm int,
								@fta int
as
insert into q1 values(
@team_id, 
@player_id, 
@points, 
@assists,
@rebounds,
@fgm,
@fga,
@fg3m,
@fg3a,
@ftm,
@fta) 
GO

CREATE procedure q1LogInsert	@team_id int,
								@matchup_id int,
								@date date, 
								@player_id int, 
								@points int, 
								@assists int,
								@rebounds int,
								@fgm int,
								@fga int,
								@fg3m int,
								@fg3a int,
								@ftm int,
								@fta int
as
insert into q1Log values(
@team_id,
@matchup_id,
@date, 
@player_id, 
@points, 
@assists,
@rebounds,
@fgm,
@fga,
@fg3m,
@fg3a,
@ftm,
@fta)  
GO
--#####################################################################################################
--
--#####################################################################################################
-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
CREATE PROCEDURE q2P
AS
SELECT		pbp.id,
			pbp.home_description as description,
			team.nickname as team,
			player_season.gp,
			pbp.period as quarter,
			pbp.event_msg_type_id, 
			player.player_id,		
			team.team_id, 
			pbp.game_id,
			CAST(game.date as date) as date,  
			opteam.nickname,
			opteam.team_id opteam_id,
			pbp.player2_id

FROM		pbp	 INNER JOIN
			game on pbp.game_id = game.game_id INNER JOIN
			player on pbp.player1_id = player.player_id INNER JOIN
			team on pbp.player1_team_id = team.team_id INNER JOIN
			team_game_log on team.team_id =  team_game_log.team_id AND game.game_id = team_game_log.game_id INNER JOIN
			team as opTeam on team_game_log.opteam_id = opTeam.team_id INNER JOIN
			player_season on player.player_id = player_season.player_id 
			
WHERE		(pbp.event_msg_type_id = 1 OR pbp.event_msg_type_id = 2 OR pbp.event_msg_type_id = 3 OR pbp.event_msg_type_id = 4)
			AND pbp.home_description IS NOT NULL AND pbp.period = 2
UNION

SELECT		pbp.id,
			pbp.visitor_description as description,
			team.nickname as team,			
			player_season.gp,
			pbp.period as quarter,
			pbp.event_msg_type_id, 
			player.player_id, 
			team.team_id, 
			pbp.game_id,
			CAST(game.date as date) as date,  
			opteam.nickname,
			opteam.team_id opteam_id,
			pbp.player2_id
			
			
			
FROM		pbp	 INNER JOIN
			game on pbp.game_id = game.game_id INNER JOIN
			player on pbp.player1_id = player.player_id INNER JOIN
			team on pbp.player1_team_id = team.team_id INNER JOIN
			team_game_log on team.team_id =  team_game_log.team_id AND game.game_id = team_game_log.game_id INNER JOIN
			team as opTeam on team_game_log.opteam_id = opTeam.team_id INNER JOIN
			player_season on player.player_id = player_season.player_id 
			
WHERE		(pbp.event_msg_type_id = 1 OR pbp.event_msg_type_id = 2 OR pbp.event_msg_type_id = 3 OR pbp.event_msg_type_id = 4)
			AND pbp.visitor_description IS NOT NULL AND pbp.period = 2
ORDER BY	pbp.game_id DESC
GO


CREATE procedure q2Insert		@team_id int, 
								@player_id int, 
								@points int, 
								@assists int,
								@rebounds int,
								@fgm int,
								@fga int,
								@fg3m int,
								@fg3a int,
								@ftm int,
								@fta int
as
insert into q2 values(
@team_id, 
@player_id, 
@points, 
@assists,
@rebounds,
@fgm,
@fga,
@fg3m,
@fg3a,
@ftm,
@fta) 
GO

CREATE procedure q2LogInsert	@team_id int,
								@matchup_id int,
								@date date, 
								@player_id int, 
								@points int, 
								@assists int,
								@rebounds int,
								@fgm int,
								@fga int,
								@fg3m int,
								@fg3a int,
								@ftm int,
								@fta int
as
insert into q2Log values(
@team_id,
@matchup_id,
@date, 
@player_id, 
@points, 
@assists,
@rebounds,
@fgm,
@fga,
@fg3m,
@fg3a,
@ftm,
@fta)  
GO

--#####################################################################################################
--
--#####################################################################################################
-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
CREATE PROCEDURE q3P
AS
SELECT		pbp.id,
			pbp.home_description as description,
			team.nickname as team,
			player_season.gp,
			pbp.period as quarter,
			pbp.event_msg_type_id, 
			player.player_id,		
			team.team_id, 
			pbp.game_id,
			CAST(game.date as date) as date,  
			opteam.nickname,
			opteam.team_id opteam_id,
			pbp.player2_id

FROM		pbp	 INNER JOIN
			game on pbp.game_id = game.game_id INNER JOIN
			player on pbp.player1_id = player.player_id INNER JOIN
			team on pbp.player1_team_id = team.team_id INNER JOIN
			team_game_log on team.team_id =  team_game_log.team_id AND game.game_id = team_game_log.game_id INNER JOIN
			team as opTeam on team_game_log.opteam_id = opTeam.team_id INNER JOIN
			player_season on player.player_id = player_season.player_id 
			
WHERE		(pbp.event_msg_type_id = 1 OR pbp.event_msg_type_id = 2 OR pbp.event_msg_type_id = 3 OR pbp.event_msg_type_id = 4)
			AND pbp.home_description IS NOT NULL AND pbp.period = 3
UNION

SELECT		pbp.id,
			pbp.visitor_description as description,
			team.nickname as team,			
			player_season.gp,
			pbp.period as quarter,
			pbp.event_msg_type_id, 
			player.player_id, 
			team.team_id, 
			pbp.game_id,
			CAST(game.date as date) as date,  
			opteam.nickname,
			opteam.team_id opteam_id,
			pbp.player2_id
			
			
			
FROM		pbp	 INNER JOIN
			game on pbp.game_id = game.game_id INNER JOIN
			player on pbp.player1_id = player.player_id INNER JOIN
			team on pbp.player1_team_id = team.team_id INNER JOIN
			team_game_log on team.team_id =  team_game_log.team_id AND game.game_id = team_game_log.game_id INNER JOIN
			team as opTeam on team_game_log.opteam_id = opTeam.team_id INNER JOIN
			player_season on player.player_id = player_season.player_id 
			
WHERE		(pbp.event_msg_type_id = 1 OR pbp.event_msg_type_id = 2 OR pbp.event_msg_type_id = 3 OR pbp.event_msg_type_id = 4)
			AND pbp.visitor_description IS NOT NULL AND pbp.period = 3
ORDER BY	pbp.game_id DESC
GO
CREATE procedure q3Insert		@team_id int, 
								@player_id int, 
								@points int, 
								@assists int,
								@rebounds int,
								@fgm int,
								@fga int,
								@fg3m int,
								@fg3a int,
								@ftm int,
								@fta int
as
insert into q3 values(
@team_id, 
@player_id, 
@points, 
@assists,
@rebounds,
@fgm,
@fga,
@fg3m,
@fg3a,
@ftm,
@fta) 
GO

CREATE procedure q3LogInsert	@team_id int,
								@matchup_id int,
								@date date, 
								@player_id int, 
								@points int, 
								@assists int,
								@rebounds int,
								@fgm int,
								@fga int,
								@fg3m int,
								@fg3a int,
								@ftm int,
								@fta int
as
insert into q3Log values(
@team_id,
@matchup_id,
@date, 
@player_id, 
@points, 
@assists,
@rebounds,
@fgm,
@fga,
@fg3m,
@fg3a,
@ftm,
@fta)  
GO
--#####################################################################################################
--
--#####################################################################################################

-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------------
CREATE PROCEDURE q4P
AS
SELECT		pbp.id,
			pbp.home_description as description,
			team.nickname as team,
			player_season.gp,
			pbp.period as quarter,
			pbp.event_msg_type_id, 
			player.player_id,		
			team.team_id, 
			pbp.game_id,
			CAST(game.date as date) as date,  
			opteam.nickname,
			opteam.team_id opteam_id,
			pbp.player2_id

FROM		pbp	 INNER JOIN
			game on pbp.game_id = game.game_id INNER JOIN
			player on pbp.player1_id = player.player_id INNER JOIN
			team on pbp.player1_team_id = team.team_id INNER JOIN
			team_game_log on team.team_id =  team_game_log.team_id AND game.game_id = team_game_log.game_id INNER JOIN
			team as opTeam on team_game_log.opteam_id = opTeam.team_id INNER JOIN
			player_season on player.player_id = player_season.player_id 
			
WHERE		(pbp.event_msg_type_id = 1 OR pbp.event_msg_type_id = 2 OR pbp.event_msg_type_id = 3 OR pbp.event_msg_type_id = 4)
			AND pbp.home_description IS NOT NULL AND pbp.period = 4
UNION

SELECT		pbp.id,
			pbp.visitor_description as description,
			team.nickname as team,			
			player_season.gp,
			pbp.period as quarter,
			pbp.event_msg_type_id, 
			player.player_id, 
			team.team_id, 
			pbp.game_id,
			CAST(game.date as date) as date,  
			opteam.nickname,
			opteam.team_id opteam_id,
			pbp.player2_id
			
			
			
FROM		pbp	 INNER JOIN
			game on pbp.game_id = game.game_id INNER JOIN
			player on pbp.player1_id = player.player_id INNER JOIN
			team on pbp.player1_team_id = team.team_id INNER JOIN
			team_game_log on team.team_id =  team_game_log.team_id AND game.game_id = team_game_log.game_id INNER JOIN
			team as opTeam on team_game_log.opteam_id = opTeam.team_id INNER JOIN
			player_season on player.player_id = player_season.player_id 
			
WHERE		(pbp.event_msg_type_id = 1 OR pbp.event_msg_type_id = 2 OR pbp.event_msg_type_id = 3 OR pbp.event_msg_type_id = 4)
			AND pbp.visitor_description IS NOT NULL AND pbp.period = 4
ORDER BY	pbp.game_id DESC
GO
CREATE procedure q4Insert		@team_id int, 
								@player_id int, 
								@points int, 
								@assists int,
								@rebounds int,
								@fgm int,
								@fga int,
								@fg3m int,
								@fg3a int,
								@ftm int,
								@fta int
as
insert into q4 values(
@team_id, 
@player_id, 
@points, 
@assists,
@rebounds,
@fgm,
@fga,
@fg3m,
@fg3a,
@ftm,
@fta) 
GO

CREATE procedure q4LogInsert	@team_id int,
								@matchup_id int,
								@date date, 
								@player_id int, 
								@points int, 
								@assists int,
								@rebounds int,
								@fgm int,
								@fga int,
								@fg3m int,
								@fg3a int,
								@ftm int,
								@fta int
as
insert into q4Log values(
@team_id,
@matchup_id,
@date, 
@player_id, 
@points, 
@assists,
@rebounds,
@fgm,
@fga,
@fg3m,
@fg3a,
@ftm,
@fta)  
GO

--#####################################################################################################
--
--#####################################################################################################
CREATE TABLE q1(
	team_id int  null,
	player_id int  null,
	points int  null,
	assists int  null,
	rebounds int  null,
	fgm int  null,
	fga int  null,
	fg3m int  null,
	fg3a int  null,
	ftm int null,
	fta int null
)

CREATE TABLE q1Log(
	team_id int not null,
	matchup_id int not null,
	date varchar(20) null,
	player_id int not null,
	points int  null,
	assists int  null,
	rebounds int  null,
	fgm int  null,
	fga int  null,
	fg3m int  null,
	fg3a int  null,
	ftm int null,
	fta int null
)
GO
CREATE TABLE q2(
	team_id int  null,
	player_id int  null,
	points int  null,
	assists int  null,
	rebounds int  null,
	fgm int  null,
	fga int  null,
	fg3m int  null,
	fg3a int  null,
	ftm int null,
	fta int null
)

CREATE TABLE q2Log(
	team_id int not null,
	matchup_id int not null,
	date varchar(20) null,
	player_id int not null,
	points int  null,
	assists int  null,
	rebounds int  null,
	fgm int  null,
	fga int  null,
	fg3m int  null,
	fg3a int  null,
	ftm int null,
	fta int null
)
GO
CREATE TABLE q3(
	team_id int  null,
	player_id int  null,
	points int  null,
	assists int  null,
	rebounds int  null,
	fgm int  null,
	fga int  null,
	fg3m int  null,
	fg3a int  null,
	ftm int null,
	fta int null
)

CREATE TABLE q3Log(
	team_id int not null,
	matchup_id int not null,
	date varchar(20) null,
	player_id int not null,
	points int  null,
	assists int  null,
	rebounds int  null,
	fgm int  null,
	fga int  null,
	fg3m int  null,
	fg3a int  null,
	ftm int null,
	fta int null
)
GO
CREATE TABLE q4(
	team_id int  null,
	player_id int  null,
	points int  null,
	assists int  null,
	rebounds int  null,
	fgm int  null,
	fga int  null,
	fg3m int  null,
	fg3a int  null,
	ftm int null,
	fta int null
)

CREATE TABLE q4Log(
	team_id int not null,
	matchup_id int not null,
	date varchar(20) null,
	player_id int not null,
	points int  null,
	assists int  null,
	rebounds int  null,
	fgm int  null,
	fga int  null,
	fg3m int  null,
	fg3a int  null,
	ftm int null,
	fta int null
)
GO
--#####################################################################################################
--
--#####################################################################################################
CREATE PROCEDURE q1AvgP @team varchar(20)
AS
SELECT		
			player.player_name Player,
			ROUND(CAST(SUM(points) as float)/gp,2) Points,
			ROUND(CAST(SUM(assists) as float)/gp,2) Assists,
			ROUND(CAST(SUM(rebounds) as float)/gp,2) Rebounds,
			ROUND(CAST(SUM(fgm) as float)/gp,2) "2PTM",
			ROUND(CAST(SUM(fga) as float)/gp,2) "2PTA",
			ROUND(CAST(SUM(fg3m) as float)/gp,2) "3PTM",
			ROUND(CAST(SUM(fg3a) as float)/gp,2) "3PTA",
			ROUND(CAST(SUM(ftm) as float)/gp,2) FTM,
			ROUND(CAST(SUM(fta) as float)/gp,2) FTA

from		q1 INNER JOIN 
			team on team.team_id = q1.team_id INNER JOIN 
			player on q1.player_id = player.player_id INNER JOIN 
			gp on player.player_id = gp.player_id INNER JOIN
			tradeTeams on player.player_name = tradeTeams.player_name
WHERE		team.nickname = @team OR tradeTeams.team = @team
GROUP BY	player.player_name, gp
order by	points DESC
GO
--
CREATE PROCEDURE q1LogP @team varchar(20)
AS
SELECT		
			t2.nickname as Matchup,
			cast(q1Log.date as date) Date,
			player_name Player,
			SUM(points) Points,
			SUM(assists) Assists,
			SUM(rebounds) Rebounds,
			SUM(fgm) "2PTM",
			SUM(fga) "2PTA",
			SUM(fg3m) "3PTM",
			SUM(fg3a) "3PTA",
			SUM(ftm) FTM,
			SUM(fta) FTA

from		q1Log INNER JOIN 
			team on team.team_id = q1Log.team_id INNER JOIN 
			player on q1Log.player_id = player.player_id INNER JOIN
			team as t2 on q1Log.matchup_id = t2.team_id 
WHERE		team.nickname = @team
GROUP BY	t2.nickname, Date, player_name
order by	Date DESC, SUM(points) DESC

GO
-------------------------------------------------------------------------
-------------------------------------------------------------------------
CREATE PROCEDURE q2AvgP @team varchar(20)
AS
SELECT		
			player.player_name Player,
			ROUND(CAST(SUM(points) as float)/gp,2) Points,
			ROUND(CAST(SUM(assists) as float)/gp,2) Assists,
			ROUND(CAST(SUM(rebounds) as float)/gp,2) Rebounds,
			ROUND(CAST(SUM(fgm) as float)/gp,2) "2PTM",
			ROUND(CAST(SUM(fga) as float)/gp,2) "2PTA",
			ROUND(CAST(SUM(fg3m) as float)/gp,2) "3PTM",
			ROUND(CAST(SUM(fg3a) as float)/gp,2) "3PTA",
			ROUND(CAST(SUM(ftm) as float)/gp,2) FTM,
			ROUND(CAST(SUM(fta) as float)/gp,2) FTA

from		q2 INNER JOIN 
			team on team.team_id = q2.team_id INNER JOIN 
			player on q2.player_id = player.player_id INNER JOIN 
			gp on player.player_id = gp.player_id INNER JOIN
			tradeTeams on player.player_name = tradeTeams.player_name
WHERE		team.nickname = @team OR tradeTeams.team = @team
GROUP BY	player.player_name, gp
order by	points DESC
GO
--
CREATE PROCEDURE q2LogP @team varchar(20)
AS
SELECT		
			t2.nickname as Matchup,
			cast(q2Log.date as date) as Date,
			player_name Player,
			SUM(points) Points,
			SUM(assists) Assists,
			SUM(rebounds) Rebounds,
			SUM(fgm) "2PTM",
			SUM(fga) "2PTA",
			SUM(fg3m) "3PTM",
			SUM(fg3a) "3PTA",
			SUM(ftm) FTM,
			SUM(fta) FTA

from		q2Log INNER JOIN 
			team on team.team_id = q2Log.team_id INNER JOIN 
			player on q2Log.player_id = player.player_id INNER JOIN
			team as t2 on q2Log.matchup_id = t2.team_id
WHERE		team.nickname = @team
GROUP BY	t2.nickname, Date, player_name
order by	Date DESC, SUM(points) DESC

GO
-------------------------------------------------------------------------
-------------------------------------------------------------------------
CREATE PROCEDURE q3AvgP @team varchar(20)
AS
SELECT		
			player.player_name Player,
			ROUND(CAST(SUM(points) as float)/gp,2) Points,
			ROUND(CAST(SUM(assists) as float)/gp,2) Assists,
			ROUND(CAST(SUM(rebounds) as float)/gp,2) Rebounds,
			ROUND(CAST(SUM(fgm) as float)/gp,2) "2PTM",
			ROUND(CAST(SUM(fga) as float)/gp,2) "2PTA",
			ROUND(CAST(SUM(fg3m) as float)/gp,2) "3PTM",
			ROUND(CAST(SUM(fg3a) as float)/gp,2) "3PTA",
			ROUND(CAST(SUM(ftm) as float)/gp,2) FTM,
			ROUND(CAST(SUM(fta) as float)/gp,2) FTA

from		q3 INNER JOIN 
			team on team.team_id = q3.team_id INNER JOIN 
			player on q3.player_id = player.player_id INNER JOIN 
			gp on player.player_id = gp.player_id INNER JOIN
			tradeTeams on player.player_name = tradeTeams.player_name
WHERE		team.nickname = @team OR tradeTeams.team = @team
GROUP BY	player.player_name, gp
order by	points DESC
GO
--
CREATE PROCEDURE q3LogP @team varchar(20)
AS
SELECT		
			t2.nickname as Matchup,
			cast(q3Log.date as date) as Date,
			player_name Player,
			SUM(points) Points,
			SUM(assists) Assists,
			SUM(rebounds) Rebounds,
			SUM(fgm) "2PTM",
			SUM(fga) "2PTA",
			SUM(fg3m) "3PTM",
			SUM(fg3a) "3PTA",
			SUM(ftm) FTM,
			SUM(fta) FTA

from		q3Log INNER JOIN 
			team on team.team_id = q3Log.team_id INNER JOIN 
			player on q3Log.player_id = player.player_id INNER JOIN
			team as t2 on q3Log.matchup_id = t2.team_id
WHERE		team.nickname = @team
GROUP BY	t2.nickname, Date, player_name
order by	Date DESC, SUM(points) DESC

GO
-------------------------------------------------------------------------
-------------------------------------------------------------------------
CREATE PROCEDURE q4AvgP @team varchar(20)
AS
SELECT		
			player.player_name Player,
			ROUND(CAST(SUM(points) as float)/gp,2) Points,
			ROUND(CAST(SUM(assists) as float)/gp,2) Assists,
			ROUND(CAST(SUM(rebounds) as float)/gp,2) Rebounds,
			ROUND(CAST(SUM(fgm) as float)/gp,2) "2PTM",
			ROUND(CAST(SUM(fga) as float)/gp,2) "2PTA",
			ROUND(CAST(SUM(fg3m) as float)/gp,2) "3PTM",
			ROUND(CAST(SUM(fg3a) as float)/gp,2) "3PTA",
			ROUND(CAST(SUM(ftm) as float)/gp,2) FTM,
			ROUND(CAST(SUM(fta) as float)/gp,2) FTA

from		q4 INNER JOIN 
			team on team.team_id = q4.team_id INNER JOIN 
			player on q4.player_id = player.player_id INNER JOIN 
			gp on player.player_id = gp.player_id INNER JOIN
			tradeTeams on player.player_name = tradeTeams.player_name
WHERE		team.nickname = @team OR tradeTeams.team = @team
GROUP BY	player.player_name, gp
order by	points DESC
GO
--
CREATE PROCEDURE q4LogP @team varchar(20)
AS
SELECT		
			t2.nickname as Matchup,
			cast(q4Log.date as date) Date,
			player_name Player,
			SUM(points) Points,
			SUM(assists) Assists,
			SUM(rebounds) Rebounds,
			SUM(fgm) "2PTM",
			SUM(fga) "2PTA",
			SUM(fg3m) "3PTM",
			SUM(fg3a) "3PTA",
			SUM(ftm) FTM,
			SUM(fta) FTA

from		q4Log INNER JOIN 
			team on team.team_id = q4Log.team_id INNER JOIN 
			player on q4Log.player_id = player.player_id INNER JOIN
			team as t2 on q4Log.matchup_id = t2.team_id
WHERE		team.nickname = @team
GROUP BY	t2.nickname, Date, player_name
order by	Date DESC, SUM(points) DESC

GO
-------------------------------------------------------------------------
-------------------------------------------------------------------------
CREATE VIEW gp
AS
SELECT player_id, COUNT(player_id) gp

FROM player_game_log

GROUP BY player_id
GO
----------------------------------
CREATE VIEW gpW
AS
SELECT player_id, COUNT(player_id) gp

FROM player_game_log
where player_game_log.wl = 'W'
GROUP BY player_id
GO
--------------------------
--DROP VIEW tradeTeams
CREATE VIEW tradeTeams
AS
SELECT		
			player_name,
			CASE  
			when player_name = 'Kyrie Irving' THEN   'Mavericks' 
			when player_name = 'Bones Hyland' THEN   'Clippers' 
			when player_name = 'Patrick Beverley' THEN   'Magic' 
			when player_name = 'Davon Reed' THEN   'Lakers' 
			when player_name = 'Thomas Bryant' THEN   'Nuggets' 
			when player_name = 'Mo Bamba' THEN   'Lakers' 
			when player_name = 'John Wall' THEN   'Rockets' 
			when player_name = 'Danny Green' THEN   'Cavaliers' 
			when player_name = 'Luke Kennard' THEN   'Grizzlies' 
			when player_name = 'Eric Gordon' THEN   'Clippers' 
			when player_name = 'Mason Plumlee' THEN   'Clippers' 
			when player_name = 'Reggie Jackson' THEN   'Nuggets' 
			when player_name = 'Josh Richardson' THEN   'Pelicans' 
			when player_name = 'Garrison Mathews' THEN   'Hawks' 
			when player_name = 'Bruno Fernando' THEN   'Hawks'
			when player_name = 'Saddiq Bey' THEN   'Hawks' 
			when player_name = 'Gary Payton II' THEN   'Warriors' 
			when player_name = 'Kevin Knox' THEN   'Trail Blazers'
			when player_name = 'James Wiseman' THEN   'Pistons' 
			when player_name = 'Justin Holiday' THEN   'Rockets' 
			when player_name = 'Frank Kaminsky' THEN   'Rockets'
			when player_name = 'Darius Bazley' THEN   'Suns'
			when player_name = 'Dario Saric' THEN   'Thunder'
			when player_name = 'Jalen McDaniels' THEN   '76ers'
			when player_name = 'Sviatoslav Mykhailiuk' THEN   'Hornets'
			when player_name = 'Josh Hart' THEN   'Knicks'
			when player_name = 'Cam Reddish' THEN   'Trail Blazers'
			when player_name = 'Kevin Durant' THEN   'Suns'
			when player_name = 'T.J. Warren' THEN   'Suns'
			when player_name = 'Jae Crowder' THEN   'Nets'
			when player_name = 'Mikal Bridges' THEN   'Nets'
			when player_name = 'Juan Vaulet' THEN   'Nets'
			when player_name = 'D''Angelo Russell' THEN   'Lakers'
			when player_name = 'Malik Beasley' THEN   'Lakers'
			when player_name = 'Jarred Vanderbilt' THEN   'Lakers'
			when player_name = 'Russell Westbrook' THEN   'Clippers'
			when player_name = 'Juan Toscano-Anderson' THEN   'Jazz'
			when player_name = 'Damian Jones' THEN   'Jazz'
			when player_name = 'Nickeil Alexander-Walker' THEN   'Timberwolves'
			when player_name = 'Mike Conley' THEN   'Timberwolves'
			when player_name = 'Kevin Love' THEN   'Heat'
			end as team
from		q1 INNER JOIN 
			team on team.team_id = q1.team_id INNER JOIN 
			player on q1.player_id = player.player_id 

GROUP BY	player_name
GO
--------------------
CREATE VIEW playerAverage
AS
SELECT			player.player_id,
				player.player_name AS Player,
				ROUND(	SUM(player_game_log.min/player_season.gp),0) as MIN,
				ROUND(player_season.pts/player_season.gp,1) as PTS,
				ROUND(player_season.ast/player_season.gp,1) as AST,
				ROUND(player_season.reb/player_season.gp,1) as REB,	   
				ROUND(	SUM(player_game_log.fgm-player_game_log.fg3m)/player_season.gp,1)as "2FGM",				       
				ROUND(	SUM(player_game_log.fga-player_game_log.fg3a)/player_season.gp,1) as "2FGA",
				ROUND(	SUM(player_game_log.ftm)/player_season.gp,1)as "FTA",		   
				ROUND(	SUM(player_game_log.fta)/player_season.gp,1) as "FTM",
				ROUND(	SUM(player_game_log.fg3m)/player_season.gp,1) as "3FGM",		   
				ROUND(	SUM(player_game_log.fg3a)/player_season.gp,1) as "3FGA",
				ROUND(	SUM(player_game_log.stl)/player_season.gp,1) as STL,
				ROUND(	SUM(player_game_log.blk)/player_season.gp,1) as BLK

FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN
						 team_season on team.team_id = team_season.team_id INNER JOIN
						 player_game_log on player_game_log.player_id = player.player_id

WHERE			player_season.gp != 0 

GROUP BY		player.player_id,
				player.player_name,
				player_season.gp,
				ROUND(player_season.pts/player_season.gp,1),
				ROUND(player_season.ast/player_season.gp,1),
				ROUND(player_season.reb/player_season.gp,1)

HAVING			SUM(player_game_log.FTA)	!= 0	AND	
				SUM(player_game_log.fga)	!= 0	AND 
				SUM(player_game_log.fg3a)	!= 0						   	   
GO
----------------------------------------------------------------------------------------------
CREATE PROCEDURE propPoints @player varchar(50)
AS
SELECT			
				playerAverage.PTS Points,
				COUNT(pgl.player_ID) Games, 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS AND GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp DESC 
GO
CREATE PROCEDURE propPointsW @player varchar(50)
AS
SELECT			
				playerAverage.PTS Points,
				COUNT(pgl.player_ID) Games, 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE gp > 0 AND 			pgl.pts >= playerAverage.PTS AND GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W' and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp DESC 
GO 
CREATE PROCEDURE propPointsPlus @player varchar(255)
AS
SELECT			
				playerAverage.pts + 1 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS  + 1 and playerAverage.Player = @player AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

UNION

SELECT			
				playerAverage.PTS + 2 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS   + 2 and playerAverage.Player = @player AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

UNION

SELECT			
				playerAverage.PTS + 3 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS  + 3
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS  + 3 and playerAverage.Player = @player AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

UNION

SELECT			
				playerAverage.PTS + 4 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS   + 4
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS + 4 and playerAverage.Player = @player AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

UNION

SELECT			
				playerAverage.PTS + 5 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS + 5  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS  + 5 and playerAverage.Player = @player AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

UNION

SELECT			
				playerAverage.PTS -1 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS  - 1
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS   -1 and playerAverage.Player = @player AND playerAverage.PTS -1 > 0 AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

UNION

SELECT			
				playerAverage.PTS -2 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS  -2
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS   -2 and playerAverage.Player = @player AND playerAverage.PTS -2 > 0 AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

UNION
SELECT			
				playerAverage.PTS -3 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS  -3
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS   -3 and playerAverage.Player = @player AND playerAverage.PTS -3 > 0 AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

UNION

SELECT			
				40 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 40
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= 40 and playerAverage.Player = @player AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp
UNION

SELECT			
				30 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 30 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= 30 and playerAverage.Player = @player AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp
UNION

SELECT			
				35 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 35 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= 35 and playerAverage.Player = @player AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

UNION

SELECT			
				playerAverage.PTS -4 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS  -4
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS   -4 and playerAverage.Player = @player AND playerAverage.PTS -4 > 0 AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp
UNION

SELECT			
				playerAverage.PTS -5 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS  -5
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS   -5 and playerAverage.Player = @player AND playerAverage.PTS -5 > 0 AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp


ORDER BY Points ASC

GO
CREATE PROCEDURE propPointsPlusW @player varchar(255)
AS
SELECT			
				playerAverage.PTS + 1 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1 THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS  + 1 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

UNION

SELECT			
				playerAverage.PTS + 2 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1 THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS   + 2 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

UNION

SELECT			
				playerAverage.PTS - 1 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1 THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS   - 1 and playerAverage.Player = @player AND pgl.wl = 'W' and playerAverage.PTS - 1 > 0 AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

UNION

SELECT			
				playerAverage.PTS - 2 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1 THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS   - 2 and playerAverage.Player = @player AND pgl.wl = 'W' and playerAverage.PTS - 2 > 0 AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

UNION
SELECT			
				playerAverage.PTS + 3 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1 THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS   + 3 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

UNION

SELECT			
				playerAverage.PTS + 4 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1 THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS   + 4 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

UNION

SELECT			
				playerAverage.PTS + 5 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1 THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= playerAverage.PTS   + 5 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp



UNION

SELECT			
				40 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1 THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.pts >= 40 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp
UNION

SELECT			
				30 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 30 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND  pgl.wl = 'W' AND			pgl.pts >= 30 and playerAverage.Player = @player AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp
UNION

SELECT			
				35 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 35 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND  pgl.wl = 'W' AND			pgl.pts >= 35 and playerAverage.Player = @player AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

UNION

SELECT			
				playerAverage.PTS -4 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS  -4
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND  pgl.wl = 'W' AND			pgl.pts >= playerAverage.PTS   -4 and playerAverage.Player = @player AND playerAverage.PTS -4 > 0 AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp
UNION

SELECT			
				playerAverage.PTS -5 Points,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS  -5
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND  pgl.wl = 'W' AND			pgl.pts >= playerAverage.PTS   -5 and playerAverage.Player = @player AND playerAverage.PTS -5 > 0 AND GP > 1 and pgl.pts > 0

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp
ORDER BY Points ASC

GO
---
CREATE PROCEDURE propAssists @player varchar(50)
AS
SELECT			
				playerAverage.ast Assists,
				COUNT(pgl.player_ID) Games, 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.AST  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.ast >= playerAverage.ast AND GP > 1 and pgl.ast > 0 	and playerAverage.Player = @player 

GROUP BY		playerAverage.Player, playerAverage.ast,  gp

ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp DESC 
GO
CREATE PROCEDURE propAssistsW @player varchar(50)
AS
SELECT			
				playerAverage.ast Assists,
				COUNT(pgl.player_ID) Games, 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.AST  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.ast >= playerAverage.ast AND GP > 1 	and playerAverage.Player = @player AND pgl.wl = 'W' and pgl.ast > 0

GROUP BY		playerAverage.Player, playerAverage.ast,  gp

ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp DESC 
GO
CREATE PROCEDURE propAssistsPlus @player varchar(50)
AS
SELECT			
				playerAverage.ast + 1 Assists,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1 
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.AST  +1
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.ast >= playerAverage.ast + 1 and playerAverage.Player = @player AND GP > 1 and pgl.ast > 0

GROUP BY		playerAverage.Player, playerAverage.ast,  gp

UNION

SELECT			
				playerAverage.ast -1 Assists,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.AST  -1
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.ast >= playerAverage.ast -1 and playerAverage.Player = @player AND playerAverage.AST -1 > 0 AND GP > 1 and pgl.ast > 0

GROUP BY		playerAverage.Player, playerAverage.ast,  gp

UNION
SELECT			
				playerAverage.ast -2 Assists,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.AST  -2
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.ast >= playerAverage.ast  -2 and playerAverage.Player = @player AND playerAverage.AST -2 > 0 AND GP > 1 and pgl.ast > 0

GROUP BY		playerAverage.Player, playerAverage.ast,  gp

UNION
SELECT			
				playerAverage.ast + 2 Assists,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.AST  +2
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.ast >= playerAverage.ast  + 2 and playerAverage.Player = @player AND GP > 1 and pgl.ast > 0

GROUP BY		playerAverage.Player, playerAverage.ast,  gp

UNION

SELECT			
				playerAverage.ast + 3 Assists,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.AST  +3
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.ast >= playerAverage.ast + 3 and playerAverage.Player = @player AND GP > 1 and pgl.ast > 0

GROUP BY		playerAverage.Player, playerAverage.ast,  gp

UNION

SELECT			
				playerAverage.ast + 4 Assists,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.AST  +4
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.ast >= playerAverage.ast + 4 and playerAverage.Player = @player AND GP > 1 and pgl.ast > 0

GROUP BY		playerAverage.Player, playerAverage.ast,  gp
UNION

SELECT			
				playerAverage.ast -3 Assists,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Games,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.AST -3 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.ast >= playerAverage.ast -3 and playerAverage.Player = @player and playerAverage.ast -3 > 0 AND GP > 1 and pgl.ast > 0

GROUP BY		playerAverage.Player, playerAverage.ast,  gp
ORDER BY Assists ASC

GO

CREATE PROCEDURE propAssistsPlusW @player varchar(50)
AS
SELECT			
				playerAverage.ast + 1 Assists,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.AST +1 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.ast >= playerAverage.ast + 1 and playerAverage.Player = @player AND pgl.wl = 'W' and playerAverage.ast + 1 > 0

GROUP BY		playerAverage.Player, playerAverage.ast,  gp
HAVING COUNT(pgl.player_ID) > 0
UNION

SELECT			
				playerAverage.ast + 2 Assists,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.AST  +2
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.ast >= playerAverage.ast + 2 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.ast > 0 and playerAverage.ast + 2 > 0

GROUP BY		playerAverage.Player, playerAverage.ast,  gp
HAVING COUNT(pgl.player_ID) > 0
UNION

SELECT			
				playerAverage.ast - 1 Assists,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.AST  -1
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.ast >= playerAverage.ast - 1 and playerAverage.Player = @player AND pgl.wl = 'W' and playerAverage.ast - 1 > 0 AND GP > 1 and pgl.ast > 0

GROUP BY		playerAverage.Player, playerAverage.ast,  gp
HAVING COUNT(pgl.player_ID) > 0
UNION

SELECT			
				playerAverage.ast - 2 Assists,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.AST -2 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.ast >= playerAverage.ast - 2 and playerAverage.Player = @player AND pgl.wl = 'W' and playerAverage.ast - 2 > 0 AND GP > 1 

GROUP BY		playerAverage.Player, playerAverage.ast,  gp
HAVING COUNT(pgl.player_ID) > 0
UNION

SELECT			
				playerAverage.ast + 3 Assists,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.AST  +3
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.ast >= playerAverage.ast  + 3 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 

GROUP BY		playerAverage.Player, playerAverage.ast,  gp
HAVING COUNT(pgl.player_ID) > 0
UNION

SELECT			
				playerAverage.ast + 4 Assists,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.AST  +4
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.ast >= playerAverage.ast  + 4 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.ast > 0

GROUP BY		playerAverage.Player, playerAverage.ast,  gp
HAVING COUNT(pgl.player_ID) > 0
UNION

SELECT			
				playerAverage.ast -3 Assists,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.AST -3 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.ast >= playerAverage.ast -3 and playerAverage.Player = @player AND pgl.wl = 'W' and playerAverage.ast -3 > 0

GROUP BY		playerAverage.Player, playerAverage.ast,  gp
HAVING COUNT(pgl.player_ID) > 0
ORDER BY Assists ASC

GO
---
CREATE PROCEDURE propRebounds @player varchar(50)
AS
SELECT			
				playerAverage.reb Rebounds,
				COUNT(pgl.player_ID) Games, 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb >= playerAverage.reb and playerAverage.Player = @player  AND GP > 1 and pgl.reb > 0 

GROUP BY		playerAverage.Player, playerAverage.reb,  gp

ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp DESC 
GO
CREATE PROCEDURE propReboundsW @player varchar(50)
AS
SELECT			
				playerAverage.reb Rebounds,
				COUNT(pgl.player_ID) Games, 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb >= playerAverage.reb and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.reb > 0

GROUP BY		playerAverage.Player, playerAverage.reb,  gp

ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp DESC 
GO
CREATE PROCEDURE propReboundsPlus @player varchar(50)
AS
SELECT			
				playerAverage.reb+ 1 Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb +1 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb>= playerAverage.reb+ 1 and playerAverage.Player = @player AND GP > 1 and pgl.reb > 0

GROUP BY		playerAverage.Player, playerAverage.reb,  gp

UNION
SELECT			
				playerAverage.reb-3 Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb -3 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb>= playerAverage.reb-3 and playerAverage.Player = @player AND GP > 1 and pgl.reb > 0

GROUP BY		playerAverage.Player, playerAverage.reb,  gp

UNION
SELECT			
				playerAverage.reb+ 2 Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb +2 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb>= playerAverage.reb+ 2 and playerAverage.Player = @player AND GP > 1 and pgl.reb > 0

GROUP BY		playerAverage.Player, playerAverage.reb,  gp

UNION

SELECT			
				playerAverage.reb- 1 Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb -1 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb>= playerAverage.reb- 1 and playerAverage.Player = @player AND playerAverage.reb- 1 > 0 AND GP > 1 and pgl.reb > 0

GROUP BY		playerAverage.Player, playerAverage.reb,  gp

UNION

SELECT			
				playerAverage.reb- 2 Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb  -2
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb>= playerAverage.reb- 2 and playerAverage.Player = @player AND playerAverage.reb- 2 > 0 AND GP > 1 and pgl.reb > 0

GROUP BY		playerAverage.Player, playerAverage.reb,  gp

UNION
SELECT			
				playerAverage.reb+ 3 Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb  +3
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb>= playerAverage.reb+ 3 and playerAverage.Player = @player AND GP > 1 and pgl.reb > 0

GROUP BY		playerAverage.Player, playerAverage.reb,  gp

UNION

SELECT			
				playerAverage.reb+ 4 Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb  +4
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb>= playerAverage.reb+ 4 and playerAverage.Player = @player AND GP > 1 and pgl.reb > 0

GROUP BY		playerAverage.Player, playerAverage.reb,  gp

UNION

SELECT			
				playerAverage.reb+ 5 Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb  +5
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb>= playerAverage.reb + 5 and playerAverage.Player = @player AND GP > 1 and pgl.reb > 0

GROUP BY		playerAverage.Player, playerAverage.reb,  gp
ORDER BY Rebounds ASC

GO
CREATE PROCEDURE propReboundsPlusW @player varchar(50)
AS
SELECT			
				playerAverage.reb-3 Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb -3 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb>= playerAverage.reb-3 and playerAverage.Player = @player  and pgl.reb-3 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.reb,  gp
UNION
SELECT			
				playerAverage.reb+ 1 Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate",
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 AND ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1  THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb>= playerAverage.reb+ 1 and playerAverage.Player = @player AND pgl.wl = 'W'  and pgl.reb+1 > 0

GROUP BY		playerAverage.Player, playerAverage.reb,  gp

UNION

SELECT			
				playerAverage.reb+ 2 Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins, CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate",
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 AND ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1  THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb>= playerAverage.reb+ 2 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.reb +2 > 0

GROUP BY		playerAverage.Player, playerAverage.reb,  gp

UNION

SELECT			
				playerAverage.reb- 1 Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins, CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate",
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 AND ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1  THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb>= playerAverage.reb- 1 and playerAverage.Player = @player AND pgl.wl = 'W' and playerAverage.reb- 1 > 0 

GROUP BY		playerAverage.Player, playerAverage.reb,  gp

UNION

SELECT			
				playerAverage.reb- 2 Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins, CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate",
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 AND ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1  THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb>= playerAverage.reb- 2 and playerAverage.Player = @player AND pgl.wl = 'W' and playerAverage.reb- 2 > 0 

GROUP BY		playerAverage.Player, playerAverage.reb,  gp

UNION

SELECT			
				playerAverage.reb+ 3 Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins, CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate",
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 AND ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1  THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb>= playerAverage.reb+ 3 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.reb+ 3 > 0

GROUP BY		playerAverage.Player, playerAverage.reb,  gp

UNION

SELECT			
				playerAverage.reb+ 4 Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins, CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate",
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 AND ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1  THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb>= playerAverage.reb+ 4 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.reb +4 > 0

GROUP BY		playerAverage.Player, playerAverage.reb,  gp

UNION

SELECT			
				playerAverage.reb+ 5 Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins, CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate",
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 AND ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1  THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.reb>= playerAverage.reb + 5 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.reb+5 > 0

GROUP BY		playerAverage.Player, playerAverage.reb,  gp
ORDER BY Rebounds ASC

GO
---
CREATE PROCEDURE prop3s @player varchar(50)
AS
SELECT			
				playerAverage.[3FGM] "Threes Made",
				COUNT(pgl.player_ID) Games, 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM]  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.fg3m >= playerAverage.[3FGM]  AND GP > 1 and pgl.fg3m > 0 and playerAverage.Player = @player 

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp

ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp DESC
GO
CREATE PROCEDURE prop3sW @player varchar(50)
AS
SELECT			
				playerAverage.[3FGM] "Threes Made",
				COUNT(pgl.player_ID) Games, 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM]  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.fg3m >= playerAverage.[3FGM]	and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.fg3m > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp

ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp DESC
GO
CREATE PROCEDURE prop3sPlus @player varchar(50)
AS
SELECT			
				playerAverage.[3FGM]+ 1 "Threes Made",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM]  +1
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.fg3m>= playerAverage.[3FGM]+ 1 and playerAverage.Player = @player AND GP > 1 and pgl.fg3m > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp

UNION

SELECT			
				playerAverage.[3FGM]+ 2 "Threes Made",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM]  +2
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.fg3m>= playerAverage.[3FGM]+ 2 and playerAverage.Player = @player AND GP > 1 and pgl.fg3m > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp

SELECT			
				playerAverage.[3FGM]- 1 "Threes Made",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] -1 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.fg3m>= playerAverage.[3FGM]-1 and playerAverage.Player = @player AND playerAverage.[3FGM]-1 > 0 AND GP > 1 and pgl.fg3m > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp

UNION

SELECT			
				playerAverage.[3FGM]- 2 "Threes Made",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM]  -2
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.fg3m>= playerAverage.[3FGM]- 2 and playerAverage.Player = @player AND playerAverage.[3FGM]-2 > 0 AND GP > 1 and pgl.fg3m > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp

UNION

SELECT			
				playerAverage.[3FGM]+ 3 "Threes Made",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM]  +3
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.fg3m>= playerAverage.[3FGM]+ 3 and playerAverage.Player = @player AND GP > 1 and pgl.fg3m > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp

UNION

SELECT			
				playerAverage.[3FGM]+ 4 "Threes Made",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM]  +4
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.fg3m>= playerAverage.[3FGM]+ 4 and playerAverage.Player = @player AND GP > 1 and pgl.fg3m > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp

UNION

SELECT			
				playerAverage.[3FGM]+ 5 "Threes Made",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] +5  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.fg3m>= playerAverage.[3FGM] + 5 and playerAverage.Player = @player AND GP > 1 and pgl.fg3m > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp
ORDER BY "Threes Made" ASC

GO
CREATE PROCEDURE prop3sPlusW @player varchar(50)
AS
SELECT			
				playerAverage.[3FGM]+ 1 "Threes Made",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM]  +1
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.fg3m>= playerAverage.[3FGM]+ 1 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.fg3m > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp

UNION

SELECT			
				playerAverage.[3FGM]+ 2 "Threes Made",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM]  +2
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.fg3m>= playerAverage.[3FGM]+ 2 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.fg3m > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp

UNION

SELECT			
				playerAverage.[3FGM]- 1 "Threes Made",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM]  -1
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.fg3m>= playerAverage.[3FGM]- 1 and playerAverage.Player = @player AND pgl.wl = 'W' and playerAverage.[3FGM]- 1 >0 AND GP > 1 and pgl.fg3m > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp

UNION

SELECT			
				playerAverage.[3FGM]- 2 "Threes Made",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] -2  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.fg3m>= playerAverage.[3FGM]- 2 and playerAverage.Player = @player AND pgl.wl = 'W' and playerAverage.[3FGM]- 2 >0 AND GP > 1 and pgl.fg3m > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp

UNION
SELECT			
				playerAverage.[3FGM]+ 3 "Threes Made",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] +3 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.fg3m>= playerAverage.[3FGM]+ 3 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.fg3m > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp

UNION

SELECT			
				playerAverage.[3FGM]+ 4 "Threes Made",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM]  +4
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.fg3m>= playerAverage.[3FGM]+ 4 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.fg3m > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp

UNION

SELECT			
				playerAverage.[3FGM]+ 5 "Threes Made",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM]  +5
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line



FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.fg3m>= playerAverage.[3FGM] + 5 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.fg3m > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp
ORDER BY "Threes Made" ASC

GO
---
CREATE PROCEDURE propSteals @player varchar(50)
AS
SELECT			
				playerAverage.stl Steals,
				COUNT(pgl.player_ID) Games, 
				gp,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.STL  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.stl >= playerAverage.stl  and playerAverage.Player = @player AND GP > 1 and pgl.stl > 0

GROUP BY		playerAverage.Player, playerAverage.stl,  gp

ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp DESC 
GO
CREATE PROCEDURE propStealsW @player varchar(50)
AS
SELECT			
				playerAverage.stl Steals,
				COUNT(pgl.player_ID) Games, 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.STL  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.stl >= playerAverage.stl and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.stl > 0

GROUP BY		playerAverage.Player, playerAverage.stl,  gp

ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp DESC 
GO
CREATE PROCEDURE propStealsPlus @player varchar(50)
AS
SELECT			
				playerAverage.stl+ 1 Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.STL  +1
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.stl>= playerAverage.stl+ 1 and playerAverage.Player = @player AND GP > 1 and pgl.stl > 0

GROUP BY		playerAverage.Player, playerAverage.stl,  gp

UNION

SELECT			
				playerAverage.stl+ 2 Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.STL +2 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.stl>= playerAverage.stl+ 2 and playerAverage.Player = @player AND GP > 1 and pgl.stl > 0

GROUP BY		playerAverage.Player, playerAverage.stl,  gp

UNION

SELECT			
				playerAverage.stl-1 Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.STL  -1
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.stl>= playerAverage.stl-1 and playerAverage.Player = @player AND playerAverage.STL -1 > 0  AND GP > 1 and pgl.stl > 0

GROUP BY		playerAverage.Player, playerAverage.stl,  gp

ORDER BY Steals ASC

GO
CREATE PROCEDURE propStealsPlusW @player varchar(50)
AS
SELECT			
				playerAverage.stl+ 1 Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.STL +1 
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.stl>= playerAverage.stl+ 1 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.stl > 0

GROUP BY		playerAverage.Player, playerAverage.stl,  gp

UNION

SELECT			
				playerAverage.stl+ 2 Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.STL  +2
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.stl>= playerAverage.stl+ 2 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.stl > 0

GROUP BY		playerAverage.Player, playerAverage.stl,  gp

UNION

SELECT			
				playerAverage.stl - 1 Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.STL  -1
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.stl>= playerAverage.stl - 1 and playerAverage.Player = @player AND pgl.wl = 'W' AND playerAverage.STL -1 > 0 AND GP > 1 and pgl.stl > 0

GROUP BY		playerAverage.Player, playerAverage.stl,  gp
ORDER BY Steals ASC

GO
---
CREATE PROCEDURE propBlocks @player varchar(50)
AS
SELECT			
				playerAverage.blk Blocks,
				COUNT(pgl.player_ID) Games, 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.BLK  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.blk >= playerAverage.blk and playerAverage.Player = @player AND GP > 1 and pgl.blk > 0

GROUP BY		playerAverage.Player, playerAverage.blk,  gp

ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp DESC 
GO
CREATE PROCEDURE propBlocksW @player varchar(50)
AS
SELECT			
				playerAverage.blk Blocks,
				COUNT(pgl.player_ID) Games, 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.BLK  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.blk >= playerAverage.blk and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.blk > 0

GROUP BY		playerAverage.Player, playerAverage.blk,  gp

ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp DESC 
GO
CREATE PROCEDURE propBlocksPlus @player varchar(50)
AS
SELECT			
				playerAverage.blk+ 1 Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.BLK  +1
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.blk>= playerAverage.blk+ 1 and playerAverage.Player = @player AND GP > 1 and pgl.blk > 0

GROUP BY		playerAverage.Player, playerAverage.blk,  gp

UNION

SELECT			
				playerAverage.blk+ 2 Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.BLK  +2
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.blk>= playerAverage.blk+ 2 and playerAverage.Player = @player AND GP > 1 and pgl.blk > 0

GROUP BY		playerAverage.Player, playerAverage.blk,  gp

UNION

SELECT			
				playerAverage.blk+ 3 Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.BLK +3  
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.blk>= playerAverage.blk+ 3 and playerAverage.Player = @player AND GP > 1 and pgl.blk > 0

GROUP BY		playerAverage.Player, playerAverage.blk,  gp

UNION

SELECT			
				playerAverage.blk -1 Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.BLK  -1
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.blk>= playerAverage.blk-1 and playerAverage.Player = @player AND playerAverage.blk -1 > 0  AND GP > 1 and pgl.blk > 0

GROUP BY		playerAverage.Player, playerAverage.blk,  gp
ORDER BY Blocks ASC
GO
CREATE PROCEDURE propBlocksPlusW @player varchar(50)
AS
SELECT			
				playerAverage.blk+ 1 Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.BLK  +1
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.blk>= playerAverage.blk+ 1 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.blk > 0

GROUP BY		playerAverage.Player, playerAverage.blk,  gp

UNION

SELECT			
				playerAverage.blk+ 2 Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.BLK  +2
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.blk>= playerAverage.blk+ 2 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.blk > 0

GROUP BY		playerAverage.Player, playerAverage.blk,  gp

UNION

SELECT			
				playerAverage.blk+ 3 Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.BLK  +3
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.blk>= playerAverage.blk+ 3 and playerAverage.Player = @player AND pgl.wl = 'W' AND GP > 1 and pgl.blk > 0

GROUP BY		playerAverage.Player, playerAverage.blk,  gp

UNION

SELECT			
				playerAverage.blk - 1 Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.BLK  -1
				then 1 else 0 end)as float)/gp, 3) = 1 then -1000
				END AS Line


FROM			player_game_log pgl INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gpW on gpW.player_id = pgl.player_id


WHERE GP > 0 AND 			pgl.blk>= playerAverage.blk - 1 and playerAverage.Player = @player AND pgl.wl = 'W' AND playerAverage.blk -1 > 0 AND GP > 1 and pgl.blk > 0

GROUP BY		playerAverage.Player, playerAverage.blk,  gp
ORDER BY Blocks ASC
GO
------------------------------------------------------------------------------------------
CREATE PROCEDURE propptsInjured			 @player varchar(50), @injured varchar(50)
AS
SELECT			playerAverage.PTS Points,
				SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,
					
				--SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 0  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp

HAVING SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)  > 0
ORDER BY CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE propptsInjuredW			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.PTS Points,
				SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 0  and playerAverage.Player = @player and pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp
HAVING SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)  > 0
ORDER BY CAST(SUM(Case when pgl.pts >= playerAverage.PTS AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE propptsInjuredPlus			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.pts - 1 Points,
				SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.pts - 1 > 0

GROUP BY		playerAverage.Player, playerAverage.pts - 1,  gp
HAVING SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.pts - 2 Points,
				SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.pts - 2 > 0

GROUP BY		playerAverage.Player, playerAverage.pts - 2,  gp
HAVING SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.pts - 3 Points,
				SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.pts - 3 > 0

GROUP BY		playerAverage.Player, playerAverage.pts - 3,  gp
HAVING SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end) > 0

UNION
SELECT			
				PlayerAverage.pts - 4   Points,
				SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.pts - 4 > 0

GROUP BY		playerAverage.Player, PlayerAverage.pts - 4  ,  gp

HAVING SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				PlayerAverage.pts - 5  Points,
				SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.pts - 5 > 0

GROUP BY		playerAverage.Player, PlayerAverage.pts - 5 ,  gp 
HAVING SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION






SELECT			
				playerAverage.pts + 1 Points,
				SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.pts + 1,  gp
HAVING SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.pts + 2 Points,
				SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.pts + 2,  gp
HAVING SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.pts + 3 Points,
				SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.pts + 3,  gp
HAVING SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			playerAverage.pts + 4 Points,
				SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.pts + 4,  gp
HAVING SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			playerAverage.pts + 5 Points,
				SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.pts + 5,  gp
HAVING SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			30 Points,
				SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp
HAVING SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			35 Points,
				SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp
HAVING SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			40 Points,
				SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp
HAVING SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
ORDER BY Points ASC
GO
CREATE PROCEDURE propptsInjuredPlusW			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.pts - 1 Points,
				SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.pts - 1 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.pts - 1,  gp
HAVING SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.pts - 2 Points,
				SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.pts - 2 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.pts - 2,  gp
HAVING SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.pts - 3 Points,
				SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.pts - 3 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.pts - 3,  gp
HAVING SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) > 0

UNION
SELECT			
				PlayerAverage.pts - 4   Points,
				SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 4   AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.pts - 4 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, PlayerAverage.pts - 4  ,  gp
HAVING SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) > 0

UNION
SELECT			
				PlayerAverage.pts - 5  Points,
				SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= PlayerAverage.pts - 5  AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.pts - 5 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, PlayerAverage.pts - 5 ,  gp 
HAVING SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) > 0
UNION






SELECT			
				playerAverage.pts + 1 Points,
				SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, playerAverage.pts + 1,  gp
HAVING SUM(Case when pgl.pts >= playerAverage.pts + 1 AND injured.dnp = 'DNP' then 1 else 0 end)  > 0
UNION
SELECT			
				playerAverage.pts + 2 Points,
				SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, playerAverage.pts + 2,  gp
HAVING SUM(Case when pgl.pts >= playerAverage.pts + 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.pts + 3 Points,
				SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, playerAverage.pts + 3,  gp
HAVING SUM(Case when pgl.pts >= playerAverage.pts + 3 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			playerAverage.pts + 4 Points,
				SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, playerAverage.pts + 4,  gp
HAVING SUM(Case when pgl.pts >= playerAverage.pts + 4 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			playerAverage.pts + 5 Points,
				SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, playerAverage.pts + 5,  gp 
HAVING SUM(Case when pgl.pts >= playerAverage.pts + 5 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			30 Points,
				SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp
HAVING SUM(Case when pgl.pts >= 30 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			35 Points,
				SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp
HAVING SUM(Case when pgl.pts >= 35 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			40 Points,
				SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,
				CONCAT(ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, playerAverage.PTS,  gp
HAVING SUM(Case when pgl.pts >= 40 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
ORDER BY Points ASC
GO

CREATE PROCEDURE propastInjured			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.ast Assists,
				SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.ast,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end) > 0
ORDER BY CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE propastInjuredW			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.ast Assists,
				SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player and pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.ast,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end) > 0
ORDER BY CAST(SUM(Case when pgl.ast >= playerAverage.ast AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE propastInjuredPlus			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.ast - 1 Assists,
				SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.ast - 1 > 0

GROUP BY		playerAverage.Player, playerAverage.ast - 1,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.ast - 2 Assists,
				SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.ast - 2 > 0

GROUP BY		playerAverage.Player, playerAverage.ast - 2,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.ast - 3 Assists,
				SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.ast - 3 > 0

GROUP BY		playerAverage.Player, playerAverage.ast - 3,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION






SELECT			
				playerAverage.ast + 1 Assists,
				SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.ast + 1,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.ast + 2 Assists,
				SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.ast + 2,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.ast + 3 Assists,
				SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.ast + 3,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			playerAverage.ast + 4 Assists,
				SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.ast + 4,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			playerAverage.ast + 5 Assists,
				SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.ast + 5,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end) > 0

ORDER BY Assists ASC
GO
CREATE PROCEDURE propastInjuredPlusW			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.ast - 1 Assists,
				SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.ast - 1 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.ast - 1,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast - 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.ast - 2 Assists,
				SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.ast - 2 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.ast - 2,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast - 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.ast - 3 Assists,
				SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.ast - 3 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.ast - 3,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast - 3 AND injured.dnp = 'DNP' then 1 else 0 end) > 0

UNION






SELECT			
				playerAverage.ast + 1 Assists,
				SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.ast + 1,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast + 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.ast + 2 Assists,
				SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.ast + 2,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast + 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.ast + 3 Assists,
				SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.ast + 3,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast + 3 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			playerAverage.ast + 4 Assists,
				SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.ast + 4,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast + 4 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			playerAverage.ast + 5 Assists,
				SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,
				CONCAT(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.ast + 5,  gp
HAVING SUM(Case when pgl.ast >= playerAverage.ast + 5 AND injured.dnp = 'DNP' then 1 else 0 end) > 0

ORDER BY Assists ASC
GO
--drop procedure propptsInjuredPlus
--go
--drop procedure propastInjuredPlus
--go
--drop procedure proprebInjuredPlus
--go
--drop procedure propstlInjuredPlus
--go
--drop procedure propblkInjuredPlus
--go
--drop procedure prop3InjuredPlus
--go

CREATE PROCEDURE proprebInjured			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.reb Rebounds,
				SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 0  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.reb,  gp
HAVING SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end) > 0
ORDER BY CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE proprebInjuredW			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.reb Rebounds,
				SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 0  and playerAverage.Player = @player and pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.reb,  gp
HAVING SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end) > 0
ORDER BY CAST(SUM(Case when pgl.reb >= playerAverage.reb AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE proprebInjuredPlus			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.reb - 1 Rebounds,
				SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.reb - 1 > 0

GROUP BY		playerAverage.Player, playerAverage.reb - 1,  gp
HAVING SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.reb - 2 Rebounds,
				SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.reb - 2 > 0

GROUP BY		playerAverage.Player, playerAverage.reb - 2,  gp
HAVING SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.reb - 3 Rebounds,
				SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.reb - 3 > 0

GROUP BY		playerAverage.Player, playerAverage.reb - 3,  gp
HAVING SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end) > 0

UNION






SELECT			
				playerAverage.reb + 1 Rebounds,
				SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.reb + 1,  gp
HAVING SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.reb + 2 Rebounds,
				SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.reb + 2,  gp
HAVING SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.reb + 3 Rebounds,
				SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.reb + 3,  gp
HAVING SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			playerAverage.reb + 4 Rebounds,
				SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,
				CONCAT(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.reb + 4,  gp
HAVING SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
ORDER BY Rebounds ASC
GO
CREATE PROCEDURE proprebInjuredPlusW			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.reb - 1 Rebounds,
				SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.reb - 1 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.reb - 1,  gp
HAVING SUM(Case when pgl.reb >= playerAverage.reb - 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.reb - 2 Rebounds,
				SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.reb - 2 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.reb - 2,  gp
HAVING SUM(Case when pgl.reb >= playerAverage.reb - 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.reb - 3 Rebounds,
				SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.reb - 3 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.reb - 3,  gp
HAVING SUM(Case when pgl.reb >= playerAverage.reb - 3 AND injured.dnp = 'DNP' then 1 else 0 end) > 0

UNION






SELECT			
				playerAverage.reb + 1 Rebounds,
				SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.reb + 1,  gp
HAVING SUM(Case when pgl.reb >= playerAverage.reb + 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.reb + 2 Rebounds,
				SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.reb + 2,  gp
HAVING SUM(Case when pgl.reb >= playerAverage.reb + 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.reb + 3 Rebounds,
				SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.reb + 3,  gp
HAVING SUM(Case when pgl.reb >= playerAverage.reb + 3 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			playerAverage.reb + 4 Rebounds,
				SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,
				CONCAT(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.reb + 4,  gp
HAVING SUM(Case when pgl.reb >= playerAverage.reb + 4 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
ORDER BY Rebounds ASC
GO

CREATE PROCEDURE propstlInjured			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.stl Steals,
				SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.stl,  gp
HAVING SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)  > 0
ORDER BY CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE propstlInjuredW			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.stl Steals,
				SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 0  and playerAverage.Player = @player and pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.stl,  gp
HAVING SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end) > 0
ORDER BY CAST(SUM(Case when pgl.stl >= playerAverage.stl AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE propstlInjuredPlus			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.stl - 1 Steals,
				SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.stl - 1 > 0

GROUP BY		playerAverage.Player, playerAverage.stl - 1,  gp
HAVING SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0


UNION






SELECT			
				playerAverage.stl + 1 Steals,
				SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.stl + 1,  gp
HAVING SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.stl + 2 Steals,
				SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.stl + 2,  gp
HAVING SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0

ORDER BY Steals ASC
GO
CREATE PROCEDURE propstlInjuredPlusW			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.stl - 1 Steals,
				SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.stl - 1 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.stl - 1,  gp

HAVING SUM(Case when pgl.stl >= playerAverage.stl - 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0

UNION






SELECT			
				playerAverage.stl + 1 Steals,
				SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.stl + 1,  gp
HAVING SUM(Case when pgl.stl >= playerAverage.stl + 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.stl + 2 Steals,
				SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.stl + 2,  gp
HAVING SUM(Case when pgl.stl >= playerAverage.stl + 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0

ORDER BY Steals ASC
GO

CREATE PROCEDURE propblkInjured			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.blk Blocks,
				SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.blk,  gp
HAVING SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end) > 0
ORDER BY CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE propblkInjuredW			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.blk Blocks,
				SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player and pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.blk,  gp
HAVING SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end) > 0
ORDER BY CAST(SUM(Case when pgl.blk >= playerAverage.blk AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE propblkInjuredPlus			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.blk - 1 Blocks,
				SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				


FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.blk - 1 > 0 

GROUP BY		playerAverage.Player, playerAverage.blk - 1,  gp
HAVING SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0

UNION






SELECT			
				playerAverage.blk + 1 Blocks,
				SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.blk + 1,  gp
HAVING SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.blk + 2 Blocks,
				SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.blk + 2,  gp
HAVING SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0

ORDER BY Blocks ASC
GO
CREATE PROCEDURE propblkInjuredPlusW			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.blk - 1 Blocks,
				SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.blk - 1 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.blk - 1,  gp

HAVING SUM(Case when pgl.blk >= playerAverage.blk - 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0

UNION






SELECT			
				playerAverage.blk + 1 Blocks,
				SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.blk + 1,  gp
HAVING SUM(Case when pgl.blk >= playerAverage.blk + 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.blk + 2 Blocks,
				SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.blk + 2,  gp
HAVING SUM(Case when pgl.blk >= playerAverage.blk + 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0

ORDER BY Blocks ASC
GO

CREATE PROCEDURE prop3Injured			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.[3FGM] Threes,
				SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 0 and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp
HAVING SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end) > 0
ORDER BY CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE prop3InjuredW			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.[3FGM] Threes,
				SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 0 and playerAverage.Player = @player and pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.[3FGM],  gp
HAVING SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)  > 0
ORDER BY CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE prop3InjuredPlus			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.[3FGM] - 1 Threes,
				SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.[3FGM] - 1 > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM] - 1,  gp
HAVING SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.[3FGM] - 2 Threes,
				SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.[3FGM] - 2 > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM] - 2,  gp
HAVING SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.[3FGM] - 3 Threes,
				SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.[3FGM] - 3 > 0

GROUP BY		playerAverage.Player, playerAverage.[3FGM] - 3,  gp
HAVING SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end) > 0

UNION






SELECT			
				playerAverage.[3FGM] + 1 Threes,
				SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.[3FGM] + 1,  gp
HAVING SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.[3FGM] + 2 Threes,
				SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.[3FGM] + 2,  gp
HAVING SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.[3FGM] + 3 Threes,
				SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,

				--SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.[3FGM] + 3,  gp
HAVING SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			playerAverage.[3FGM] + 4 Threes,
				SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as GP,
				CONCAT(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player

GROUP BY		playerAverage.Player, playerAverage.[3FGM] + 4,  gp
HAVING SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
ORDER BY Threes ASC
GO
CREATE PROCEDURE prop3InjuredPlusW			 @player varchar(50), @injured varchar(50)
AS
SELECT			
				playerAverage.[3FGM] - 1 Threes,
				SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE   			 GP > 1  and playerAverage.Player = @player AND playerAverage.[3FGM] - 1 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.[3FGM] - 1,  gp
HAVING SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.[3FGM] - 2 Threes,
				SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.[3FGM] - 2 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.[3FGM] - 2,  gp
HAVING SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.[3FGM] - 3 Threes,
				SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND playerAverage.[3FGM] - 3 > 0 AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.[3FGM] - 3,  gp
HAVING SUM(Case when pgl.fg3m >= playerAverage.[3FGM] - 3 AND injured.dnp = 'DNP' then 1 else 0 end) > 0

UNION






SELECT			
				playerAverage.[3FGM] + 1 Threes,
				SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.[3FGM] + 1,  gp
HAVING SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 1 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.[3FGM] + 2 Threes,
				SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.[3FGM] + 2,  gp
HAVING SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 2 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			
				playerAverage.[3FGM] + 3 Threes,
				SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,

				--SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end) Games, 
				--COUNT(pgl.game_id) gp,
				CONCAT(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

	
				

FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id


WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.[3FGM] + 3,  gp
HAVING SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 3 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
UNION
SELECT			playerAverage.[3FGM] + 4 Threes,
				SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end) as "Games Above Prop",
				SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end) as Wins,
				CONCAT(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)*100, '%') "Cover Rate",				
				CASE WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) > .5 AND 
				ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) != 1  THEN  ROUND(ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) <= .5 THEN  ROUND((1 - ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3))/ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(Case when injured.dnp = 'DNP' and pgl.min > 0 then 1 else 0 end), 3) = 1 then -1000
				END AS Line
FROM			player_game_log_injured_players pgl JOIN
				player_game_log_injured_players injured on injured.game_id = pgl.game_id AND injured.player_name = @injured	INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id
WHERE 			 GP > 1  and playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, playerAverage.[3FGM] + 4,  gp
HAVING SUM(Case when pgl.fg3m >= playerAverage.[3FGM] + 4 AND injured.dnp = 'DNP' then 1 else 0 end) > 0
ORDER BY Threes ASC
GO
------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE P @player varchar(50), @pts float
AS 
SELECT			
				@pts Points, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts 
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND 
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A @player varchar(50), @ast float
AS
SELECT			
				@ast Assists, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast 
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND 
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE R @player varchar(50), @reb float
AS
SELECT			
				@reb Rebounds, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb 
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND 
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE _3 @player varchar(50), @3s float
AS
SELECT			
				@3s "3PM", 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s 
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.fg3m >= @3s  AND 
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE B @player varchar(50), @blk float
AS
SELECT			
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk 
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.blk >= @blk  AND 
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE S @player varchar(50), @stl float
AS
SELECT			
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @stl 
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.stl >= @stl  AND 
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A @player varchar(50), @pts float, @ast float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO

CREATE PROCEDURE P_R @player varchar(50), @pts float, @reb float
AS
SELECT			
	 			@pts Points, 
				@reb Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.reb >= @reb
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.reb >= @reb AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_3 @player varchar(50), @pts float, @3s float
AS 
SELECT			
				@pts Points, 
				@3s "3PM",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_B @player varchar(50), @pts float, @blk float
AS
SELECT			
				@pts Points, 
				@blk Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.blk >= @blk AND
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC  
GO
CREATE PROCEDURE P_S @player varchar(50), @pts float, @stl float
AS
SELECT			
				@pts Points, 
				@stl Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.blk >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.blk >= @stl AND
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_R @player varchar(50), @ast float, @reb float
AS 
SELECT 			
				@ast Assists, 
				@reb Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.reb >= @reb
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.reb >= @reb AND
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_3 @player varchar(50), @ast float, @3s float
AS 
SELECT			
				@ast Assists, 
				@3s "3PM",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_B @player varchar(50), @ast float, @blk float
AS
SELECT			
				@ast Assists, 
				@blk Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.blk >= @blk AND
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_S @player varchar(50), @ast float, @stl float
AS
SELECT			
				@ast Assists, 
				@stl Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.stl >= @stl AND
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE R_3 @player varchar(50), @reb float, @3s float
AS
SELECT			
				@3s "3PM", 
				@reb Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC  
GO
CREATE PROCEDURE R_B @player varchar(50), @reb float, @blk float 
AS
SELECT			
				@blk Blocks, 
				@reb Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.blk >= @blk AND
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE R_S @player varchar(50), @reb float, @stl float
AS
SELECT			
				@stl Steals, 
				@reb Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.stl >= @stl AND
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE _3_B @player varchar(50), @3s float, @blk float
AS
SELECT			
				@3s "3PM", 
				@blk Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.blk >= @blk  AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE _3_S @player varchar(50), @3s float, @stl float
AS
SELECT			
				@3s "3PM", 
				@stl Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @stl AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.stl >= @stl  AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE B_S @player varchar(50), @stl float, @blk float
AS
SELECT			
				@blk Blocks, 
				@stl Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @stl AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.stl >= @stl  AND pgl.blk >= @blk AND
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_R @player varchar(50), @pts float, @ast float, @reb float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@reb Rebounds, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.reb >= @reb
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.reb >= @reb AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_3 @player varchar(50), @pts float, @ast float, @3s float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@3s "3PM",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_B @player varchar(50), @pts float, @ast float, @blk float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@blk Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.blk >= @blk AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_S @player varchar(50), @pts float, @ast float, @stl float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_R_3 @player varchar(50), @pts float, @reb float, @3s float
AS
SELECT	 		
				@pts Points, 
				@reb Rebounds,
				@3s "3PM", 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.reb >= @reb  AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_R_B @player varchar(50), @pts float, @reb float, @blk float
AS
SELECT	 		
				@pts Points, 
				@reb Rebounds,
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.reb >= @reb  AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.reb >= @reb AND pgl.blk >= @blk AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_R_S @player varchar(50), @pts float, @reb float, @stl float
AS
SELECT	 		
			 	@pts Points, 
				@reb Rebounds,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.reb >= @reb  AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.reb >= @reb AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_3_B @player varchar(50), @blk float, @pts float, @3s float
AS
SELECT			
	 			@pts Points,
				@3s "3PM", 
				@blk Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.blk >= @blk  AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.blk >= @blk AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_3_S @player varchar(50), @stl float, @pts float, @3s float
AS
SELECT			
	  			@pts Points,
				@3s "3PM", 
				@stl Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.stl >= @stl  AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.stl >= @stl AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_B_S @player varchar(50), @pts float, @blk float, @stl float
AS
SELECT	 		
			 	@pts Points, 
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.blk >= @blk  AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_R_3 @player varchar(50), @ast float, @reb float, @3s float
AS
SELECT			
				@ast Assists, 
				@reb Rebounds,
				@3s "3PM", 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.ast >= @ast  AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.ast >= @ast AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_R_B @player varchar(50), @ast float, @reb float, @blk float
AS
SELECT			
				@ast Assists, 
				@reb Rebounds,
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.ast >= @ast  AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.ast >= @ast AND pgl.blk >= @blk AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_R_S @player varchar(50), @ast float, @reb float, @stl float
AS
SELECT			
				@ast Assists, 
				@reb Rebounds,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.ast >= @ast  AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.ast >= @ast AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_3_B @player varchar(50), @ast float, @3s float, @blk float
AS
SELECT			
				@ast Assists, 
				@3s "3PM",
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s AND pgl.ast >= @ast  AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.fg3m >= @3s  AND pgl.ast >= @ast AND pgl.blk >= @blk AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_3_S @player varchar(50), @ast float, @3s float, @stl float
AS
SELECT			
				@ast Assists, 
				@3s "3PM",
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s AND pgl.ast >= @ast  AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.fg3m >= @3s  AND pgl.ast >= @ast AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_B_S @player varchar(50), @ast float, @blk float, @stl float
AS
SELECT			
				@ast Assists, 
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk AND pgl.ast >= @ast  AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.blk >= @blk  AND pgl.ast >= @ast AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE R_3_B @player varchar(50), @blk float, @reb float, @3s float
AS 
SELECT			
				@reb Rebounds,
				@3s "3PM", 
				@blk Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.blk >= @blk  AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.blk >= @blk AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE R_3_S @player varchar(50), @stl float, @reb float, @3s float
AS
SELECT			
				@reb Rebounds,
				@3s "3PM", 
				@stl Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.stl >= @stl  AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.stl >= @stl AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE R_B_S @player varchar(50), @reb float, @blk float, @stl float
AS
SELECT	 		
			 	@reb Rebounds, 
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.blk >= @blk  AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE _3_B_S @player varchar(50), @3s float, @blk float, @stl float
AS 
SELECT	 		
			 	@3s "3PM", 
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s AND pgl.blk >= @blk  AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.fg3m >= @3s  AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_R_3 @player varchar(50), @pts float, @ast float, @reb float, @3s float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@reb Rebounds,
				@3s "3PM", 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_R_B @player varchar(50), @pts float, @ast float, @reb float, @blk float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@reb Rebounds,
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.reb >= @reb AND pgl.blk >= @blk AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_A_R_S @player varchar(50), @pts float, @ast float, @reb float, @stl float
AS 
SELECT			
				@pts Points, 
				@ast Assists,
				@reb Rebounds,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.reb >= @reb AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_A_3_B @player varchar(50), @pts float, @ast float, @3s float, @blk float
AS 
SELECT			
	 			@pts Points, 
				@ast Assists,
				@3s "3PM",
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.fg3m >= @3s AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_A_3_S @player varchar(50), @pts float, @ast float, @3s float, @stl float
AS  
SELECT			
	 			@pts Points, 
				@ast Assists,
				@3s "3PM",
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.fg3m >= @3s AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.fg3m >= @3s AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_A_B_S @player varchar(50), @pts float, @ast float, @blk float, @stl float
AS  
SELECT			
	 			@pts Points, 
				@ast Assists,
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_R_3_B @player varchar(50), @pts float, @reb float, @3s float, @blk float
AS 
SELECT			
	 			@pts Points, 
				@reb Rebounds,
				@3s "3PM",
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.reb >= @reb  AND pgl.fg3m >= @3s AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_R_3_S @player varchar(50), @pts float, @reb float, @3s float, @stl float
AS 
SELECT			
	 			@pts Points, 
				@reb Rebounds,
				@3s "3PM",
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.reb >= @reb  AND pgl.fg3m >= @3s AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_R_B_S @player varchar(50), @pts float, @reb float, @blk float, @stl float
AS 
SELECT			
	 			@pts Points, 
				@reb Rebounds,
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.reb >= @reb  AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.reb >= @reb AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_3_B_S @player varchar(50), @pts float, @3s float, @blk float, @stl float
AS 
SELECT			
	 			@pts Points, 
				@3s "3Pm",
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.fg3m >= @3s  AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_R_3_B @player varchar(50), @ast float, @reb float, @3s float, @blk float
AS 
SELECT			
	 			@ast Assists, 
				@reb Rebounds,
				@3s "3PM",
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.reb >= @reb  AND pgl.fg3m >= @3s AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE A_R_3_S @player varchar(50), @ast float, @reb float, @3s float, @stl float
AS 
SELECT			
	 			@ast Assists, 
				@reb Rebounds,
				@3s "3PM",
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.reb >= @reb  AND pgl.fg3m >= @3s AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE A_R_B_S @player varchar(50), @ast float, @reb float, @blk float, @stl float
AS 
SELECT			
	 			@ast Assists, 
				@reb Rebounds,
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.reb >= @reb  AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE A_3_B_S @player varchar(50), @ast float, @3s float, @blk float, @stl float
AS 
SELECT			
	 			@ast Assists, 
				@3s "3Pm",
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.fg3m >= @3s  AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE R_3_B_S @player varchar(50), @reb float, @3s float, @blk float, @stl float
AS 
SELECT			
	 			@reb Rebounds, 
				@3s "3Pm",
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.fg3m >= @3s  AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_A_R_3_B @player varchar(50), @pts float, @ast float, @reb float, @3s float, @blk float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@reb Rebounds,
				@3s "3PM",
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_R_3_S @player varchar(50), @pts float, @ast float, @reb float, @3s float, @stl float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@reb Rebounds,
				@3s "3PM",
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_R_B_S @player varchar(50), @pts float, @ast float, @reb float, @blk float, @stl float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@reb Rebounds,
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.reb >= @reb AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_3_B_S @player varchar(50), @pts float, @ast float, @3s float, @blk float, @stl float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@3s "3PM",
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_R_3_B_S @player varchar(50), @pts float, @reb float, @3s float, @blk float, @stl float
AS
SELECT			
				@pts Points, 
				@reb Rebounds,
				@3s "3PM",
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.reb >= @reb  AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_R_3_B_S @player varchar(50), @ast float, @reb float, @3s float, @blk float, @stl float
AS
SELECT			
				@ast Assists, 
				@reb Rebounds,
				@3s "3PM",
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.reb >= @reb  AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_S @player varchar(50), @pts float, @ast float, @reb float, @3s float, @blk float, @stl float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@reb Rebounds,
				@3s "3PM",
				@blk Blocks, 
				@stl Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp GP,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO

------------------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE P_W @player varchar(50), @pts float
AS 
SELECT			
				@pts Points, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts 
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND 
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_W @player varchar(50), @ast float
AS
SELECT			
				@ast Assists, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast 
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND 
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE R_W @player varchar(50), @reb float
AS
SELECT			
				@reb Rebounds, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb 
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND 
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE _3_W @player varchar(50), @3s float
AS
SELECT			
				@3s "3PM", 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s 
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.fg3m >= @3s  AND 
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE B_W @player varchar(50), @blk float
AS
SELECT			
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk 
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.blk >= @blk  AND 
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE S_W @player varchar(50), @stl float
AS
SELECT			
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @stl 
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.stl >= @stl  AND 
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_W @player varchar(50), @pts float, @ast float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO

CREATE PROCEDURE P_R_W @player varchar(50), @pts float, @reb float
AS
SELECT			
	 			@pts Points, 
				@reb Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.reb >= @reb
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.reb >= @reb AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_3_W @player varchar(50), @pts float, @3s float
AS 
SELECT			
				@pts Points, 
				@3s "3PM",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_B_W @player varchar(50), @pts float, @blk float
AS
SELECT			
				@pts Points, 
				@blk Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.blk >= @blk AND
			playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC  
GO
CREATE PROCEDURE P_S_W @player varchar(50), @pts float, @stl float
AS
SELECT			
				@pts Points, 
				@stl Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.blk >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.blk >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_R_W @player varchar(50), @ast float, @reb float
AS 
SELECT 			
				@ast Assists, 
				@reb Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.reb >= @reb
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.reb >= @reb AND
			playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_3_W @player varchar(50), @ast float, @3s float
AS 
SELECT			
				@ast Assists, 
				@3s "3PM",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_B_W @player varchar(50), @ast float, @blk float
AS
SELECT			
				@ast Assists, 
				@blk Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.blk >= @blk AND
			playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_S_W @player varchar(50), @ast float, @stl float
AS
SELECT			
				@ast Assists, 
				@stl Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE R_3_W @player varchar(50), @reb float, @3s float
AS
SELECT			
				@3s "3PM", 
				@reb Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC  
GO
CREATE PROCEDURE R_B_W @player varchar(50), @reb float, @blk float 
AS
SELECT			
				@blk Blocks, 
				@reb Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.blk >= @blk AND
			playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE R_S_W @player varchar(50), @reb float, @stl float
AS
SELECT			
				@stl Steals, 
				@reb Rebounds,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE _3_B_W @player varchar(50), @3s float, @blk float
AS
SELECT			
				@3s "3PM", 
				@blk Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.blk >= @blk  AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE _3_S_W @player varchar(50), @3s float, @stl float
AS
SELECT			
				@3s "3PM", 
				@stl Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @stl AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.stl >= @stl  AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE B_S_W @player varchar(50), @stl float, @blk float
AS
SELECT			
				@blk Blocks, 
				@stl Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @stl AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.stl >= @stl  AND pgl.blk >= @blk AND
			playerAverage.Player = @player AND pgl.wl = 'W' 

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_R_W @player varchar(50), @pts float, @ast float, @reb float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@reb Rebounds, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.reb >= @reb
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.reb >= @reb AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_3_W @player varchar(50), @pts float, @ast float, @3s float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@3s "3PM",
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_B_W @player varchar(50), @pts float, @ast float, @blk float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@blk Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.blk >= @blk AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_S_W @player varchar(50), @pts float, @ast float, @stl float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_R_3_W @player varchar(50), @pts float, @reb float, @3s float
AS
SELECT	 		
				@pts Points, 
				@reb Rebounds,
				@3s "3PM", 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.reb >= @reb  AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_R_B_W @player varchar(50), @pts float, @reb float, @blk float
AS
SELECT	 		
				@pts Points, 
				@reb Rebounds,
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.reb >= @reb  AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.reb >= @reb AND pgl.blk >= @blk AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_R_S_W @player varchar(50), @pts float, @reb float, @stl float
AS
SELECT	 		
			 	@pts Points, 
				@reb Rebounds,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.reb >= @reb  AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.reb >= @reb AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_3_B_W @player varchar(50), @blk float, @pts float, @3s float
AS
SELECT			
	 			@pts Points,
				@3s "3PM", 
				@blk Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.blk >= @blk  AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.blk >= @blk AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_3_S_W @player varchar(50), @stl float, @pts float, @3s float
AS
SELECT			
	  			@pts Points,
				@3s "3PM", 
				@stl Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.stl >= @stl  AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.stl >= @stl AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_B_S_W @player varchar(50), @pts float, @blk float, @stl float
AS
SELECT	 		
			 	@pts Points, 
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.blk >= @blk  AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_R_3_W @player varchar(50), @ast float, @reb float, @3s float
AS
SELECT			
				@ast Assists, 
				@reb Rebounds,
				@3s "3PM", 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.ast >= @ast  AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.ast >= @ast AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_R_B_W @player varchar(50), @ast float, @reb float, @blk float
AS
SELECT			
				@ast Assists, 
				@reb Rebounds,
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.ast >= @ast  AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.ast >= @ast AND pgl.blk >= @blk AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_R_S_W @player varchar(50), @ast float, @reb float, @stl float
AS
SELECT			
				@ast Assists, 
				@reb Rebounds,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.ast >= @ast  AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.ast >= @ast AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_3_B_W @player varchar(50), @ast float, @3s float, @blk float
AS
SELECT			
				@ast Assists, 
				@3s "3PM",
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s AND pgl.ast >= @ast  AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.fg3m >= @3s  AND pgl.ast >= @ast AND pgl.blk >= @blk AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_3_S_W @player varchar(50), @ast float, @3s float, @stl float
AS
SELECT			
				@ast Assists, 
				@3s "3PM",
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s AND pgl.ast >= @ast  AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.fg3m >= @3s  AND pgl.ast >= @ast AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_B_S_W @player varchar(50), @ast float, @blk float, @stl float
AS
SELECT			
				@ast Assists, 
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk AND pgl.ast >= @ast  AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.blk >= @blk  AND pgl.ast >= @ast AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE R_3_B_W @player varchar(50), @blk float, @reb float, @3s float
AS 
SELECT			
				@reb Rebounds,
				@3s "3PM", 
				@blk Blocks,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.blk >= @blk  AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.blk >= @blk AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE R_3_S_W @player varchar(50), @stl float, @reb float, @3s float
AS
SELECT			
				@reb Rebounds,
				@3s "3PM", 
				@stl Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.stl >= @stl  AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.stl >= @stl AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE R_B_S_W @player varchar(50), @reb float, @blk float, @stl float
AS
SELECT	 		
			 	@reb Rebounds, 
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.blk >= @blk  AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE _3_B_S_W @player varchar(50), @3s float, @blk float, @stl float
AS 
SELECT	 		
			 	@3s "3PM", 
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s AND pgl.blk >= @blk  AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.fg3m >= @3s  AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_R_3_W @player varchar(50), @pts float, @ast float, @reb float, @3s float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@reb Rebounds,
				@3s "3PM", 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.fg3m >= @3s
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_R_B_W @player varchar(50), @pts float, @ast float, @reb float, @blk float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@reb Rebounds,
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.reb >= @reb AND pgl.blk >= @blk AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_A_R_S_W @player varchar(50), @pts float, @ast float, @reb float, @stl float
AS 
SELECT			
				@pts Points, 
				@ast Assists,
				@reb Rebounds,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.reb >= @reb AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_A_3_B_W @player varchar(50), @pts float, @ast float, @3s float, @blk float
AS 
SELECT			
	 			@pts Points, 
				@ast Assists,
				@3s "3PM",
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.fg3m >= @3s AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_A_3_S_W @player varchar(50), @pts float, @ast float, @3s float, @stl float
AS  
SELECT			
	 			@pts Points, 
				@ast Assists,
				@3s "3PM",
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.fg3m >= @3s AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.fg3m >= @3s AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_A_B_S_W @player varchar(50), @pts float, @ast float, @blk float, @stl float
AS  
SELECT			
	 			@pts Points, 
				@ast Assists,
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_R_3_B_W @player varchar(50), @pts float, @reb float, @3s float, @blk float
AS 
SELECT			
	 			@pts Points, 
				@reb Rebounds,
				@3s "3PM",
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.reb >= @reb  AND pgl.fg3m >= @3s AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_R_3_S_W @player varchar(50), @pts float, @reb float, @3s float, @stl float
AS 
SELECT			
	 			@pts Points, 
				@reb Rebounds,
				@3s "3PM",
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.reb >= @reb  AND pgl.fg3m >= @3s AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_R_B_S_W @player varchar(50), @pts float, @reb float, @blk float, @stl float
AS 
SELECT			
	 			@pts Points, 
				@reb Rebounds,
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.reb >= @reb  AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.reb >= @reb AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_3_B_S_W @player varchar(50), @pts float, @3s float, @blk float, @stl float
AS 
SELECT			
	 			@pts Points, 
				@3s "3Pm",
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.fg3m >= @3s  AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_R_3_B_W @player varchar(50), @ast float, @reb float, @3s float, @blk float
AS 
SELECT			
	 			@ast Assists, 
				@reb Rebounds,
				@3s "3PM",
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.reb >= @reb  AND pgl.fg3m >= @3s AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE A_R_3_S_W @player varchar(50), @ast float, @reb float, @3s float, @stl float
AS 
SELECT			
	 			@ast Assists, 
				@reb Rebounds,
				@3s "3PM",
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.reb >= @reb  AND pgl.fg3m >= @3s AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE A_R_B_S_W @player varchar(50), @ast float, @reb float, @blk float, @stl float
AS 
SELECT			
	 			@ast Assists, 
				@reb Rebounds,
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.reb >= @reb  AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE A_3_B_S_W @player varchar(50), @ast float, @3s float, @blk float, @stl float
AS 
SELECT			
	 			@ast Assists, 
				@3s "3Pm",
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.fg3m >= @3s  AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE R_3_B_S_W @player varchar(50), @reb float, @3s float, @blk float, @stl float
AS 
SELECT			
	 			@reb Rebounds, 
				@3s "3Pm",
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb AND pgl.fg3m >= @3s  AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.reb >= @reb  AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_W @player varchar(50), @pts float, @ast float, @reb float, @3s float, @blk float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@reb Rebounds,
				@3s "3PM",
				@blk Blocks, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.blk >= @blk
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_R_3_S_W @player varchar(50), @pts float, @ast float, @reb float, @3s float, @stl float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@reb Rebounds,
				@3s "3PM",
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_R_B_S_W @player varchar(50), @pts float, @ast float, @reb float, @blk float, @stl float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@reb Rebounds,
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.reb >= @reb AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_A_3_B_S_W @player varchar(50), @pts float, @ast float, @3s float, @blk float, @stl float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@3s "3PM",
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE P_R_3_B_S_W @player varchar(50), @pts float, @reb float, @3s float, @blk float, @stl float
AS
SELECT			
				@pts Points, 
				@reb Rebounds,
				@3s "3PM",
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.reb >= @reb  AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
CREATE PROCEDURE A_R_3_B_S_W @player varchar(50), @ast float, @reb float, @3s float, @blk float, @stl float
AS
SELECT			
				@ast Assists, 
				@reb Rebounds,
				@3s "3PM",
				@blk Blocks,
				@stl Steals, 
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast AND pgl.reb >= @reb  AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_S_W @player varchar(50), @pts float, @ast float, @reb float, @3s float, @blk float, @stl float
AS
SELECT			
				@pts Points, 
				@ast Assists,
				@reb Rebounds,
				@3s "3PM",
				@blk Blocks, 
				@stl Steals,
				COUNT(pgl.player_ID) "Games Above Prop", 
				gp.gp Wins,
				CONCAT(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) > .5 and ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) != 1
				THEN  ROUND(ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)/(1-ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3)) * (-100), 0) 
				WHEN ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3))/ROUND(CAST(COUNT(pgl.player_ID)as float)/gp.gp, 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pgl.ast >= @ast  AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl
				then 1 else 0 end)as float)/gp.gp, 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gpw gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0 AND
 			pgl.pts >= @pts  AND pgl.ast >= @ast AND pgl.reb >= @reb AND pgl.fg3m >= @3s AND pgl.blk >= @blk AND pgl.stl >= @stl AND
			playerAverage.Player = @player AND pgl.wl = 'W'

GROUP BY		playerAverage.Player, gp.gp
ORDER BY CAST(COUNT(pgl.player_ID)as float)/gp.gp DESC 
GO
--------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE P_2 @player varchar(50), @player2 varchar(50),  @pts float,  @pts2 float
AS 
SELECT			
				CONCAT(@player, ': ', @pts, '    ', @player2, ': ', @pts2) Points,
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(COUNT(pgl.player_ID)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_2 @player varchar(50), @player2 varchar(50),  @ast float,  @ast2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '    ', @player2, ': ', @ast2) Assists,
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_2 @player varchar(50), @player2 varchar(50),  @reb float,  @reb2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '    ', @player2, ': ', @reb2) Rebounds,
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_2 @player varchar(50), @player2 varchar(50),  @3s float,  @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '    ', @player2, ': ', @3s2) "3PM",
				SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE B_2 @player varchar(50), @player2 varchar(50),  @blk float,  @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @blk, '    ', @player2, ': ', @blk2) Blocks,
				SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE S_2 @player varchar(50), @player2 varchar(50),  @stl float,  @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @stl, '    ', @player2, ': ', @stl2) Steals,
				SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_2 @player varchar(50), @player2 varchar(50),  @pts float, @ast float,  @pts2 float, @ast2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '    ', @player2, ': ', @pts2, '/', @ast2) "Points/Assists",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO

CREATE PROCEDURE P_R_2 @player varchar(50), @player2 varchar(50),  @pts float, @reb float,  @pts2 float, @reb2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '    ', @player2, ': ', @pts2, '/', @reb2) "Points/Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2 and pgl.reb >= @reb and pg2.reb >= @reb2  
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_2 @player varchar(50), @player2 varchar(50),  @pts float, @3s float, @pts2 float, @3s2 float
AS 
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '    ', @player2, ': ', @pts2, '/', @3s2) "Points/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_2 @player varchar(50), @player2 varchar(50),  @pts float, @blk float, @pts2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @blk, '    ', @player2, ': ', @pts2, '/', @blk2) "Points/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2 and pgl.blk >= @blk and pg2.blk >= @blk2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_S_2 @player varchar(50), @player2 varchar(50),  @pts float, @stl float,  @pts2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @stl, '    ', @player2, ': ', @pts2, '/', @stl2) "Points/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_2 @player varchar(50), @player2 varchar(50),  @ast float, @reb float,  @ast2 float, @reb2 float
AS 
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '    ', @player2, ': ', @ast2, '/', @reb2) "Assists/Rebounds",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_2 @player varchar(50), @player2 varchar(50),  @ast float, @3s float,  @ast2 float, @3s2 float
AS 
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '    ', @player2, ': ', @ast2, '/', @3s2) "Assists/3PM",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_2 @player varchar(50), @player2 varchar(50),  @ast float, @blk float,  @ast2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @blk, '    ', @player2, ': ', @ast2, '/', @blk2) "Assists/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_S_2 @player varchar(50), @player2 varchar(50),  @ast float, @stl float,  @ast2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @stl, '    ', @player2, ': ', @ast2, '/', @stl2) "Assists/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_2 @player varchar(50), @player2 varchar(50),  @reb float, @3s float,  @reb2 float, @3s2 float
AS 
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '    ', @player2, ': ', @reb2, '/', @3s2) "Rebounds/3PM",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_2 @player varchar(50), @player2 varchar(50),  @reb float, @blk float,  @reb2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @blk, '    ', @player2, ': ', @reb2, '/', @blk2) "Rebounds/Blocks",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_S_2 @player varchar(50), @player2 varchar(50),  @reb float, @stl float,  @reb2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @stl, '    ', @player2, ': ', @reb2, '/', @stl2) "Rebounds/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_2 @player varchar(50), @player2 varchar(50),  @3s float, @blk float,  @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @blk, '    ', @player2, ': ', @3s2, '/', @blk2) "Threes/Blocks",
				SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_S_2 @player varchar(50), @player2 varchar(50),  @3s float, @stl float,  @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @stl, '    ', @player2, ': ', @3s2, '/', @stl2) "Threes/Steals",
				SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO

CREATE PROCEDURE B_S_2 @player varchar(50), @player2 varchar(50),  @stl float, @blk float,  @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @blk, '/', @stl, '    ', @player2, ': ', @blk2, '/', @stl2) "Blocks/Steals",
				SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @blk and pg2.stl >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
--drop PROCEDURE P_A_R_2
CREATE PROCEDURE P_A_R_2 @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @reb float,  @pts2 float, @ast2 float, @reb2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2) "Points/Assists/Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_2 @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @3s float,  @pts2 float, @ast2 float, @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2) "Points/Assists/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_2 @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @blk float,  @pts2 float, @ast2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @blk2) "Points/Assists/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_S_2 @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @stl float,  @pts2 float, @ast2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @stl2) "Points/Assists/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_2 @player varchar(50), @player2 varchar(50),  @pts float, @reb float, @3s float,  @pts2 float, @reb2 float, @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2) "Points/Rebounds/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_B_2 @player varchar(50), @player2 varchar(50),  @pts float, @reb float, @blk float,  @pts2 float, @reb2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @blk, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @blk2) "Points/Rebounds/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_S_2 @player varchar(50), @player2 varchar(50),  @pts float, @reb float, @stl float,  @pts2 float, @reb2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @stl, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @stl2) "Points/Rebounds/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_B_2 @player varchar(50), @player2 varchar(50),  @blk float, @pts float, @3s float,  @pts2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @blk, '    ', @player2, ': ', @pts2, '/', @3s2, '/', @blk2) "Points/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_S_2 @player varchar(50), @player2 varchar(50),  @stl float, @pts float, @3s float,  @pts2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @stl, '    ', @player2, ': ', @pts2, '/', @3s2, '/', @stl2) "Points/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_S_2 @player varchar(50), @player2 varchar(50),  @pts float, @blk float, @stl float,  @pts2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @blk, '/', @stl, '    ', @player2, ': ', @pts2, '/', @blk2, '/', @stl2) "Points/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_2 @player varchar(50), @player2 varchar(50),  @ast float, @reb float, @3s float,  @ast2 float, @reb2 float, @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2) "Assists/Rebounds/Threes",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_2 @player varchar(50), @player2 varchar(50),  @ast float, @reb float, @blk float,  @ast2 float, @reb2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @blk, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @blk2) "Assists/Rebounds/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_S_2 @player varchar(50), @player2 varchar(50),  @ast float, @reb float, @stl float,  @ast2 float, @reb2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @stl, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @stl2) "Assists/Rebounds/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_B_2 @player varchar(50), @player2 varchar(50),  @ast float, @3s float, @blk float,  @ast2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @blk, '    ', @player2, ': ', @ast2, '/', @3s2, '/', @blk2) "Assists/Threes/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_S_2 @player varchar(50), @player2 varchar(50),  @ast float, @3s float, @stl float,  @ast2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @stl, '    ', @player2, ': ', @ast2, '/', @3s2, '/', @stl2) "Assists/Threes/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_S_2 @player varchar(50), @player2 varchar(50),  @ast float, @blk float, @stl float,  @ast2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @blk, '/', @stl, '    ', @player2, ': ', @ast2, '/', @blk2, '/', @stl2) "Assists/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_B_2 @player varchar(50), @player2 varchar(50),  @blk float, @reb float, @3s float,  @reb2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @blk, '    ', @player2, ': ', @reb2, '/', @3s2, '/', @blk2) "Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_S_2 @player varchar(50), @player2 varchar(50),  @stl float, @reb float, @3s float,  @reb2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @stl, '    ', @player2, ': ', @reb2, '/', @3s2, '/', @stl2) "Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_S_2 @player varchar(50), @player2 varchar(50),  @reb float, @blk float, @stl float,  @reb2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @blk, '/', @stl, '    ', @player2, ': ', @reb2, '/', @blk2, '/', @stl2) "Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2  and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_S_2 @player varchar(50), @player2 varchar(50),  @3s float, @blk float, @stl float,  @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @blk, '/', @stl, '    ', @player2, ': ', @3s2, '/', @blk2, '/', @stl2) "Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2  and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_2 @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @reb float, @3s float,  @pts2 float, @ast2 float, @reb2 float, @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2) "Points/Assists/Rebounds/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_2 @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @reb float, @blk float,  @pts2 float, @ast2 float, @reb2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @blk2) "Points/Assists/Rebounds/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_S_2 @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @reb float, @stl float,  @pts2 float, @ast2 float, @reb2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @stl2) "Points/Assists/Rebounds/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_2 @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @3s float, @blk float,  @pts2 float, @ast2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @blk2) "Points/Assists/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_S_2 @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @3s float, @stl float,  @pts2 float, @ast2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @stl2) "Points/Assists/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_S_2 @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @blk float, @stl float,  @pts2 float, @ast2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @blk2, '/', @stl2) "Points/Assists/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_2 @player varchar(50), @player2 varchar(50),  @pts float, @reb float, @3s float, @blk float,  @pts2 float, @reb2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @blk2) "Points/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_3_S_2 @player varchar(50), @player2 varchar(50),  @pts float, @reb float, @3s float, @stl float,  @pts2 float, @reb2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @stl2) "Points/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_B_S_2 @player varchar(50), @player2 varchar(50),  @pts float, @reb float, @blk float, @stl float,  @pts2 float, @reb2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @blk2, '/', @stl2) "Points/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_3_B_S_2 @player varchar(50), @player2 varchar(50),  @pts float, @3s float, @blk float, @stl float,  @pts2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @3s2, '/', @blk2, '/', @stl2) "Points/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_R_3_B_2 @player varchar(50), @player2 varchar(50),  @ast float, @reb float, @3s float, @blk float,  @ast2 float, @reb2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @blk,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @blk2) "Assists/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO  
CREATE PROCEDURE A_R_3_S_2 @player varchar(50), @player2 varchar(50),  @ast float, @reb float, @3s float, @stl float,  @ast2 float, @reb2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @stl2) "Assists/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_S_2 @player varchar(50), @player2 varchar(50),  @ast float, @reb float, @blk float, @stl float,  @ast2 float, @reb2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @blk, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @blk2, '/', @stl2) "Assists/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_3_B_S_2 @player varchar(50), @player2 varchar(50),  @ast float, @3s float, @blk float, @stl float,  @ast2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @3s2, '/', @blk2, '/', @stl2) "Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE R_3_B_S_2 @player varchar(50), @player2 varchar(50),  @reb float, @3s float, @blk float, @stl float,  @reb2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @reb2, '/', @3s2, '/', @blk2, '/', @stl2) "Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_2 @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float,  @pts2 float, @ast2 float, @reb2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @blk2) "Points/Assists/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_S_2 @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @reb float, @3s float, @stl float,  @pts2 float, @ast2 float, @reb2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @stl2) "Points/Assists/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_S_2 @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @reb float, @blk float, @stl float,  @pts2 float, @ast2 float, @reb2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @blk2, '/', @stl2) "Points/Assists/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_S_2 @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @3s float, @blk float, @stl float,  @pts2 float, @ast2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @blk2, '/', @stl2) "Points/Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_S_2 @player varchar(50), @player2 varchar(50),  @pts float, @reb float, @3s float, @blk float, @stl float,  @pts2 float, @reb2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @blk2, '/', @stl2) "Points/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_B_S_2 @player varchar(50), @player2 varchar(50),  @ast float, @reb float, @3s float, @blk float, @stl float,  @ast2 float, @reb2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @blk2, '/', @stl2) "Assists/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_S_2 @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float, @stl float,  @pts2 float, @ast2 float, @reb2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @blk2) "Points/Assists/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO

------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE P_2_W @player varchar(50), @player2 varchar(50),  @pts float,  @pts2 float
AS 
SELECT			
				CONCAT(@player, ': ', @pts, '    ', @player2, ': ', @pts2) Points,
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_2_W @player varchar(50), @player2 varchar(50),  @ast float,  @ast2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '    ', @player2, ': ', @ast2) Assists,
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_2_W @player varchar(50), @player2 varchar(50),  @reb float,  @reb2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '    ', @player2, ': ', @reb2) Rebounds,
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_2_W @player varchar(50), @player2 varchar(50),  @3s float,  @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '    ', @player2, ': ', @3s2) "3PM",
				SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE B_2_W @player varchar(50), @player2 varchar(50),  @blk float,  @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @blk, '    ', @player2, ': ', @blk2) Blocks,
				SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE S_2_W @player varchar(50), @player2 varchar(50),  @stl float,  @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @stl, '    ', @player2, ': ', @stl2) Steals,
				SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_2_W @player varchar(50), @player2 varchar(50),  @pts float, @ast float,  @pts2 float, @ast2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '    ', @player2, ': ', @pts2, '/', @ast2) "Points/Assists",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_2_W @player varchar(50), @player2 varchar(50),  @pts float, @reb float,  @pts2 float, @reb2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '    ', @player2, ': ', @pts2, '/', @reb2) "Points/Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2 and pgl.reb >= @reb and pg2.reb >= @reb2  
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_2_W @player varchar(50), @player2 varchar(50),  @pts float, @3s float, @pts2 float, @3s2 float
AS 
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '    ', @player2, ': ', @pts2, '/', @3s2) "Points/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_2_W @player varchar(50), @player2 varchar(50),  @pts float, @blk float, @pts2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @blk, '    ', @player2, ': ', @pts2, '/', @blk2) "Points/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2 and pgl.blk >= @blk and pg2.blk >= @blk2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_S_2_W @player varchar(50), @player2 varchar(50),  @pts float, @stl float,  @pts2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @stl, '    ', @player2, ': ', @pts2, '/', @stl2) "Points/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_2_W @player varchar(50), @player2 varchar(50),  @ast float, @reb float,  @ast2 float, @reb2 float
AS 
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '    ', @player2, ': ', @ast2, '/', @reb2) "Assists/Rebounds",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_2_W @player varchar(50), @player2 varchar(50),  @ast float, @3s float,  @ast2 float, @3s2 float
AS 
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '    ', @player2, ': ', @ast2, '/', @3s2) "Assists/3PM",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_2_W @player varchar(50), @player2 varchar(50),  @ast float, @blk float,  @ast2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @blk, '    ', @player2, ': ', @ast2, '/', @blk2) "Assists/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_S_2_W @player varchar(50), @player2 varchar(50),  @ast float, @stl float,  @ast2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @stl, '    ', @player2, ': ', @ast2, '/', @stl2) "Assists/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_2_W @player varchar(50), @player2 varchar(50),  @reb float, @3s float,  @reb2 float, @3s2 float
AS 
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '    ', @player2, ': ', @reb2, '/', @3s2) "Rebounds/3PM",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_2_W @player varchar(50), @player2 varchar(50),  @reb float, @blk float,  @reb2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @blk, '    ', @player2, ': ', @reb2, '/', @blk2) "Rebounds/Blocks",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_S_2_W @player varchar(50), @player2 varchar(50),  @reb float, @stl float,  @reb2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @stl, '    ', @player2, ': ', @reb2, '/', @stl2) "Rebounds/Steals",
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb  and pgl.stl >= @stl and pg2.stl >= @stl2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(COUNT(pgl.player_ID)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_2_W @player varchar(50), @player2 varchar(50),  @3s float, @blk float,  @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @blk, '    ', @player2, ': ', @3s2, '/', @blk2) "Threes/Blocks",
				SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_S_2_W @player varchar(50), @player2 varchar(50),  @3s float, @stl float,  @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @stl, '    ', @player2, ': ', @3s2, '/', @stl2) "Threes/Steals",
				SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE B_S_2_W @player varchar(50), @player2 varchar(50),  @stl float, @blk float,  @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @blk, '/', @stl, '    ', @player2, ': ', @blk2, '/', @stl2) "Blocks/Steals",
				SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @blk and pg2.stl >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
--
CREATE PROCEDURE P_A_R_2_W @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @reb float,  @pts2 float, @ast2 float, @reb2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2) "Points/Assists/Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_2_W @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @3s float,  @pts2 float, @ast2 float, @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2) "Points/Assists/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_2_W @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @blk float,  @pts2 float, @ast2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @blk2) "Points/Assists/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_S_2_W @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @stl float,  @pts2 float, @ast2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @stl2) "Points/Assists/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_2_W @player varchar(50), @player2 varchar(50),  @pts float, @reb float, @3s float,  @pts2 float, @reb2 float, @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2) "Points/Rebounds/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_B_2_W @player varchar(50), @player2 varchar(50),  @pts float, @reb float, @blk float,  @pts2 float, @reb2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @blk, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @blk2) "Points/Rebounds/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_S_2_W @player varchar(50), @player2 varchar(50),  @pts float, @reb float, @stl float,  @pts2 float, @reb2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @stl, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @stl2) "Points/Rebounds/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_B_2_W @player varchar(50), @player2 varchar(50),  @blk float, @pts float, @3s float,  @pts2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @blk, '    ', @player2, ': ', @pts2, '/', @3s2, '/', @blk2) "Points/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_S_2_W @player varchar(50), @player2 varchar(50),  @stl float, @pts float, @3s float,  @pts2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @stl, '    ', @player2, ': ', @pts2, '/', @3s2, '/', @stl2) "Points/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_S_2_W @player varchar(50), @player2 varchar(50),  @pts float, @blk float, @stl float,  @pts2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @blk, '/', @stl, '    ', @player2, ': ', @pts2, '/', @blk2, '/', @stl2) "Points/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_2_W @player varchar(50), @player2 varchar(50),  @ast float, @reb float, @3s float,  @ast2 float, @reb2 float, @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2) "Assists/Rebounds/Threes",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_2_W @player varchar(50), @player2 varchar(50),  @ast float, @reb float, @blk float,  @ast2 float, @reb2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @blk, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @blk2) "Assists/Rebounds/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_S_2_W @player varchar(50), @player2 varchar(50),  @ast float, @reb float, @stl float,  @ast2 float, @reb2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @stl, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @stl2) "Assists/Rebounds/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_B_2_W @player varchar(50), @player2 varchar(50),  @ast float, @3s float, @blk float,  @ast2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @blk, '    ', @player2, ': ', @ast2, '/', @3s2, '/', @blk2) "Assists/Threes/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_S_2_W @player varchar(50), @player2 varchar(50),  @ast float, @3s float, @stl float,  @ast2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @stl, '    ', @player2, ': ', @ast2, '/', @3s2, '/', @stl2) "Assists/Threes/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_S_2_W @player varchar(50), @player2 varchar(50),  @ast float, @blk float, @stl float,  @ast2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @blk, '/', @stl, '    ', @player2, ': ', @ast2, '/', @blk2, '/', @stl2) "Assists/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_B_2_W @player varchar(50), @player2 varchar(50),  @blk float, @reb float, @3s float,  @reb2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @blk, '    ', @player2, ': ', @reb2, '/', @3s2, '/', @blk2) "Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_S_2_W @player varchar(50), @player2 varchar(50),  @stl float, @reb float, @3s float,  @reb2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @stl, '    ', @player2, ': ', @reb2, '/', @3s2, '/', @stl2) "Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_S_2_W @player varchar(50), @player2 varchar(50),  @reb float, @blk float, @stl float,  @reb2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @blk, '/', @stl, '    ', @player2, ': ', @reb2, '/', @blk2, '/', @stl2) "Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2  and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_S_2_W @player varchar(50), @player2 varchar(50),  @3s float, @blk float, @stl float,  @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @blk, '/', @stl, '    ', @player2, ': ', @3s2, '/', @blk2, '/', @stl2) "Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2  and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_2_W @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @reb float, @3s float,  @pts2 float, @ast2 float, @reb2 float, @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2) "Points/Assists/Rebounds/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_2_W @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @reb float, @blk float,  @pts2 float, @ast2 float, @reb2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @blk2) "Points/Assists/Rebounds/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_S_2_W @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @reb float, @stl float,  @pts2 float, @ast2 float, @reb2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @stl2) "Points/Assists/Rebounds/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_2_W @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @3s float, @blk float,  @pts2 float, @ast2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @blk2) "Points/Assists/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_S_2_W @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @3s float, @stl float,  @pts2 float, @ast2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @stl2) "Points/Assists/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_S_2_W @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @blk float, @stl float,  @pts2 float, @ast2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @blk2, '/', @stl2) "Points/Assists/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_2_W @player varchar(50), @player2 varchar(50),  @pts float, @reb float, @3s float, @blk float,  @pts2 float, @reb2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @blk2) "Points/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_3_S_2_W @player varchar(50), @player2 varchar(50),  @pts float, @reb float, @3s float, @stl float,  @pts2 float, @reb2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @stl2) "Points/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_B_S_2_W @player varchar(50), @player2 varchar(50),  @pts float, @reb float, @blk float, @stl float,  @pts2 float, @reb2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @blk2, '/', @stl2) "Points/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_3_B_S_2_W @player varchar(50), @player2 varchar(50),  @pts float, @3s float, @blk float, @stl float,  @pts2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @3s2, '/', @blk2, '/', @stl2) "Points/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_R_3_B_2_W @player varchar(50), @player2 varchar(50),  @ast float, @reb float, @3s float, @blk float,  @ast2 float, @reb2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @blk,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @blk2) "Assists/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO  
CREATE PROCEDURE A_R_3_S_2_W @player varchar(50), @player2 varchar(50),  @ast float, @reb float, @3s float, @stl float,  @ast2 float, @reb2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @stl2) "Assists/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_S_2_W @player varchar(50), @player2 varchar(50),  @ast float, @reb float, @blk float, @stl float,  @ast2 float, @reb2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @blk, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @blk2, '/', @stl2) "Assists/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_3_B_S_2_W @player varchar(50), @player2 varchar(50),  @ast float, @3s float, @blk float, @stl float,  @ast2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @3s2, '/', @blk2, '/', @stl2) "Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE R_3_B_S_2_W @player varchar(50), @player2 varchar(50),  @reb float, @3s float, @blk float, @stl float,  @reb2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @reb2, '/', @3s2, '/', @blk2, '/', @stl2) "Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_2_W @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float,  @pts2 float, @ast2 float, @reb2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @blk2) "Points/Assists/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_S_2_W @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @reb float, @3s float, @stl float,  @pts2 float, @ast2 float, @reb2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @stl2) "Points/Assists/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_S_2_W @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @reb float, @blk float, @stl float,  @pts2 float, @ast2 float, @reb2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @blk2, '/', @stl2) "Points/Assists/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_S_2_W @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @3s float, @blk float, @stl float,  @pts2 float, @ast2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @blk2, '/', @stl2) "Points/Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_S_2_W @player varchar(50), @player2 varchar(50),@pts float, @reb float, @3s float, @blk float, @stl float,  @pts2 float, @reb2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @blk2, '/', @stl2) "Points/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_B_S_2_W @player varchar(50), @player2 varchar(50),  @ast float, @reb float, @3s float, @blk float, @stl float,  @ast2 float, @reb2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @blk2, '/', @stl2) "Assists/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_S_2_W @player varchar(50), @player2 varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float, @stl float,  @pts2 float, @ast2 float, @reb2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @blk2) "Points/Assists/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 then 1 else 0 end) DESC 
GO
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE P_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float,  @pts2 float
AS 
SELECT			
				CONCAT(@player, ': ', @pts, '    ', @player2, ': ', @pts2) Points,
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(COUNT(pgl.player_ID)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float,  @ast2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '    ', @player2, ': ', @ast2) Assists,
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @reb float,  @reb2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '    ', @player2, ': ', @reb2) Rebounds,
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @3s float,  @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '    ', @player2, ': ', @3s2) "3PM",
				SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE B_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @blk float,  @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @blk, '    ', @player2, ': ', @blk2) Blocks,
				SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @stl float,  @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @stl, '    ', @player2, ': ', @stl2) Steals,
				SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float,  @pts2 float, @ast2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '    ', @player2, ': ', @pts2, '/', @ast2) "Points/Assists",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO

CREATE PROCEDURE P_R_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @reb float,  @pts2 float, @reb2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '    ', @player2, ': ', @pts2, '/', @reb2) "Points/Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2 and pgl.reb >= @reb and pg2.reb >= @reb2  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @3s float, @pts2 float, @3s2 float
AS 
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '    ', @player2, ': ', @pts2, '/', @3s2) "Points/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @blk float, @pts2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @blk, '    ', @player2, ': ', @pts2, '/', @blk2) "Points/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2 and pgl.blk >= @blk and pg2.blk >= @blk2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @stl float,  @pts2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @stl, '    ', @player2, ': ', @pts2, '/', @stl2) "Points/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @reb float,  @ast2 float, @reb2 float
AS 
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '    ', @player2, ': ', @ast2, '/', @reb2) "Assists/Rebounds",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @3s float,  @ast2 float, @3s2 float
AS 
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '    ', @player2, ': ', @ast2, '/', @3s2) "Assists/3PM",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @blk float,  @ast2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @blk, '    ', @player2, ': ', @ast2, '/', @blk2) "Assists/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @stl float,  @ast2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @stl, '    ', @player2, ': ', @ast2, '/', @stl2) "Assists/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @reb float, @3s float,  @reb2 float, @3s2 float
AS 
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '    ', @player2, ': ', @reb2, '/', @3s2) "Rebounds/3PM",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @reb float, @blk float,  @reb2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @blk, '    ', @player2, ': ', @reb2, '/', @blk2) "Rebounds/Blocks",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @reb float, @stl float,  @reb2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @stl, '    ', @player2, ': ', @reb2, '/', @stl2) "Rebounds/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @3s float, @blk float,  @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @blk, '    ', @player2, ': ', @3s2, '/', @blk2) "Threes/Blocks",
				SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @3s float, @stl float,  @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @stl, '    ', @player2, ': ', @3s2, '/', @stl2) "Threes/Steals",
				SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO

CREATE PROCEDURE B_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @stl float, @blk float,  @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @blk, '/', @stl, '    ', @player2, ': ', @blk2, '/', @stl2) "Blocks/Steals",
				SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @blk and pg2.stl >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
--drop PROCEDURE P_A_R_2
CREATE PROCEDURE P_A_R_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float,  @pts2 float, @ast2 float, @reb2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2) "Points/Assists/Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @3s float,  @pts2 float, @ast2 float, @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2) "Points/Assists/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @blk float,  @pts2 float, @ast2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @blk2) "Points/Assists/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @stl float,  @pts2 float, @ast2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @stl2) "Points/Assists/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @reb float, @3s float,  @pts2 float, @reb2 float, @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2) "Points/Rebounds/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_B_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @reb float, @blk float,  @pts2 float, @reb2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @blk, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @blk2) "Points/Rebounds/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @reb float, @stl float,  @pts2 float, @reb2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @stl, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @stl2) "Points/Rebounds/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_B_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @blk float, @pts float, @3s float,  @pts2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @blk, '    ', @player2, ': ', @pts2, '/', @3s2, '/', @blk2) "Points/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @stl float, @pts float, @3s float,  @pts2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @stl, '    ', @player2, ': ', @pts2, '/', @3s2, '/', @stl2) "Points/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @blk float, @stl float,  @pts2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @blk, '/', @stl, '    ', @player2, ': ', @pts2, '/', @blk2, '/', @stl2) "Points/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @reb float, @3s float,  @ast2 float, @reb2 float, @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2) "Assists/Rebounds/Threes",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @reb float, @blk float,  @ast2 float, @reb2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @blk, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @blk2) "Assists/Rebounds/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @reb float, @stl float,  @ast2 float, @reb2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @stl, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @stl2) "Assists/Rebounds/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_B_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @3s float, @blk float,  @ast2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @blk, '    ', @player2, ': ', @ast2, '/', @3s2, '/', @blk2) "Assists/Threes/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @3s float, @stl float,  @ast2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @stl, '    ', @player2, ': ', @ast2, '/', @3s2, '/', @stl2) "Assists/Threes/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @blk float, @stl float,  @ast2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @blk, '/', @stl, '    ', @player2, ': ', @ast2, '/', @blk2, '/', @stl2) "Assists/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_B_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @blk float, @reb float, @3s float,  @reb2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @blk, '    ', @player2, ': ', @reb2, '/', @3s2, '/', @blk2) "Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @stl float, @reb float, @3s float,  @reb2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @stl, '    ', @player2, ': ', @reb2, '/', @3s2, '/', @stl2) "Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @reb float, @blk float, @stl float,  @reb2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @blk, '/', @stl, '    ', @player2, ': ', @reb2, '/', @blk2, '/', @stl2) "Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2  and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @3s float, @blk float, @stl float,  @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @blk, '/', @stl, '    ', @player2, ': ', @3s2, '/', @blk2, '/', @stl2) "Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2  and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @3s float,  @pts2 float, @ast2 float, @reb2 float, @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2) "Points/Assists/Rebounds/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @blk float,  @pts2 float, @ast2 float, @reb2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @blk2) "Points/Assists/Rebounds/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @stl float,  @pts2 float, @ast2 float, @reb2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @stl2) "Points/Assists/Rebounds/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @3s float, @blk float,  @pts2 float, @ast2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @blk2) "Points/Assists/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @3s float, @stl float,  @pts2 float, @ast2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @stl2) "Points/Assists/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @blk float, @stl float,  @pts2 float, @ast2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @blk2, '/', @stl2) "Points/Assists/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @reb float, @3s float, @blk float,  @pts2 float, @reb2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @blk2) "Points/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_3_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @reb float, @3s float, @stl float,  @pts2 float, @reb2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @stl2) "Points/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_B_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @reb float, @blk float, @stl float,  @pts2 float, @reb2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @blk2, '/', @stl2) "Points/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_3_B_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @3s float, @blk float, @stl float,  @pts2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @3s2, '/', @blk2, '/', @stl2) "Points/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_R_3_B_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @reb float, @3s float, @blk float,  @ast2 float, @reb2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @blk,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @blk2) "Assists/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO  
CREATE PROCEDURE A_R_3_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @reb float, @3s float, @stl float,  @ast2 float, @reb2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @stl2) "Assists/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @reb float, @blk float, @stl float,  @ast2 float, @reb2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @blk, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @blk2, '/', @stl2) "Assists/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_3_B_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @3s float, @blk float, @stl float,  @ast2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @3s2, '/', @blk2, '/', @stl2) "Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE R_3_B_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @reb float, @3s float, @blk float, @stl float,  @reb2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @reb2, '/', @3s2, '/', @blk2, '/', @stl2) "Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float,  @pts2 float, @ast2 float, @reb2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @blk2) "Points/Assists/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @stl float,  @pts2 float, @ast2 float, @reb2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @stl2) "Points/Assists/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @blk float, @stl float,  @pts2 float, @ast2 float, @reb2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @blk2, '/', @stl2) "Points/Assists/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @3s float, @blk float, @stl float,  @pts2 float, @ast2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @blk2, '/', @stl2) "Points/Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @reb float, @3s float, @blk float, @stl float,  @pts2 float, @reb2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @blk2, '/', @stl2) "Points/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_B_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @reb float, @3s float, @blk float, @stl float,  @ast2 float, @reb2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @blk2, '/', @stl2) "Assists/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_S_2_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float, @stl float,  @pts2 float, @ast2 float, @reb2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @blk2) "Points/Assists/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO

-----------------------------------------------------------------------------------------
CREATE PROCEDURE P_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float,  @pts2 float
AS 
SELECT			
				CONCAT(@player, ': ', @pts, '    ', @player2, ': ', @pts2) Points,
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float,  @ast2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '    ', @player2, ': ', @ast2) Assists,
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @reb float,  @reb2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '    ', @player2, ': ', @reb2) Rebounds,
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @3s float,  @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '    ', @player2, ': ', @3s2) "3PM",
				SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE B_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @blk float,  @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @blk, '    ', @player2, ': ', @blk2) Blocks,
				SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.blk >= @blk  AND pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @stl float,  @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @stl, '    ', @player2, ': ', @stl2) Steals,
				SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @stl  AND pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float,  @pts2 float, @ast2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '    ', @player2, ': ', @pts2, '/', @ast2) "Points/Assists",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @reb float,  @pts2 float, @reb2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '    ', @player2, ': ', @pts2, '/', @reb2) "Points/Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2 and pgl.reb >= @reb and pg2.reb >= @reb2  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @3s float, @pts2 float, @3s2 float
AS 
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '    ', @player2, ': ', @pts2, '/', @3s2) "Points/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @blk float, @pts2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @blk, '    ', @player2, ': ', @pts2, '/', @blk2) "Points/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2 and pgl.blk >= @blk and pg2.blk >= @blk2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @stl float,  @pts2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @stl, '    ', @player2, ': ', @pts2, '/', @stl2) "Points/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @reb float,  @ast2 float, @reb2 float
AS 
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '    ', @player2, ': ', @ast2, '/', @reb2) "Assists/Rebounds",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @3s float,  @ast2 float, @3s2 float
AS 
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '    ', @player2, ': ', @ast2, '/', @3s2) "Assists/3PM",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @blk float,  @ast2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @blk, '    ', @player2, ': ', @ast2, '/', @blk2) "Assists/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @stl float,  @ast2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @stl, '    ', @player2, ': ', @ast2, '/', @stl2) "Assists/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @reb float, @3s float,  @reb2 float, @3s2 float
AS 
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '    ', @player2, ': ', @reb2, '/', @3s2) "Rebounds/3PM",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @reb float, @blk float,  @reb2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @blk, '    ', @player2, ': ', @reb2, '/', @blk2) "Rebounds/Blocks",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @reb float, @stl float,  @reb2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @stl, '    ', @player2, ': ', @reb2, '/', @stl2) "Rebounds/Steals",
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb  and pgl.stl >= @stl and pg2.stl >= @stl2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(COUNT(pgl.player_ID)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @3s float, @blk float,  @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @blk, '    ', @player2, ': ', @3s2, '/', @blk2) "Threes/Blocks",
				SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @3s float, @stl float,  @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @stl, '    ', @player2, ': ', @3s2, '/', @stl2) "Threes/Steals",
				SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE B_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @stl float, @blk float,  @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @blk, '/', @stl, '    ', @player2, ': ', @blk2, '/', @stl2) "Blocks/Steals",
				SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @blk and pg2.stl >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
--
CREATE PROCEDURE P_A_R_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float,  @pts2 float, @ast2 float, @reb2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2) "Points/Assists/Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @3s float,  @pts2 float, @ast2 float, @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2) "Points/Assists/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @blk float,  @pts2 float, @ast2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @blk2) "Points/Assists/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @stl float,  @pts2 float, @ast2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @stl2) "Points/Assists/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @reb float, @3s float,  @pts2 float, @reb2 float, @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2) "Points/Rebounds/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_B_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @reb float, @blk float,  @pts2 float, @reb2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @blk, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @blk2) "Points/Rebounds/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @reb float, @stl float,  @pts2 float, @reb2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @stl, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @stl2) "Points/Rebounds/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_B_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @blk float, @pts float, @3s float,  @pts2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @blk, '    ', @player2, ': ', @pts2, '/', @3s2, '/', @blk2) "Points/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @stl float, @pts float, @3s float,  @pts2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @stl, '    ', @player2, ': ', @pts2, '/', @3s2, '/', @stl2) "Points/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @blk float, @stl float,  @pts2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @blk, '/', @stl, '    ', @player2, ': ', @pts2, '/', @blk2, '/', @stl2) "Points/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @reb float, @3s float,  @ast2 float, @reb2 float, @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2) "Assists/Rebounds/Threes",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @reb float, @blk float,  @ast2 float, @reb2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @blk, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @blk2) "Assists/Rebounds/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @reb float, @stl float,  @ast2 float, @reb2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @stl, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @stl2) "Assists/Rebounds/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_B_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @3s float, @blk float,  @ast2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @blk, '    ', @player2, ': ', @ast2, '/', @3s2, '/', @blk2) "Assists/Threes/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @3s float, @stl float,  @ast2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @stl, '    ', @player2, ': ', @ast2, '/', @3s2, '/', @stl2) "Assists/Threes/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @blk float, @stl float,  @ast2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @blk, '/', @stl, '    ', @player2, ': ', @ast2, '/', @blk2, '/', @stl2) "Assists/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_B_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @blk float, @reb float, @3s float,  @reb2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @blk, '    ', @player2, ': ', @reb2, '/', @3s2, '/', @blk2) "Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @stl float, @reb float, @3s float,  @reb2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @stl, '    ', @player2, ': ', @reb2, '/', @3s2, '/', @stl2) "Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @reb float, @blk float, @stl float,  @reb2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @blk, '/', @stl, '    ', @player2, ': ', @reb2, '/', @blk2, '/', @stl2) "Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2  and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @3s float, @blk float, @stl float,  @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @blk, '/', @stl, '    ', @player2, ': ', @3s2, '/', @blk2, '/', @stl2) "Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2  and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  AND pg2.fg3m >= @3s2 and pgl.blk>= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @3s float,  @pts2 float, @ast2 float, @reb2 float, @3s2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2) "Points/Assists/Rebounds/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @blk float,  @pts2 float, @ast2 float, @reb2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @blk2) "Points/Assists/Rebounds/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @stl float,  @pts2 float, @ast2 float, @reb2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @stl2) "Points/Assists/Rebounds/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @3s float, @blk float,  @pts2 float, @ast2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @blk2) "Points/Assists/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @3s float, @stl float,  @pts2 float, @ast2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @stl2) "Points/Assists/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @blk float, @stl float,  @pts2 float, @ast2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @blk2, '/', @stl2) "Points/Assists/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @reb float, @3s float, @blk float,  @pts2 float, @reb2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @blk2) "Points/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_3_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @reb float, @3s float, @stl float,  @pts2 float, @reb2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @stl2) "Points/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_B_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @reb float, @blk float, @stl float,  @pts2 float, @reb2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @blk2, '/', @stl2) "Points/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_3_B_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @3s float, @blk float, @stl float,  @pts2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @3s2, '/', @blk2, '/', @stl2) "Points/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_R_3_B_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @reb float, @3s float, @blk float,  @ast2 float, @reb2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @blk,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @blk2) "Assists/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO  
CREATE PROCEDURE A_R_3_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @reb float, @3s float, @stl float,  @ast2 float, @reb2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @stl2) "Assists/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @reb float, @blk float, @stl float,  @ast2 float, @reb2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @blk, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @blk2, '/', @stl2) "Assists/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_3_B_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @3s float, @blk float, @stl float,  @ast2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @3s2, '/', @blk2, '/', @stl2) "Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE R_3_B_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @reb float, @3s float, @blk float, @stl float,  @reb2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @reb2, '/', @3s2, '/', @blk2, '/', @stl2) "Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  AND pg2.reb >= @reb2 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float,  @pts2 float, @ast2 float, @reb2 float, @3s2 float, @blk2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @blk2) "Points/Assists/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @stl float,  @pts2 float, @ast2 float, @reb2 float, @3s2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @stl2) "Points/Assists/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @blk float, @stl float,  @pts2 float, @ast2 float, @reb2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @blk2, '/', @stl2) "Points/Assists/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @3s float, @blk float, @stl float,  @pts2 float, @ast2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @blk2, '/', @stl2) "Points/Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),@pts float, @reb float, @3s float, @blk float, @stl float,  @pts2 float, @reb2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @blk2, '/', @stl2) "Points/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_B_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @ast float, @reb float, @3s float, @blk float, @stl float,  @ast2 float, @reb2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @blk2, '/', @stl2) "Assists/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2  and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  AND pg2.ast >= @ast2 and pgl.reb>= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2	and pgl.stl >= @stl and pg2.stl >= @stl2	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_S_2_W_I @player varchar(50), @player2 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float, @stl float,  @pts2 float, @ast2 float, @reb2 float, @3s2 float, @blk2 float, @stl2 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @blk2) "Points/Assists/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts and pg2.pts >= @pts2  and pgl.ast >= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id 


WHERE		gp.GP > 0 AND gp2.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 and pgl.ast>= @ast and pg2.ast >= @ast2 and pgl.reb >= @reb and pg2.reb >= @reb2	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2	and pgl.blk >= @blk and pg2.blk >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO



CREATE PROCEDURE P_I @player varchar(50),  @injured varchar(50),  @pts float
AS 
SELECT			
				 @pts Points,
				SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(COUNT(pgl.player_ID)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_I @player varchar(50),  @injured varchar(50),  @ast float 
AS
SELECT			
				 @ast Assists,
				SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_I @player varchar(50),  @injured varchar(50),  @reb float
AS
SELECT			
				 @reb Rebounds,
				SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_I @player varchar(50),  @injured varchar(50),  @3s float
AS
SELECT			
				 @3s"Threes Made",
				SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE B_I @player varchar(50),  @injured varchar(50),  @blk float
AS
SELECT			
				 @blk Blocks,
				SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE S_I @player varchar(50),  @injured varchar(50),  @stl float  
AS
SELECT			
				 @stl Steals,
				SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float   
AS
SELECT			
				 @pts Points,  @ast "Assists",
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO

CREATE PROCEDURE P_R_I @player varchar(50),  @injured varchar(50),  @pts float, @reb float
AS
SELECT			
				 @pts Points,  @reb "Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts  and pgl.reb >= @reb   
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_I @player varchar(50),  @injured varchar(50),  @pts float, @3s float
AS 
SELECT			
				 @pts Points,  @3s "Threes Made",
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.fg3m >= @3s 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_I @player varchar(50),  @injured varchar(50),  @pts float, @blk float
AS
SELECT			
				 @pts Points,  @blk Blocks, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts  and pgl.blk >= @blk  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_S_I @player varchar(50),  @injured varchar(50),  @pts float, @stl float   
AS
SELECT			
				 @pts Points,  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts  and pgl.stl >= @stl  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_I @player varchar(50),  @injured varchar(50),  @ast float, @reb float
AS 
SELECT			
				 @ast Assists,  @reb "Rebounds",
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast  and pgl.reb >= @reb  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_I @player varchar(50),  @injured varchar(50),  @ast float, @3s float 
AS 
SELECT			
				 @ast Assists,  @3s"Threes Made",
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast  and pgl.fg3m >= @3s  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_I @player varchar(50),  @injured varchar(50),  @ast float, @blk float
AS
SELECT			
				 @ast Assists,  @blk Blocks, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast  and pgl.blk >= @blk  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_S_I @player varchar(50),  @injured varchar(50),  @ast float, @stl float   
AS
SELECT			
				 @ast Assists,  @stl Steals, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_I @player varchar(50),  @injured varchar(50),  @reb float, @3s float 
AS 
SELECT			
				 @reb Rebounds,  @3s"Threes Made",
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb  and pgl.fg3m >= @3s  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_I @player varchar(50),  @injured varchar(50),  @reb float, @blk float
AS
SELECT			
				 @reb Rebounds,  @blk Blocks, 
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb  and pgl.blk >= @blk  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_S_I @player varchar(50),  @injured varchar(50),  @reb float, @stl float   
AS
SELECT			
				 @reb Rebounds,  @stl Steals, 
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb  and pgl.stl >= @stl  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_I @player varchar(50),  @injured varchar(50),  @3s float, @blk float
AS
SELECT			
				 @3s "Threes Made",  @blk Blocks, 
				SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s  and pgl.blk >= @blk  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_S_I @player varchar(50),  @injured varchar(50),  @3s float, @stl float  
AS
SELECT			
				 @3s "Threes Made",  @stl Steals, 
				SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s  and pgl.stl >= @stl  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO

CREATE PROCEDURE B_S_I @player varchar(50),  @injured varchar(50),  @stl float, @blk float
AS
SELECT			
				 @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk  and pgl.stl >= @stl  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
--drop PROCEDURE P_A_R
CREATE PROCEDURE P_A_R_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @reb float 
AS
SELECT			
				 @pts Points,  @ast Assists,  @reb "Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.reb >= @reb 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @3s float
AS
SELECT			
				 @pts Points,  @ast Assists,  @3s "Threes Made",
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.fg3m >= @3s 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @blk float 
AS
SELECT			
				 @pts Points,  @ast Assists,  @blk Blocks, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_S_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @stl float    
AS
SELECT			
				 @pts Points,  @ast Assists,  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_I @player varchar(50),  @injured varchar(50),  @pts float, @reb float, @3s float
AS
SELECT			
				 @pts Points,  @reb Rebounds,  @3s "Threes Made",
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.reb >= @reb  and pgl.fg3m >= @3s 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_B_I @player varchar(50),  @injured varchar(50),  @pts float, @reb float, @blk float 
AS
SELECT			
				 @pts Points,  @reb Rebounds,  @blk Blocks, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.reb >= @reb  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_S_I @player varchar(50),  @injured varchar(50),  @pts float, @reb float, @stl float    
AS
SELECT			
				 @pts Points,  @reb Rebounds,  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.reb >= @reb  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_B_I @player varchar(50),  @injured varchar(50),  @blk float, @pts float, @3s float 
AS
SELECT			
				 @pts Points,  @3s "Threes Made",  @blk Blocks, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.fg3m >= @3s  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_S_I @player varchar(50),  @injured varchar(50),  @stl float, @pts float, @3s float 
AS
SELECT			
				 @pts Points,  @3s "Threes Made",  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.fg3m >= @3s  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_S_I @player varchar(50),  @injured varchar(50),  @pts float, @blk float, @stl float    
AS
SELECT			
				 @pts Points,  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_I @player varchar(50),  @injured varchar(50),  @ast float, @reb float, @3s float
AS
SELECT			
				 @ast Assists,  @reb Rebounds,  @3s "Threes Made",
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.reb >= @reb  and pgl.fg3m >= @3s 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_I @player varchar(50),  @injured varchar(50),  @ast float, @reb float, @blk float 
AS
SELECT			
				 @ast Assists,  @reb Rebounds,  @blk Blocks, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.reb >= @reb  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_S_I @player varchar(50),  @injured varchar(50),  @ast float, @reb float, @stl float    
AS
SELECT			
				 @ast Assists,  @reb Rebounds,  @stl Steals, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.reb >= @reb  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_B_I @player varchar(50),  @injured varchar(50),  @ast float, @3s float, @blk float
AS
SELECT			
				 @ast Assists,  @3s "Threes Made",  @blk Blocks, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.fg3m >= @3s  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_S_I @player varchar(50),  @injured varchar(50),  @ast float, @3s float, @stl float   
AS
SELECT			
				 @ast Assists,  @3s "Threes Made",  @stl Steals, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.fg3m >= @3s  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_S_I @player varchar(50),  @injured varchar(50),  @ast float, @blk float, @stl float    
AS
SELECT			
				 @ast Assists,  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_B_I @player varchar(50),  @injured varchar(50),  @blk float, @reb float, @3s float 
AS
SELECT			
				 @reb Rebounds,  @3s "Threes Made",  @blk Blocks, 
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb   and pgl.fg3m >= @3s  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_S_I @player varchar(50),  @injured varchar(50),  @stl float, @reb float, @3s float 
AS
SELECT			
				 @reb Rebounds,  @3s "Threes Made",  @stl Steals, 
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb   and pgl.fg3m >= @3s  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_S_I @player varchar(50),  @injured varchar(50),  @reb float, @blk float, @stl float    
AS
SELECT			
				 @reb Rebounds,  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb   and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_S_I @player varchar(50),  @injured varchar(50),  @3s float, @blk float, @stl float   
AS
SELECT			
				 @3s "Threes Made",  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s   and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @reb float, @3s float 
AS
SELECT			
				 @pts Points,  @ast Assists,  @reb Rebounds,  @3s "Threes Made",
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.reb >= @reb  and pgl.fg3m >= @3s 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @reb float, @blk float  
AS
SELECT			
				 @pts Points,  @ast Assists,  @reb Rebounds,  @blk Blocks, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.reb >= @reb  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_S_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @reb float, @stl float     
AS
SELECT			
				 @pts Points,  @ast Assists,  @reb Rebounds,  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.reb >= @reb  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @3s float, @blk float 
AS
SELECT			
				 @pts Points,  @ast Assists,  @3s "Threes Made",  @blk Blocks, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.fg3m >= @3s  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_S_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @3s float, @stl float    
AS
SELECT			
				 @pts Points,  @ast Assists,  @3s "Threes Made",  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.fg3m >= @3s  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_S_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @blk float, @stl float     
AS
SELECT			
				 @pts Points,  @ast Assists,  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_I @player varchar(50),  @injured varchar(50),  @pts float, @reb float, @3s float, @blk float 
AS
SELECT			
				 @pts Points,  @reb Rebounds,  @3s "Threes Made",  @blk Blocks, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_3_S_I @player varchar(50),  @injured varchar(50),  @pts float, @reb float, @3s float, @stl float    
AS
SELECT			
				 @pts Points,  @reb Rebounds,  @3s "Threes Made",  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_B_S_I @player varchar(50),  @injured varchar(50),  @pts float, @reb float, @blk float, @stl float     
AS
SELECT			
				 @pts Points,  @reb Rebounds,  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.reb >= @reb  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_3_B_S_I @player varchar(50),  @injured varchar(50),  @pts float, @3s float, @blk float, @stl float    
AS
SELECT			
				 @pts Points,  @3s "Threes Made",  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.fg3m >= @3s  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_R_3_B_I @player varchar(50),  @injured varchar(50),  @ast float, @reb float, @3s float, @blk float 
AS
SELECT			
				 @ast Assists,  @reb Rebounds,  @3s "Threes Made",  @blk Blocks, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO  
CREATE PROCEDURE A_R_3_S_I @player varchar(50),  @injured varchar(50),  @ast float, @reb float, @3s float, @stl float    
AS
SELECT			
				 @ast Assists,  @reb Rebounds,  @3s "Threes Made",  @stl Steals, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_S_I @player varchar(50),  @injured varchar(50),  @ast float, @reb float, @blk float, @stl float     
AS
SELECT			
				 @ast Assists,  @reb Rebounds,  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.reb >= @reb  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_3_B_S_I @player varchar(50),  @injured varchar(50),  @ast float, @3s float, @blk float, @stl float    
AS
SELECT			
				 @ast Assists,  @3s "Threes Made",  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.fg3m >= @3s  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE R_3_B_S_I @player varchar(50),  @injured varchar(50),  @reb float, @3s float, @blk float, @stl float    
AS
SELECT			
				 @reb Rebounds,  @3s "Threes Made",  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb   and pgl.fg3m >= @3s  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float  
AS
SELECT			
				 @pts Points,  @ast Assists,  @reb Rebounds,  @3s "Threes Made",   @blk Blocks, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_S_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @stl float     
AS
SELECT			
				 @pts Points,  @ast Assists,  @reb Rebounds,  @3s "Threes Made",   @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_S_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @reb float, @blk float, @stl float      
AS
SELECT			
				 @pts Points,  @ast Assists,  @reb Rebounds,  @blk Blocks,   @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.reb >= @reb  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_S_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @3s float, @blk float, @stl float     
AS
SELECT			
				 @pts Points,  @ast Assists,  @3s "Threes Made",  @blk Blocks,   @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.fg3m >= @3s  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_S_I @player varchar(50),  @injured varchar(50),  @pts float, @reb float, @3s float, @blk float, @stl float     
AS
SELECT			
				 @pts Points,  @reb Rebounds,  @3s "Threes Made",  @blk Blocks,   @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_B_S_I @player varchar(50),  @injured varchar(50),  @ast float, @reb float, @3s float, @blk float, @stl float     
AS
SELECT			
				 @ast Assists,  @reb Rebounds,  @3s "Threes Made",  @blk Blocks,   @stl Steals, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_S_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float, @stl float      
AS
SELECT			
				 @pts Points,  @ast Assists,  @reb Rebounds,  @3s "Threes Made",   @blk  Blocks, @stl  Steals,
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.blk >= @blk  and pgl.stl >= @stl  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO

-----------------------------------------------------------------------------------------
CREATE PROCEDURE P_W_I @player varchar(50),  @injured varchar(50),  @pts float
AS 
SELECT			
				 @pts Points,
				SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_W_I @player varchar(50),  @injured varchar(50),  @ast float  
AS
SELECT			
				 @ast Assists,
				SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_W_I @player varchar(50),  @injured varchar(50),  @reb float
AS
SELECT			
				 @reb Rebounds,
				SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_W_I @player varchar(50),  @injured varchar(50),  @3s float
AS
SELECT			
				 @3s"Threes Made",
				SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE B_W_I @player varchar(50),  @injured varchar(50),  @blk float
AS
SELECT			
				 @blk Blocks,
				SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.blk >= @blk   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE S_W_I @player varchar(50),  @injured varchar(50),  @stl float  
AS
SELECT			
				 @stl Steals,
				SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @stl   and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_W_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float   
AS
SELECT			
				 @pts Points,  @ast "Assists",
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_W_I @player varchar(50),  @injured varchar(50),  @pts float, @reb float
AS
SELECT			
				 @pts Points,  @reb "Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts  and pgl.reb >= @reb   
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_W_I @player varchar(50),  @injured varchar(50),  @pts float, @3s float
AS 
SELECT			
				 @pts Points,  @3s "Threes Made",
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.fg3m >= @3s 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_W_I @player varchar(50),  @injured varchar(50),  @pts float, @blk float
AS
SELECT			
				 @pts Points,  @blk Blocks, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts  and pgl.blk >= @blk  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_S_W_I @player varchar(50),  @injured varchar(50),  @pts float, @stl float   
AS
SELECT			
				 @pts Points,  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts  and pgl.stl >= @stl  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_W_I @player varchar(50),  @injured varchar(50),  @ast float, @reb float
AS 
SELECT			
				 @ast Assists,  @reb "Rebounds",
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast  and pgl.reb >= @reb  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_W_I @player varchar(50),  @injured varchar(50),  @ast float, @3s float 
AS 
SELECT			
				 @ast Assists,  @3s"Threes Made",
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast  and pgl.fg3m >= @3s  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_W_I @player varchar(50),  @injured varchar(50),  @ast float, @blk float
AS
SELECT			
				 @ast Assists,  @blk Blocks, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast  and pgl.blk >= @blk  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_S_W_I @player varchar(50),  @injured varchar(50),  @ast float, @stl float   
AS
SELECT			
				 @ast Assists,  @stl Steals, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_W_I @player varchar(50),  @injured varchar(50),  @reb float, @3s float 
AS 
SELECT			
				 @reb Rebounds,  @3s "Threes Made",
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb  and pgl.fg3m >= @3s  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_W_I @player varchar(50),  @injured varchar(50),  @reb float, @blk float
AS
SELECT			
				 @reb Rebounds,  @blk Blocks, 
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb  and pgl.blk >= @blk  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_S_W_I @player varchar(50),  @injured varchar(50),  @reb float, @stl float   
AS
SELECT			
				 @reb Rebounds,  @stl Steals, 
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb  and pgl.stl >= @stl  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(COUNT(pgl.player_ID)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_W_I @player varchar(50),  @injured varchar(50),  @3s float, @blk float
AS
SELECT			
				 @3s "Threes Made",  @blk Blocks, 
				SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s  and pgl.blk >= @blk  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_S_W_I @player varchar(50),  @injured varchar(50),  @3s float, @stl float  
AS
SELECT			
				 @3s "Threes Made",  @stl Steals, 
				SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s  and pgl.stl >= @stl  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE B_S_W_I @player varchar(50),  @injured varchar(50),  @stl float, @blk float
AS
SELECT			
				 @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk  and pgl.stl >= @stl  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.blk >= @blk   and pgl.stl>= @stl  and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
--
CREATE PROCEDURE P_A_R_W_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @reb float 
AS
SELECT			
				 @pts Points,  @ast Assists,  @reb "Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.reb >= @reb 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_W_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @3s float
AS
SELECT			
				 @pts Points,  @ast Assists,  @3s "Threes Made",
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.fg3m >= @3s 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_W_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @blk float 
AS
SELECT			
				 @pts Points,  @ast Assists,  @blk Blocks, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_S_W_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @stl float    
AS
SELECT			
				 @pts Points,  @ast Assists,  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_W_I @player varchar(50),  @injured varchar(50),  @pts float, @reb float, @3s float
AS
SELECT			
				 @pts Points,  @reb Rebounds,  @3s "Threes Made",
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.reb >= @reb  and pgl.fg3m >= @3s 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_B_W_I @player varchar(50),  @injured varchar(50),  @pts float, @reb float, @blk float 
AS
SELECT			
				 @pts Points,  @reb Rebounds,  @blk Blocks, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.reb >= @reb  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_S_W_I @player varchar(50),  @injured varchar(50),  @pts float, @reb float, @stl float    
AS
SELECT			
				 @pts Points,  @reb Rebounds,  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.reb >= @reb  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_B_W_I @player varchar(50),  @injured varchar(50),  @blk float, @pts float, @3s float 
AS
SELECT			
				 @pts Points,  @3s "Threes Made",  @blk Blocks, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.fg3m >= @3s  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_S_W_I @player varchar(50),  @injured varchar(50),  @stl float, @pts float, @3s float 
AS
SELECT			
				 @pts Points,  @3s "Threes Made",  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.fg3m >= @3s  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_S_W_I @player varchar(50),  @injured varchar(50),  @pts float, @blk float, @stl float    
AS
SELECT			
				 @pts Points,  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_W_I @player varchar(50),  @injured varchar(50),  @ast float, @reb float, @3s float
AS
SELECT			
				 @ast Assists,  @reb Rebounds,  @3s "Threes Made",
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.reb >= @reb  and pgl.fg3m >= @3s 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_W_I @player varchar(50),  @injured varchar(50),  @ast float, @reb float, @blk float 
AS
SELECT			
				 @ast Assists,  @reb Rebounds,  @blk Blocks, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.reb >= @reb  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_S_W_I @player varchar(50),  @injured varchar(50),  @ast float, @reb float, @stl float    
AS
SELECT			
				 @ast Assists,  @reb Rebounds,  @stl Steals, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.reb >= @reb  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_B_W_I @player varchar(50),  @injured varchar(50),  @ast float, @3s float, @blk float
AS
SELECT			
				 @ast Assists,  @3s "Threes Made",  @blk Blocks, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.fg3m >= @3s  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_S_W_I @player varchar(50),  @injured varchar(50),  @ast float, @3s float, @stl float   
AS
SELECT			
				 @ast Assists,  @3s "Threes Made",  @stl Steals, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.fg3m >= @3s  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_S_W_I @player varchar(50),  @injured varchar(50),  @ast float, @blk float, @stl float    
AS
SELECT			
				 @ast Assists,  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_B_W_I @player varchar(50),  @injured varchar(50),  @blk float, @reb float, @3s float   
AS
SELECT			
				 @reb Rebounds,  @3s "Threes Made",  @blk Blocks, 
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb   and pgl.fg3m >= @3s  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_S_W_I @player varchar(50),  @injured varchar(50),  @stl float, @reb float, @3s float 
AS
SELECT			
				 @reb Rebounds,  @3s "Threes Made",  @stl Steals, 
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb   and pgl.fg3m >= @3s  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_S_W_I @player varchar(50),  @injured varchar(50),  @reb float, @blk float, @stl float    
AS
SELECT			
				 @reb Rebounds,  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb   and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_S_W_I @player varchar(50),  @injured varchar(50),  @3s float, @blk float, @stl float   
AS
SELECT			
				 @3s "Threes Made",  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s   and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s   and pgl.blk>= @blk  and pgl.stl >= @stl 			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_W_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @reb float, @3s float    
AS
SELECT			
				 @pts Points,  @ast Assists,  @reb Rebounds,  @3s "Threes Made",
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.reb >= @reb  and pgl.fg3m >= @3s 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_W_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @reb float, @blk float   
AS
SELECT			
				 @pts Points,  @ast Assists,  @reb Rebounds,  @blk Blocks, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.reb >= @reb  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_S_W_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @reb float, @stl float     
AS
SELECT			
				 @pts Points,  @ast Assists,  @reb Rebounds,  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.reb >= @reb  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_W_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @3s float, @blk float    
AS
SELECT			
				 @pts Points,  @ast Assists,  @3s "Threes Made",  @blk Blocks, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.fg3m >= @3s  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_S_W_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @3s float, @stl float    
AS
SELECT			
				 @pts Points,  @ast Assists,  @3s "Threes Made",  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.fg3m >= @3s  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_S_W_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @blk float, @stl float     
AS
SELECT			
				 @pts Points,  @ast Assists,  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_W_I @player varchar(50),  @injured varchar(50),  @pts float, @reb float, @3s float, @blk float    
AS
SELECT			
				 @pts Points,  @reb Rebounds,  @3s "Threes Made",  @blk Blocks,
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_3_S_W_I @player varchar(50),  @injured varchar(50),  @pts float, @reb float, @3s float, @stl float    
AS
SELECT			
				 @pts Points,  @reb Rebounds,  @3s "Threes Made",  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_B_S_W_I @player varchar(50),  @injured varchar(50),  @pts float, @reb float, @blk float, @stl float     
AS
SELECT			
				 @pts Points,  @reb Rebounds,  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.reb >= @reb  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_3_B_S_W_I @player varchar(50),  @injured varchar(50),  @pts float, @3s float, @blk float, @stl float    
AS
SELECT			
				 @pts Points,  @3s "Threes Made",  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.fg3m >= @3s  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_R_3_B_W_I @player varchar(50),  @injured varchar(50),  @ast float, @reb float, @3s float, @blk float    
AS
SELECT			
				 @ast Assists,  @reb Rebounds,  @3s "Threes Made",  @blk Blocks, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO  
CREATE PROCEDURE A_R_3_S_W_I @player varchar(50),  @injured varchar(50),  @ast float, @reb float, @3s float, @stl float    
AS
SELECT			
				 @ast Assists,  @reb Rebounds,  @3s "Threes Made",  @stl Steals, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_S_W_I @player varchar(50),  @injured varchar(50),  @ast float, @reb float, @blk float, @stl float     
AS
SELECT			
				 @ast Assists,  @reb Rebounds,  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.reb >= @reb  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_3_B_S_W_I @player varchar(50),  @injured varchar(50),  @ast float, @3s float, @blk float, @stl float    
AS
SELECT			
				 @ast Assists,  @3s "Threes Made",  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.fg3m >= @3s  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE R_3_B_S_W_I @player varchar(50),  @injured varchar(50),  @reb float, @3s float, @blk float, @stl float    
AS
SELECT			
				 @reb Rebounds,  @3s "Threes Made",  @blk Blocks,  @stl Steals, 
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb   and pgl.fg3m >= @3s  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.fg3m>= @3s  and pgl.blk >= @blk 	and pgl.stl >= @stl 		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_W_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float    
AS
SELECT			
				 @pts Points,  @ast Assists,  @reb Rebounds,  @3s "Threes Made",   @blk Blocks, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.blk >= @blk 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_S_W_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @stl float     
AS
SELECT			
				 @pts Points,  @ast Assists,  @reb Rebounds,  @3s "Threes Made",   @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_S_W_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @reb float, @blk float, @stl float      
AS
SELECT			
				 @pts Points,  @ast Assists,  @reb Rebounds,  @blk Blocks,   @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.reb >= @reb  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_S_W_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @3s float, @blk float, @stl float     
AS
SELECT			
				 @pts Points,  @ast Assists,  @3s "Threes Made",  @blk Blocks,   @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.fg3m >= @3s  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_S_W_I @player varchar(50),  @injured varchar(50),@pts float, @reb float, @3s float, @blk float, @stl float  
AS
SELECT			
				 @pts Points,  @reb Rebounds,  @3s "Threes Made",  @blk Blocks,   @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_B_S_W_I @player varchar(50),  @injured varchar(50),  @ast float, @reb float, @3s float, @blk float, @stl float     
AS
SELECT			
				 @ast Assists,  @reb Rebounds,  @3s "Threes Made",  @blk Blocks,   @stl Steals, 
				SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast   and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.blk >= @blk  and pgl.stl >= @stl 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast   and pgl.reb>= @reb  and pgl.fg3m >= @3s 	and pgl.blk >= @blk 	and pgl.stl >= @stl 	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_S_W_I @player varchar(50),  @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float, @stl float   
AS
SELECT			
				 @pts Points,  @ast Assists,  @reb Rebounds,  @3s "Threes Made",   @blk Blocks, @stl Steals, 
				SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts   and pgl.ast >= @ast  and pgl.reb >= @reb  and pgl.fg3m >= @3s  and pgl.blk >= @blk  and pgl.stl >= @stl  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl  JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id  INNER JOIN
						gp on gp.player_id = pgl.player_id 


WHERE		gp.GP > 0  AND pgl.wl='W'  AND			 
			playerAverage.Player = @player 

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts   and pgl.ast>= @ast  and pgl.reb >= @reb 	and pgl.fg3m >= @3s 	and pgl.blk >= @blk  and pgl.stl >= @stl   	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO







--execute P_3P	@player  ='CJ McCollum', 
--				@player2 ='Zion Williamson',
--				@player3 ='Brandon Ingram',  
--				@pts =2,  
--				@pts2 =3, 
--				@pts3 =1

CREATE PROCEDURE P_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float,  @pts2 float, @pts3 float
AS 
SELECT			
				CONCAT(@player, ': ', @pts, '    ', @player2, ': ', @pts2, '    ', @player3, ': ', @pts3) Points,
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(COUNT(pgl.player_ID)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float,  @ast2 float, @ast3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '    ', @player2, ': ', @ast2, '    ', @player3, ': ', @ast3) Assists,
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @reb float,  @reb2 float, @reb3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '    ', @player2, ': ', @reb2, '    ', @player3, ': ', @reb3) Rebounds,
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @3s float,  @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '    ', @player2, ': ', @3s2, '    ', @player3, ': ', @3s3) "3PM",
				SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE B_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @blk float,  @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @blk, '    ', @player2, ': ', @blk2, '    ', @player3, ': ', @blk3) Blocks,
				SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @stl float,  @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @stl, '    ', @player2, ': ', @stl2, '    ', @player3, ': ', @stl3) Steals,
				SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '    ', @player2, ': ', @pts2, '/', @ast2, '    ', @player3, ': ', @pts3, '/', @ast3) "Points/Assists",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO

CREATE PROCEDURE P_R_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @reb float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '    ', @player2, ': ', @pts2, '/', @reb2, '    ', @player3, ': ', @pts3, '/', @reb3) "Points/Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @3s float, @pts2 float, @pts3 float, @3s2 float, @3s3 float
AS 
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '    ', @player2, ': ', @pts2, '/', @3s2, '    ', @player3, ': ', @pts3, '/', @3s3) "Points/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @blk float, @pts2 float, @pts3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @blk, '    ', @player2, ': ', @pts2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @blk3) "Points/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @stl float,  @pts2 float, @pts3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @stl, '    ', @player2, ': ', @pts2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @stl3) "Points/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @reb float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float
AS 
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '    ', @player2, ': ', @ast2, '/', @reb2, '    ', @player3, ': ', @ast3, '/', @reb3) "Assists/Rebounds",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @3s float,  @ast2 float, @ast3 float,  @3s2 float, @3s3 float
AS 
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '    ', @player2, ': ', @ast2, '/', @3s2, '    ', @player3, ': ', @ast3, '/', @3s3) "Assists/3PM",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @blk float,  @ast2 float, @ast3 float,  @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @blk, '    ', @player2, ': ', @ast2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @blk3) "Assists/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @stl float,  @ast2 float, @ast3 float,  @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @stl, '    ', @player2, ': ', @ast2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @stl3) "Assists/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @reb float, @3s float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float
AS 
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '    ', @player2, ': ', @reb2, '/', @3s2, '    ', @player3, ': ', @reb3, '/', @3s3) "Rebounds/3PM",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @reb float, @blk float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @blk, '    ', @player2, ': ', @reb2, '/', @blk2, '    ', @player3, ': ', @reb3, '/', @blk3) "Rebounds/Blocks",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @reb float, @stl float,  @reb2 float, @reb3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @stl, '    ', @player2, ': ', @reb2, '/', @stl2, '    ', @player3, ': ', @reb3, '/', @stl3) "Rebounds/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @3s float, @blk float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @blk, '    ', @player2, ': ', @3s2, '/', @blk2, '    ', @player3, ': ', @3s3, '/', @blk3) "Threes/Blocks",
				SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @3s float, @stl float,  @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @stl, '    ', @player2, ': ', @3s2, '/', @stl2, '    ', @player3, ': ', @3s3, '/', @stl3) "Threes/Steals",
				SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO

CREATE PROCEDURE B_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @stl float, @blk float,  @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @blk, '/', @stl, '    ', @player2, ': ', @blk2, '/', @stl2, '    ', @player3, ': ', @blk3, '/', @stl3) "Blocks/Steals",
				SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @blk and pg2.stl >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
--drop PROCEDURE P_A_R_3
CREATE PROCEDURE P_A_R_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @reb float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3) "Points/Assists/Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @3s float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @3s3) "Points/Assists/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @blk float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @blk3) "Points/Assists/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @stl3) "Points/Assists/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @reb float, @3s float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @3s3) "Points/Rebounds/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_B_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @reb float, @blk float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @blk, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @blk3) "Points/Rebounds/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @reb float, @stl float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @stl, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @stl3) "Points/Rebounds/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_B_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @blk float, @pts float, @3s float,  @pts2 float, @pts3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @blk, '    ', @player2, ': ', @pts2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @3s3, '/', @blk3) "Points/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @stl float, @pts float, @3s float,  @pts2 float, @pts3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @stl, '    ', @player2, ': ', @pts2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @3s3, '/', @stl3) "Points/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @blk float, @stl float,  @pts2 float, @pts3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @blk, '/', @stl, '    ', @player2, ': ', @pts2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @blk3, '/', @stl3) "Points/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @reb float, @3s float,  @ast2 float, @ast3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2,  '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3) "Assists/Rebounds/Threes",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @reb float, @blk float,  @ast2 float, @ast3 float, @reb2 float, @reb3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @blk, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @blk3) "Assists/Rebounds/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @reb float, @stl float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @stl, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @stl3) "Assists/Rebounds/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_B_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @3s float, @blk float,  @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @blk, '    ', @player2, ': ', @ast2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @3s3, '/', @blk3) "Assists/Threes/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @3s float, @stl float,  @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @stl, '    ', @player2, ': ', @ast2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @3s3, '/', @stl3) "Assists/Threes/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @blk float, @stl float,  @ast2 float, @ast3 float,  @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @blk, '/', @stl, '    ', @player2, ': ', @ast2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @blk3, '/', @stl3) "Assists/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_B_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @blk float, @reb float, @3s float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @blk, '    ', @player2, ': ', @reb2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @reb3, '/', @3s3, '/', @blk3) "Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @stl float, @reb float, @3s float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @stl, '    ', @player2, ': ', @reb2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @reb3, '/', @3s3, '/', @stl3) "Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @reb float, @blk float, @stl float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @blk, '/', @stl, '    ', @player2, ': ', @reb2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @reb3, '/', @blk3, '/', @stl3) "Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @3s float, @blk float, @stl float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @blk, '/', @stl, '    ', @player2, ': ', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @3s3, '/', @blk3, '/', @stl3) "Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3  and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @reb float, @3s float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2,  '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @3s3) "Points/Assists/Rebounds/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @reb float, @blk float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @blk3) "Points/Assists/Rebounds/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @reb float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @stl3) "Points/Assists/Rebounds/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @3s float, @blk float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @3s3, '/', @blk3) "Points/Assists/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @3s float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @3s3, '/', @stl3) "Points/Assists/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @blk float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @blk3, '/', @stl3) "Points/Assists/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @reb float, @3s float, @blk float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @3s3, '/', @blk3) "Points/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_3_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @reb float, @3s float, @stl float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @3s3, '/', @stl3) "Points/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_B_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @reb float, @blk float, @stl float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @blk3, '/', @stl3) "Points/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_3_B_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @3s float, @blk float, @stl float,  @pts2 float, @pts3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @3s3, '/', @blk3, '/', @stl3) "Points/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_R_3_B_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @reb float, @3s float, @blk float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @blk,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3, '/', @blk3) "Assists/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO  
CREATE PROCEDURE A_R_3_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @reb float, @3s float, @stl float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @stl2,  '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3, '/', @stl3) "Assists/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @reb float, @blk float, @stl float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @blk, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @blk3, '/', @stl3) "Assists/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_3_B_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @3s float, @blk float, @stl float,  @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @3s3, '/', @blk3, '/', @stl3) "Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE R_3_B_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @reb float, @3s float, @blk float, @stl float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @reb2, '/', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @reb3, '/', @3s3, '/', @blk3, '/', @stl3) "Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @blk2,  '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @3s3, '/', @blk3) "Points/Assists/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @reb float, @3s float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @3s3, '/', @stl3) "Points/Assists/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @reb float, @blk float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @blk3, '/', @stl3) "Points/Assists/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @3s float, @blk float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @3s3, '/', @blk3, '/', @stl3) "Points/Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @reb float, @3s float, @blk float, @stl float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @blk2, '/', @stl2,  '    ', @player3, ': ', @pts3, '/', @reb3, '/', @3s3, '/', @blk3, '/', @stl3) "Points/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_B_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @reb float, @3s float, @blk float, @stl float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3, '/', @blk3, '/', @stl2,  '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3, '/', @blk3, '/', @stl3) "Assists/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_S_3P @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @blk, '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @blk2,'/', @stl2,  '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @3s3, '/', @blk3, '/', @stl3) "Points/Assists/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO

------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE P_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float,  @pts2 float, @pts3 float
AS 
SELECT			
				CONCAT(@player, ': ', @pts, '    ', @player2, ': ', @pts2, '    ', @player3, ': ', @pts3) Points,
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float,  @ast2 float, @ast3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '    ', @player2, ': ', @ast2, '    ', @player3, ': ', @ast3) Assists,
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @reb float,  @reb2 float, @reb3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '    ', @player2, ': ', @reb2, '    ', @player3, ': ', @reb3) Rebounds,
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @3s float,  @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '    ', @player2, ': ', @3s2, '    ', @player3, ': ', @3s3) "3PM",
				SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE B_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @blk float,  @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @blk, '    ', @player2, ': ', @blk2, '    ', @player3, ': ', @blk3) Blocks,
				SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @stl float,  @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @stl, '    ', @player2, ': ', @stl2, '    ', @player3, ': ', @stl3) Steals,
				SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '    ', @player2, ': ', @pts2, '/', @ast2, '    ', @player3, ': ', @pts3, '/', @ast3) "Points/Assists",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @reb float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '    ', @player2, ': ', @pts2, '/', @reb2, '    ', @player3, ': ', @pts3, '/', @reb3) "Points/Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @3s float, @pts2 float, @pts3 float, @3s2 float, @3s3 float
AS 
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '    ', @player2, ': ', @pts2, '/', @3s2, '    ', @player3, ': ', @pts3, '/', @3s3) "Points/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @blk float, @pts2 float, @pts3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @blk, '    ', @player2, ': ', @pts2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @blk3) "Points/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @stl float,  @pts2 float, @pts3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @stl, '    ', @player2, ': ', @pts2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @stl3) "Points/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @reb float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float
AS 
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '    ', @player2, ': ', @ast2, '/', @reb2, '    ', @player3, ': ', @ast3, '/', @reb3) "Assists/Rebounds",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @3s float,  @ast2 float, @ast3 float,  @3s2 float, @3s3 float
AS 
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '    ', @player2, ': ', @ast2, '/', @3s2, '    ', @player3, ': ', @ast3, '/', @3s3) "Assists/3PM",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @blk float,  @ast2 float, @ast3 float,  @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @blk, '    ', @player2, ': ', @ast2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @blk3) "Assists/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @stl float,  @ast2 float, @ast3 float,  @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @stl, '    ', @player2, ': ', @ast2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @stl3) "Assists/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @reb float, @3s float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float
AS 
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '    ', @player2, ': ', @reb2, '/', @3s2, '    ', @player3, ': ', @reb3, '/', @3s3) "Rebounds/3PM",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @reb float, @blk float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @blk, '    ', @player2, ': ', @reb2, '/', @blk2, '    ', @player3, ': ', @reb3, '/', @blk3) "Rebounds/Blocks",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @reb float, @stl float,  @reb2 float, @reb3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @stl, '    ', @player2, ': ', @reb2, '/', @stl2, '    ', @player3, ': ', @reb3, '/', @stl3) "Rebounds/Steals",
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb  and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(COUNT(pgl.player_ID)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @3s float, @blk float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @blk, '    ', @player2, ': ', @3s2, '/', @blk2, '    ', @player3, ': ', @3s3, '/', @blk3) "Threes/Blocks",
				SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @3s float, @stl float,  @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @stl, '    ', @player2, ': ', @3s2, '/', @stl2, '    ', @player3, ': ', @3s3, '/', @stl3) "Threes/Steals",
				SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE B_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @stl float, @blk float,  @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @blk, '/', @stl, '    ', @player2, ': ', @blk2, '/', @stl2, '    ', @player3, ': ', @blk3, '/', @stl3) "Blocks/Steals",
				SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @blk and pg2.stl >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
--
CREATE PROCEDURE P_A_R_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @reb float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3) "Points/Assists/Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @3s float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @3s3) "Points/Assists/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @blk float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @blk3) "Points/Assists/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @stl3) "Points/Assists/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @reb float, @3s float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @3s3) "Points/Rebounds/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_B_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @reb float, @blk float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @blk, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @blk3) "Points/Rebounds/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @reb float, @stl float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @stl, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @stl3) "Points/Rebounds/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_B_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @blk float, @pts float, @3s float,  @pts2 float, @pts3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @blk, '    ', @player2, ': ', @pts2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @3s3, '/', @blk3) "Points/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @stl float, @pts float, @3s float,  @pts2 float, @pts3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @stl, '    ', @player2, ': ', @pts2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @3s3, '/', @stl3) "Points/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @blk float, @stl float,  @pts2 float, @pts3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @blk, '/', @stl, '    ', @player2, ': ', @pts2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @blk3, '/', @stl3) "Points/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @reb float, @3s float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2,  '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3) "Assists/Rebounds/Threes",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @reb float, @blk float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @blk, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @blk3) "Assists/Rebounds/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @reb float, @stl float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @stl, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @stl3) "Assists/Rebounds/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_B_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @3s float, @blk float,  @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @blk, '    ', @player2, ': ', @ast2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @3s3, '/', @blk3) "Assists/Threes/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @3s float, @stl float,  @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @stl, '    ', @player2, ': ', @ast2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @3s3, '/', @stl3) "Assists/Threes/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @blk float, @stl float,  @ast2 float, @ast3 float,  @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @blk, '/', @stl, '    ', @player2, ': ', @ast2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @blk3, '/', @stl3) "Assists/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_B_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @blk float, @reb float, @3s float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @blk, '    ', @player2, ': ', @reb2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @reb3, '/', @3s3, '/', @blk3) "Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @stl float, @reb float, @3s float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @stl, '    ', @player2, ': ', @reb2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @reb3, '/', @3s3, '/', @stl3) "Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @reb float, @blk float, @stl float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @blk, '/', @stl, '    ', @player2, ': ', @reb2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @reb3, '/', @blk3, '/', @stl3) "Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @3s float, @blk float, @stl float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @blk, '/', @stl, '    ', @player2, ': ', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @3s3, '/', @blk3, '/', @stl3) "Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3  and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @reb float, @3s float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2,  '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @3s3) "Points/Assists/Rebounds/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @reb float, @blk float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @blk3) "Points/Assists/Rebounds/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @reb float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @stl3) "Points/Assists/Rebounds/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @3s float, @blk float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @3s3, '/', @blk3) "Points/Assists/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @3s float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @3s3, '/', @stl3) "Points/Assists/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @blk float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @blk3, '/', @stl3) "Points/Assists/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @reb float, @3s float, @blk float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @3s3, '/', @blk3) "Points/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_3_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @reb float, @3s float, @stl float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @3s3, '/', @stl3) "Points/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_B_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @reb float, @blk float, @stl float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @blk3, '/', @stl3) "Points/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_3_B_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @3s float, @blk float, @stl float,  @pts2 float, @pts3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @3s3, '/', @blk3, '/', @stl3) "Points/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_R_3_B_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @reb float, @3s float, @blk float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @blk,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3, '/', @blk3) "Assists/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO  
CREATE PROCEDURE A_R_3_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @reb float, @3s float, @stl float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @stl2,  '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3, '/', @stl3) "Assists/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @reb float, @blk float, @stl float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @blk, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @blk3, '/', @stl3) "Assists/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_3_B_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @3s float, @blk float, @stl float,  @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @3s3, '/', @blk3, '/', @stl3) "Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE R_3_B_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @reb float, @3s float, @blk float, @stl float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @reb2, '/', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @reb3, '/', @3s3, '/', @blk3, '/', @stl3) "Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @blk2,  '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @3s3, '/', @blk3) "Points/Assists/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @reb float, @3s float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @3s3, '/', @stl3) "Points/Assists/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @reb float, @blk float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @blk3, '/', @stl3) "Points/Assists/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @3s float, @blk float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @3s3, '/', @blk3, '/', @stl3) "Points/Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),@pts float, @reb float, @3s float, @blk float, @stl float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @blk2, '/', @stl2,  '    ', @player3, ': ', @pts3, '/', @reb3, '/', @3s3, '/', @blk3, '/', @stl3) "Points/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_B_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @ast float, @reb float, @3s float, @blk float, @stl float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3, '/', @blk3, '/', @stl2,  '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3, '/', @blk3, '/', @stl3) "Assists/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_S_3P_W @player varchar(50), @player2 varchar(50), @player3 varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @blk,'/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @blk2,'/', @stl2,  '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @3s3, '/', @blk3, '/', @stl3) "Points/Assists/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log pgl join player_game_log pg2 on pgl.game_id = pg2.game_id join player_game_log pg3 on pgl.game_id = pg3.game_id AND pg2.game_id = pg3.game_id   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 9 AND pg2.min > 9 AND pg3.min > 9  then 1 else 0 end) DESC 
GO
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
CREATE PROCEDURE P_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float,  @pts2 float, @pts3 float
AS 
SELECT			
				CONCAT(@player, ': ', @pts, '    ', @player2, ': ', @pts2, '    ', @player3, ': ', @pts3) Points,
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(COUNT(pgl.player_ID)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float,  @ast2 float, @ast3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '    ', @player2, ': ', @ast2, '    ', @player3, ': ', @ast3) Assists,
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @reb float,  @reb2 float, @reb3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '    ', @player2, ': ', @reb2, '    ', @player3, ': ', @reb3) Rebounds,
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @3s float,  @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '    ', @player2, ': ', @3s2, '    ', @player3, ': ', @3s3) "3PM",
				SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE B_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @blk float,  @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @blk, '    ', @player2, ': ', @blk2, '    ', @player3, ': ', @blk3) Blocks,
				SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @stl float,  @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @stl, '    ', @player2, ': ', @stl2, '    ', @player3, ': ', @stl3) Steals,
				SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '    ', @player2, ': ', @pts2, '/', @ast2, '    ', @player3, ': ', @pts3, '/', @ast3) "Points/Assists",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO

CREATE PROCEDURE P_R_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @reb float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '    ', @player2, ': ', @pts2, '/', @reb2, '    ', @player3, ': ', @pts3, '/', @reb3) "Points/Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @3s float, @pts2 float, @pts3 float, @3s2 float, @3s3 float
AS 
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '    ', @player2, ': ', @pts2, '/', @3s2, '    ', @player3, ': ', @pts3, '/', @3s3) "Points/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @blk float, @pts2 float, @pts3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @blk, '    ', @player2, ': ', @pts2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @blk3) "Points/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @stl float,  @pts2 float, @pts3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @stl, '    ', @player2, ': ', @pts2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @stl3) "Points/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @reb float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float
AS 
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '    ', @player2, ': ', @ast2, '/', @reb2, '    ', @player3, ': ', @ast3, '/', @reb3) "Assists/Rebounds",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @3s float,  @ast2 float, @ast3 float,  @3s2 float, @3s3 float
AS 
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '    ', @player2, ': ', @ast2, '/', @3s2, '    ', @player3, ': ', @ast3, '/', @3s3) "Assists/3PM",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @blk float,  @ast2 float, @ast3 float,  @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @blk, '    ', @player2, ': ', @ast2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @blk3) "Assists/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @stl float,  @ast2 float, @ast3 float,  @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @stl, '    ', @player2, ': ', @ast2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @stl3) "Assists/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @reb float, @3s float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float
AS 
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '    ', @player2, ': ', @reb2, '/', @3s2, '    ', @player3, ': ', @reb3, '/', @3s3) "Rebounds/3PM",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @reb float, @blk float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @blk, '    ', @player2, ': ', @reb2, '/', @blk2, '    ', @player3, ': ', @reb3, '/', @blk3) "Rebounds/Blocks",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @reb float, @stl float,  @reb2 float, @reb3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @stl, '    ', @player2, ': ', @reb2, '/', @stl2, '    ', @player3, ': ', @reb3, '/', @stl3) "Rebounds/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @3s float, @blk float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @blk, '    ', @player2, ': ', @3s2, '/', @blk2, '    ', @player3, ': ', @3s3, '/', @blk3) "Threes/Blocks",
				SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @3s float, @stl float,  @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @stl, '    ', @player2, ': ', @3s2, '/', @stl2, '    ', @player3, ': ', @3s3, '/', @stl3) "Threes/Steals",
				SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO

CREATE PROCEDURE B_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @stl float, @blk float,  @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @blk, '/', @stl, '    ', @player2, ': ', @blk2, '/', @stl2, '    ', @player3, ': ', @blk3, '/', @stl3) "Blocks/Steals",
				SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @blk and pg2.stl >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
--drop PROCEDURE P_A_R_3
CREATE PROCEDURE P_A_R_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3) "Points/Assists/Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @3s float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @3s3) "Points/Assists/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @blk float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @blk3) "Points/Assists/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @stl3) "Points/Assists/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @reb float, @3s float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @3s3) "Points/Rebounds/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_B_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @reb float, @blk float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @blk, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @blk3) "Points/Rebounds/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @reb float, @stl float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @stl, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @stl3) "Points/Rebounds/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_B_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @blk float, @pts float, @3s float,  @pts2 float, @pts3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @blk, '    ', @player2, ': ', @pts2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @3s3, '/', @blk3) "Points/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @stl float, @pts float, @3s float,  @pts2 float, @pts3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @stl, '    ', @player2, ': ', @pts2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @3s3, '/', @stl3) "Points/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @blk float, @stl float,  @pts2 float, @pts3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @blk, '/', @stl, '    ', @player2, ': ', @pts2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @blk3, '/', @stl3) "Points/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @reb float, @3s float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2,  '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3) "Assists/Rebounds/Threes",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @reb float, @blk float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @blk, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @blk3) "Assists/Rebounds/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @reb float, @stl float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @stl, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @stl3) "Assists/Rebounds/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_B_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @3s float, @blk float,  @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @blk, '    ', @player2, ': ', @ast2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @3s3, '/', @blk3) "Assists/Threes/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @3s float, @stl float,  @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @stl, '    ', @player2, ': ', @ast2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @3s3, '/', @stl3) "Assists/Threes/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @blk float, @stl float,  @ast2 float, @ast3 float,  @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @blk, '/', @stl, '    ', @player2, ': ', @ast2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @blk3, '/', @stl3) "Assists/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_B_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @blk float, @reb float, @3s float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @blk, '    ', @player2, ': ', @reb2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @reb3, '/', @3s3, '/', @blk3) "Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @stl float, @reb float, @3s float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @stl, '    ', @player2, ': ', @reb2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @reb3, '/', @3s3, '/', @stl3) "Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @reb float, @blk float, @stl float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @blk, '/', @stl, '    ', @player2, ': ', @reb2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @reb3, '/', @blk3, '/', @stl3) "Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @3s float, @blk float, @stl float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @blk, '/', @stl, '    ', @player2, ': ', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @3s3, '/', @blk3, '/', @stl3) "Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3  and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @3s float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2,  '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @3s3) "Points/Assists/Rebounds/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @blk float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @blk3) "Points/Assists/Rebounds/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @stl3) "Points/Assists/Rebounds/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @3s float, @blk float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @3s3, '/', @blk3) "Points/Assists/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @3s float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @3s3, '/', @stl3) "Points/Assists/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @blk float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @blk3, '/', @stl3) "Points/Assists/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @reb float, @3s float, @blk float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @3s3, '/', @blk3) "Points/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_3_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @reb float, @3s float, @stl float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @3s3, '/', @stl3) "Points/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_B_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @reb float, @blk float, @stl float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @blk3, '/', @stl3) "Points/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_3_B_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @3s float, @blk float, @stl float,  @pts2 float, @pts3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @3s3, '/', @blk3, '/', @stl3) "Points/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_R_3_B_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @reb float, @3s float, @blk float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @blk,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3, '/', @blk3) "Assists/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO  
CREATE PROCEDURE A_R_3_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @reb float, @3s float, @stl float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @stl2,  '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3, '/', @stl3) "Assists/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @reb float, @blk float, @stl float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @blk, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @blk3, '/', @stl3) "Assists/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_3_B_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @3s float, @blk float, @stl float,  @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @3s3, '/', @blk3, '/', @stl3) "Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE R_3_B_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @reb float, @3s float, @blk float, @stl float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @reb2, '/', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @reb3, '/', @3s3, '/', @blk3, '/', @stl3) "Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @blk2,  '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @3s3, '/', @blk3) "Points/Assists/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @3s3, '/', @stl3) "Points/Assists/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @blk float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @blk3, '/', @stl3) "Points/Assists/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @3s float, @blk float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @3s3, '/', @blk3, '/', @stl3) "Points/Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @reb float, @3s float, @blk float, @stl float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @blk2, '/', @stl2,  '    ', @player3, ': ', @pts3, '/', @reb3, '/', @3s3, '/', @blk3, '/', @stl3) "Points/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_B_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @reb float, @3s float, @blk float, @stl float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3, '/', @blk3, '/', @stl3) "Assists/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_S_3P_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @blk, '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @blk2,'/', @stl2,  '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @3s3, '/', @blk3, '/', @stl3) "Points/Assists/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO

-----------------------------------------------------------------------------------------
CREATE PROCEDURE P_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float,  @pts2 float, @pts3 float
AS 
SELECT			
				CONCAT(@player, ': ', @pts, '    ', @player2, ': ', @pts2, '    ', @player3, ': ', @pts3) Points,
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float,  @ast2 float, @ast3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '    ', @player2, ': ', @ast2, '    ', @player3, ': ', @ast3) Assists,
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @reb float,  @reb2 float, @reb3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '    ', @player2, ': ', @reb2, '    ', @player3, ': ', @reb3) Rebounds,
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @3s float,  @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '    ', @player2, ': ', @3s2, '    ', @player3, ': ', @3s3) "3PM",
				SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE B_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @blk float,  @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @blk, '    ', @player2, ': ', @blk2, '    ', @player3, ': ', @blk3) Blocks,
				SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.blk >= @blk  and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @stl float,  @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @stl, '    ', @player2, ': ', @stl2, '    ', @player3, ': ', @stl3) Steals,
				SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @stl  and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '    ', @player2, ': ', @pts2, '/', @ast2, '    ', @player3, ': ', @pts3, '/', @ast3) "Points/Assists",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @reb float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '    ', @player2, ': ', @pts2, '/', @reb2, '    ', @player3, ': ', @pts3, '/', @reb3) "Points/Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @3s float, @pts2 float, @pts3 float, @3s2 float, @3s3 float
AS 
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '    ', @player2, ': ', @pts2, '/', @3s2, '    ', @player3, ': ', @pts3, '/', @3s3) "Points/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @blk float, @pts2 float, @pts3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @blk, '    ', @player2, ': ', @pts2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @blk3) "Points/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @stl float,  @pts2 float, @pts3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @stl, '    ', @player2, ': ', @pts2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @stl3) "Points/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @reb float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float
AS 
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '    ', @player2, ': ', @ast2, '/', @reb2, '    ', @player3, ': ', @ast3, '/', @reb3) "Assists/Rebounds",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @3s float,  @ast2 float, @ast3 float,  @3s2 float, @3s3 float
AS 
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '    ', @player2, ': ', @ast2, '/', @3s2, '    ', @player3, ': ', @ast3, '/', @3s3) "Assists/3PM",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @blk float,  @ast2 float, @ast3 float,  @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @blk, '    ', @player2, ': ', @ast2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @blk3) "Assists/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @stl float,  @ast2 float, @ast3 float,  @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @stl, '    ', @player2, ': ', @ast2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @stl3) "Assists/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @reb float, @3s float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float
AS 
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '    ', @player2, ': ', @reb2, '/', @3s2, '    ', @player3, ': ', @reb3, '/', @3s3) "Rebounds/3PM",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @reb float, @blk float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @blk, '    ', @player2, ': ', @reb2, '/', @blk2, '    ', @player3, ': ', @reb3, '/', @blk3) "Rebounds/Blocks",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @reb float, @stl float,  @reb2 float, @reb3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @stl, '    ', @player2, ': ', @reb2, '/', @stl2, '    ', @player3, ': ', @reb3, '/', @stl3) "Rebounds/Steals",
				SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb   and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb  and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(COUNT(pgl.player_ID)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @3s float, @blk float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @blk, '    ', @player2, ': ', @3s2, '/', @blk2, '    ', @player3, ': ', @3s3, '/', @blk3) "Threes/Blocks",
				SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @3s float, @stl float,  @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @stl, '    ', @player2, ': ', @3s2, '/', @stl2, '    ', @player3, ': ', @3s3, '/', @stl3) "Threes/Steals",
				SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE B_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @stl float, @blk float,  @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @blk, '/', @stl, '    ', @player2, ': ', @blk2, '/', @stl2, '    ', @player3, ': ', @blk3, '/', @stl3) "Blocks/Steals",
				SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.stl >= @blk and pg2.stl >= @blk2 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.stl >= @blk  AND pg2.stl >= @blk2 and pgl.stl>= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
--
CREATE PROCEDURE P_A_R_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3) "Points/Assists/Rebounds",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @3s float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @3s3) "Points/Assists/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @blk float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @blk3) "Points/Assists/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @stl3) "Points/Assists/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @reb float, @3s float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @3s3) "Points/Rebounds/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_B_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @reb float, @blk float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @blk, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @blk3) "Points/Rebounds/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @reb float, @stl float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @stl, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @stl3) "Points/Rebounds/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_B_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @blk float, @pts float, @3s float,  @pts2 float, @pts3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @blk, '    ', @player2, ': ', @pts2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @3s3, '/', @blk3) "Points/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_3_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @stl float, @pts float, @3s float,  @pts2 float, @pts3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @stl, '    ', @player2, ': ', @pts2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @3s3, '/', @stl3) "Points/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_B_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @blk float, @stl float,  @pts2 float, @pts3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @blk, '/', @stl, '    ', @player2, ': ', @pts2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @blk3, '/', @stl3) "Points/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @reb float, @3s float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2,  '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3) "Assists/Rebounds/Threes",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @reb float, @blk float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @blk, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @blk3) "Assists/Rebounds/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @reb float, @stl float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @stl, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @stl3) "Assists/Rebounds/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_B_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @3s float, @blk float,  @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @blk, '    ', @player2, ': ', @ast2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @3s3, '/', @blk3) "Assists/Threes/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_3_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @3s float, @stl float,  @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @stl, '    ', @player2, ': ', @ast2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @3s3, '/', @stl3) "Assists/Threes/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_B_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @blk float, @stl float,  @ast2 float, @ast3 float,  @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @blk, '/', @stl, '    ', @player2, ': ', @ast2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @blk3, '/', @stl3) "Assists/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_B_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @blk float, @reb float, @3s float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @blk, '    ', @player2, ': ', @reb2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @reb3, '/', @3s3, '/', @blk3) "Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_3_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @stl float, @reb float, @3s float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @stl, '    ', @player2, ': ', @reb2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @reb3, '/', @3s3, '/', @stl3) "Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE R_B_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @reb float, @blk float, @stl float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @blk, '/', @stl, '    ', @player2, ': ', @reb2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @reb3, '/', @blk3, '/', @stl3) "Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE _3_B_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @3s float, @blk float, @stl float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @3s, '/', @blk, '/', @stl, '    ', @player2, ': ', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @3s3, '/', @blk3, '/', @stl3) "Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3  and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.fg3m >= @3s  and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk>= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3			 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @3s float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2,  '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @3s3) "Points/Assists/Rebounds/Threes",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @blk float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @blk3) "Points/Assists/Rebounds/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @stl3) "Points/Assists/Rebounds/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @3s float, @blk float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @3s3, '/', @blk3) "Points/Assists/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @3s float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @3s3, '/', @stl3) "Points/Assists/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_B_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @blk float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @ast2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @blk3, '/', @stl3) "Points/Assists/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @reb float, @3s float, @blk float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @blk,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @3s3, '/', @blk3) "Points/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_3_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @reb float, @3s float, @stl float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @3s3, '/', @stl3) "Points/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_R_B_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @reb float, @blk float, @stl float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @reb2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @reb3, '/', @blk3, '/', @stl3) "Points/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_3_B_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @3s float, @blk float, @stl float,  @pts2 float, @pts3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @pts2, '/', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @3s3, '/', @blk3, '/', @stl3) "Points/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_R_3_B_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @reb float, @3s float, @blk float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @blk,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3, '/', @blk3) "Assists/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO  
CREATE PROCEDURE A_R_3_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @reb float, @3s float, @stl float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @stl2,  '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3, '/', @stl3) "Assists/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_B_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @reb float, @blk float, @stl float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @blk, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @reb2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @blk3, '/', @stl3) "Assists/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE A_3_B_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @3s float, @blk float, @stl float,  @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @ast2, '/', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @ast3, '/', @3s3, '/', @blk3, '/', @stl3) "Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE R_3_B_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @reb float, @3s float, @blk float, @stl float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @reb, '/', @3s, '/', @blk, '/', @stl,  '    ', @player2, ': ', @reb2, '/', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @reb3, '/', @3s3, '/', @blk3, '/', @stl3) "Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3  and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.reb >= @reb  and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m>= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3		 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @blk, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @blk2,  '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @3s3, '/', @blk3) "Points/Assists/Rebounds/Threes/Blocks",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_3_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @3s3, '/', @stl3) "Points/Assists/Rebounds/Threes/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_R_B_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @blk float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @blk3, '/', @stl3) "Points/Assists/Rebounds/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_A_3_B_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @3s float, @blk float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @3s2, '/', @blk2, '/', @stl2, '    ', @player3, ': ', @pts3, '/', @ast3, '/', @3s3, '/', @blk3, '/', @stl3) "Points/Assists/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE P_R_3_B_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),@pts float, @reb float, @3s float, @blk float, @stl float,  @pts2 float, @pts3 float, @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @reb, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @pts2, '/', @reb2, '/', @3s2, '/', @blk2, '/', @stl2,  '    ', @player3, ': ', @pts3, '/', @reb3, '/', @3s3, '/', @blk3, '/', @stl3) "Points/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO
CREATE PROCEDURE A_R_3_B_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @ast float, @reb float, @3s float, @blk float, @stl float,  @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @ast, '/', @reb, '/', @3s, '/', @blk,  '/', @stl, '    ', @player2, ': ', @ast2, '/', @reb2, '/', @3s2, '/', @blk2, '    ', @player3, ': ', @ast3, '/', @reb3, '/', @3s3, '/', @blk3, '/', @stl2) "Assists/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3  and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.ast >= @ast  and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb>= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3	and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO 
CREATE PROCEDURE P_A_R_3_B_S_3P_W_I @player varchar(50), @player2 varchar(50), @player3 varchar(50), @injured varchar(50),  @pts float, @ast float, @reb float, @3s float, @blk float, @stl float,  @pts2 float, @pts3 float, @ast2 float, @ast3 float,  @reb2 float, @reb3 float, @3s2 float, @3s3 float, @blk2 float, @blk3 float,      @stl2 float, @stl3 float
AS
SELECT			
				CONCAT(@player, ': ', @pts, '/', @ast, '/', @reb, '/', @3s,  '/', @blk,'/', @stl, '    ', @player2, ': ', @pts2, '/', @ast2, '/', @reb2, '/', @3s2, '/', @blk2,'/', @stl2,  '    ', @player3, ': ', @pts3, '/', @ast3, '/', @reb3, '/', @3s3, '/', @blk3,  '/', @stl3) "Points/Assists/Rebounds/Threes/Blocks/Steals",
				SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end) "Games Above Prop",
				SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) GP,
				CONCAT(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)*100, '%') "Cover Rate", 
				CASE WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) > .5 and ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) != 1
				THEN  ROUND(ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)/(1-ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3)) * (-100), 0) 
				WHEN ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) <= .5 
				THEN  ROUND((1 - ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3))/ROUND(CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) * 100, 0) 
				WHEN ROUND(CAST(SUM(Case when pgl.pts >= @pts AND pg2.pts >= @pts2 AND pg3.pts >= @pts3  and pgl.ast >= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3 and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3 and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3 
				and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end), 3) = 1 then -1000
				END AS Line

FROM			player_game_log_injured_players pgl join player_game_log_injured_players pg2 on pgl.game_id = pg2.game_id join player_game_log_injured_players pg3 on pgl.game_id = pg3.game_id JOIN player_game_log_injured_players injured on pgl.game_id = injured.game_id AND pg2.game_id = injured.game_id AND injured.player_name = @injured   INNER JOIN
						playerAverage on playerAverage.player_id = pgl.player_id JOIN playerAverage pa2 on pa2.player_id = pg2.player_id join playerAverage pa3 on pa3.player_id = pg3.player_id INNER JOIN
						gp on gp.player_id = pgl.player_id join gp gp2 on gp2.player_id = pg2.player_id join gp gp3 on gp3.player_id = pg3.player_id


WHERE		gp.GP > 0 AND gp2.GP > 0 AND gp3.GP > 0 AND pgl.wl='W' AND pg2.wl='W' AND pg3.wl='W' AND			 
			playerAverage.Player = @player and pa2.Player = @player2 and pa3.Player = @player3

GROUP BY		playerAverage.Player, gp.gp 
ORDER BY CAST(SUM(CASE WHEN pgl.pts >= @pts  AND pg2.pts >= @pts2 AND pg3.pts >= @pts3 and pgl.ast>= @ast and pg2.ast >= @ast2 and pg3.ast >= @ast3 and pgl.reb >= @reb and pg2.reb >= @reb2 and pg3.reb >= @reb3	and pgl.fg3m >= @3s and pg2.fg3m >= @3s2 and pg3.fg3m >= @3s3	and pgl.blk >= @blk and pg2.blk >= @blk2 and pg3.blk >= @blk3 and pgl.stl >= @stl and pg2.stl >= @stl2 and pg3.stl >= @stl3  	 and injured.dnp = 'DNP' then 1 else 0 end)as float)/SUM(CASE WHEN pgl.min > 0 AND pg2.min > 0 AND pg3.min > 0  and injured.dnp = 'DNP' then 1 else 0 end) DESC 
GO

CREATE PROCEDURE allPlayers
AS
SELECT	     Player		
FROM		 playerAverage 
ORDER BY Player ASC
GO


CREATE PROCEDURE userTeams @team varchar(255) 
as
SELECT     player.player_name AS Roster,
		   player_season.age as Age,
		   player_season.gp as GP,
		   ROUND(	SUM(player_game_log.min/player_season.gp),0) as MIN,
		   ROUND(player_season.pts/player_season.gp,1) as PTS,
		   ROUND(player_season.ast/player_season.gp,1) as AST,
		   ROUND(player_season.reb/player_season.gp,1) as REB,	   
		   ROUND(	SUM(player_game_log.plus_minus)/player_season.gp,1) as "+/-",
		   ROUND(	SUM(player_game_log.fgm-player_game_log.fg3m)/player_season.gp,1)as "2FGM",		
		       
		   ROUND(	SUM(player_game_log.fga-player_game_log.fg3a)/player_season.gp,1) as "2FGA",
		   CONCAT(	ROUND(	SUM(player_game_log.fgm-player_game_log.fg3m)/SUM(player_game_log.fga-player_game_log.fg3a)*100,1), '%')	as "2FG%",
		   ROUND(	SUM(player_game_log.ftm)/player_season.gp,1)as "FTA",
		   
		   ROUND(	SUM(player_game_log.fta)/player_season.gp,1) as "FTM",
		   CONCAT(	ROUND(	SUM(player_game_log.ftm)/SUM(player_game_log.fta) * 100, 1),'%') as "FT%",
		   ROUND(	SUM(player_game_log.fg3m)/player_season.gp,1) as "3FGM",
		   
		   ROUND(	SUM(player_game_log.fg3a)/player_season.gp,1) as "3FGA",
		   CONCAT(	ROUND(	SUM(player_game_log.fg3m)/SUM(player_game_log.fg3a) * 100, 1),'%') as "3FG%",
		   ROUND(	SUM(player_game_log.stl)/player_season.gp,1) as STL,
		   ROUND(	SUM(player_game_log.blk)/player_season.gp,1) as BLK,
		   ROUND(	SUM(player_game_log.tov)/player_season.gp,1) as TOV



FROM            player LEFT OUTER JOIN
                         player_season ON player.player_id = player_season.player_id LEFT OUTER JOIN
                         team ON player_season.team_id = team.team_id INNER JOIN
						 team_season on team.team_id = team_season.team_id INNER JOIN
						 player_game_log on player_game_log.player_id = player.player_id
WHERE CONCAT('(',team.abbreviation, ') ', team.city, ' ', team.nickname) = @team AND player_season.gp != 0  
GROUP BY player.player_name,
		   player_season.age,
		   
		   player_season.gp,
		   ROUND(player_season.pts/player_season.gp,1),
		   ROUND(player_season.ast/player_season.gp,1) ,
		   ROUND(player_season.reb/player_season.gp,1) 


HAVING SUM(player_game_log.FTA) != 0		AND	SUM(player_game_log.fga)!= 0	AND SUM(player_game_log.fg3a) != 0	AND SUM(player_game_log.fta) != 0 AND SUM(player_game_log.fga-player_game_log.fg3a) != 0 	   	   
ORDER BY PTS DESC
GO

CREATE PROCEDURE userPlayers @player varchar(40)
AS
SELECT TOP 7 CAST(game.date as date) as date, 
		player.player_name as Player,
		player_game_log.wl as Result,
		team.nickname Matchup,
		CONCAT(team_game_log.score, ' - ', opteam_game_log.opscore) as Score,
		ROUND(player_game_log.min,0) as MIN,
		player_game_log.pts as PTS, 
		player_game_log.ast as AST, 
		player_game_log.reb as REB,
		player_game_log.blk as BLK,
		player_game_log.stl as STL

		
		
FROM	player_game_log INNER JOIN
		player on player_game_log.player_id = player.player_id INNER JOIN 
		team_game_log on player_game_log.team_id = team_game_log.team_id and player_game_log.game_id = team_game_log.game_id JOIN
		opteam_game_log  on team_game_log.opteam_id = opteam_game_log.opteam_id and player_game_log.game_id = opteam_game_log.game_id INNER JOIN
		game on player_game_log.game_id = game.game_id and opteam_game_log.game_id = game.game_id INNER JOIN 
		team on team_game_log.opteam_id = team.team_id
	
WHERE player_name = @player

ORDER BY date DESC
GO

/****** Script for SelectTopNRows command from SSMS  ******/
create procedure east @rank int
AS
SELECT CONCAT(city,' ', nickname) Team
	  ,nickname nickname
      ,[conference]
      ,[rank]

  FROM [nba].[dbo].[playoffPicture] INNER JOIN
		team on playoffPicture.team_id = team.team_id
where conference = 'East' AND rank = @rank
GO

create procedure west @rank int
AS
SELECT CONCAT(city,' ', nickname) Team
	  ,nickname nickname
      ,[conference]
      ,[rank]

  FROM [nba].[dbo].[playoffPicture] INNER JOIN
		team on playoffPicture.team_id = team.team_id
where conference = 'West' AND rank = @rank


