using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Data;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using Microsoft.SqlServer.Server;
using System.Web.Query.Dynamic;
using static System.Net.Mime.MediaTypeNames;
using System.Reflection;

namespace NBA_SQL
{
    public partial class PropChecker2 : System.Web.UI.Page
    {

        float p = 0;
        float p2 = 0;
        float p3 = 0;
        float a = 0;
        float a2 = 0;
        float a3 = 0;
        float r = 0;
        float r2 = 0;
        float r3 = 0;
        float _3 = 0;
        float _32 = 0;
        float _33 = 0;
        float b = 0;
        float b2 = 0;
        float b3 = 0;
        float s = 0;
        float s2 = 0;
        float s3 = 0;
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!this.IsPostBack)
            {
                this.BindGrid();
            }
            if (Session["Guest"] == null || Session["Guest"].ToString() == "Guest")
            {
                wrapper.Attributes.Add("Style", "cursor:not-allowed; width:140px;");
                btnjournal.Attributes.Add("style", "pointer-events: none; background-color:grey; color:white; opacity: 0.65;");
                if (Session["User"] != null)
                {
                    wrapper.Attributes.Add("Style", "cursor: pointer; width:140px; ");
                    btnjournal.Attributes.Add("style", "pointer-events: all;");
                    btnjournal.Attributes.Add("class", "btn btn-primary enabled");
                }
            }
            
        }
        protected void BindGrid()
        {
            SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
            using (sqlConnect)
            {
                using (SqlCommand querySearch = new SqlCommand("dnpTeams"))
                {
                    querySearch.CommandType = CommandType.StoredProcedure;
                    using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                    {
                        querySearch.Connection = sqlConnect;
                        sDataSearch.SelectCommand = querySearch;
                        using (DataSet dataT = new DataSet())
                        {
                            try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                            ddTeams.DataTextField = dataT.Tables[0].Columns["Team"].ToString();
                            ddTeams.DataSource = dataT;
                            ddTeams.DataBind();
                            ListItem emptyItem = new ListItem("Team", "");
                            ddTeams.Items.Insert(0, emptyItem);
                        }
                    }
                }
            }
        }
        protected void ddTeams_SelectedIndexChanged(object sender, EventArgs e)
        {
            ddlRoster.ClearSelection();
            ddlRoster.Items.Clear();
            ddlRoster2.ClearSelection();
            ddlRoster2.Items.Clear();
            ddlRoster3.ClearSelection();
            ddlRoster3.Items.Clear();
            ddlInjured.ClearSelection();
            ddlInjured.Items.Clear();
            PopulateRoster();
            if (Session["User"] != null || Session["Admin"] != null)
            {
                SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=comments;User Id=test;Password=test123;");
                using (sqlConnect)
                {
                    using (SqlCommand querySearch = new SqlCommand("INSERT INTO userTeams (username, team, sourcePage, datetime) VALUES(@username, @team, @sourcePage,  CAST(GETDATE() as datetime))"))
                    {
                        querySearch.Connection = sqlConnect;
                        querySearch.CommandType = CommandType.Text;
                        querySearch.Parameters.AddWithValue("@username", Session["User"]);
                        querySearch.Parameters.Add(new SqlParameter("@team", ddTeams.SelectedValue.ToString())); querySearch.Parameters.Add(new SqlParameter("@sourcePage", Title));
                        sqlConnect.Open();
                        querySearch.ExecuteScalar(); // Used for other than SELECT Queries
                        sqlConnect.Close();
                    }
                }
            }
        }
        protected void ddlRoster_SelectedIndexChanged(object sender, EventArgs e)
        {
            if (Session["User"] != null || Session["Admin"] != null)
            {
                SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=comments;User Id=test;Password=test123;");
                using (sqlConnect)
                {
                    using (SqlCommand querySearch = new SqlCommand("INSERT INTO userPlayers(username, player, sourcePage, datetime) VALUES(@username, @player, @sourcePage, CAST(GETDATE() as datetime))"))
                    {
                        querySearch.Connection = sqlConnect;
                        querySearch.CommandType = CommandType.Text;
                        querySearch.Parameters.AddWithValue("@username", Session["User"]);
                        querySearch.Parameters.Add(new SqlParameter("@player", ddlRoster.SelectedValue.ToString())); querySearch.Parameters.Add(new SqlParameter("@sourcePage", Title));
                        sqlConnect.Open();
                        querySearch.ExecuteScalar(); // Used for other than SELECT Queries
                        sqlConnect.Close();
                    }
                }
            }
        }
        protected void ddlInjured_SelectedIndexChanged(object sender, EventArgs e)
        {

        }
        protected void PopulateRoster()
        {
            string team = ddTeams.SelectedValue;
            SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
            using (sqlConnect)
            {
                using (SqlCommand querySearch = new SqlCommand("dnpRoster"))
                {
                    querySearch.Connection = sqlConnect;

                    querySearch.CommandType = CommandType.StoredProcedure;
                    querySearch.Parameters.AddWithValue("@team", team);
                    sqlConnect.Open();
                    using (SqlDataReader sdr = querySearch.ExecuteReader())
                    {
                        while (sdr.Read())
                        {
                            ListItem item = new ListItem();
                            item.Text = sdr["Player"].ToString();
                            ddlRoster.Items.Add(item);

                        }
                    }
                    ListItem emptyItem = new ListItem("Player", "");
                    ddlRoster.Items.Insert(0, emptyItem);
                    sqlConnect.Close();
                }
                using (SqlCommand querySearch = new SqlCommand("dnpRoster"))
                {
                    querySearch.Connection = sqlConnect;

                    querySearch.CommandType = CommandType.StoredProcedure;
                    querySearch.Parameters.AddWithValue("@team", team);
                    sqlConnect.Open();
                    using (SqlDataReader sdr = querySearch.ExecuteReader())
                    {
                        while (sdr.Read())
                        {
                            ListItem item = new ListItem();
                            item.Text = sdr["Player"].ToString();
                            ddlRoster2.Items.Add(item);
                        }
                    }
                    ListItem emptyItem = new ListItem("Player", "");
                    ddlRoster2.Items.Insert(0, emptyItem);
                    sqlConnect.Close();
                }
                using (SqlCommand querySearch = new SqlCommand("dnpRoster"))
                {
                    querySearch.Connection = sqlConnect;

                    querySearch.CommandType = CommandType.StoredProcedure;
                    querySearch.Parameters.AddWithValue("@team", team);
                    sqlConnect.Open();
                    using (SqlDataReader sdr = querySearch.ExecuteReader())
                    {
                        while (sdr.Read())
                        {
                            ListItem item = new ListItem();
                            item.Text = sdr["Player"].ToString();
                            ddlInjured.Items.Add(item);
                        }
                    }
                    ListItem emptyItem = new ListItem("Injured Player", "");
                    ddlInjured.Items.Insert(0, emptyItem);
                    sqlConnect.Close();
                }
                using (SqlCommand querySearch = new SqlCommand("dnpRoster"))
                {
                    querySearch.Connection = sqlConnect;

                    querySearch.CommandType = CommandType.StoredProcedure;
                    querySearch.Parameters.AddWithValue("@team", team);
                    sqlConnect.Open();
                    using (SqlDataReader sdr = querySearch.ExecuteReader())
                    {
                        while (sdr.Read())
                        {
                            ListItem item = new ListItem();
                            item.Text = sdr["Player"].ToString();
                            ddlRoster3.Items.Add(item);
                        }
                        ListItem emptyItem = new ListItem("Player", "");
                        ddlRoster3.Items.Insert(0, emptyItem);
                        sqlConnect.Close();
                    }

                }
            }
        }

        protected void ddlRoster3_SelectedIndexChanged(object sender, EventArgs e)
        {
            Label2.Visible = true;
            if (Session["User"] != null || Session["Admin"] != null)
            {
                SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=comments;User Id=test;Password=test123;");
                using (sqlConnect)
                {
                    using (SqlCommand querySearch = new SqlCommand("INSERT INTO userPlayers(username, player, sourcePage, datetime) VALUES(@username, @player, @sourcePage, CAST(GETDATE() as datetime))"))
                    {
                        querySearch.Connection = sqlConnect;
                        querySearch.CommandType = CommandType.Text;
                        querySearch.Parameters.AddWithValue("@username", Session["User"]);
                        querySearch.Parameters.Add(new SqlParameter("@player", ddlRoster3.SelectedValue.ToString())); querySearch.Parameters.Add(new SqlParameter("@sourcePage", Title));
                        sqlConnect.Open();
                        querySearch.ExecuteScalar(); // Used for other than SELECT Queries
                        sqlConnect.Close();
                    }
                }
            }
            if (ddlRoster3.SelectedValue != "" && ddlRoster3.SelectedValue != "Player")
            {
                if (chkP.Checked == true)
                {
                    txtP3.Visible = true;
                }
                if (chkA.Checked == true)
                {
                    txtA3.Visible = true;
                }
                if (chkR.Checked == true)
                {
                    txtR3.Visible = true;
                }
                if (chk3.Checked == true)
                {
                    txt33.Visible = true;
                }
                if (chkB.Checked == true)
                {
                    txtB3.Visible = true;
                }
                if (chkS.Checked == true)
                {
                    txtS3.Visible = true;
                }
            }
            if (ddlRoster3.SelectedValue == "" || ddlRoster3.SelectedValue == "Player")
            {
                txtP3.Visible = false; txtA3.Visible = false; txtR3.Visible = false; txt33.Visible = false; txtB3.Visible = false; txtS3.Visible = false;
            }
        }

        protected void ddlRoster2_SelectedIndexChanged(object sender, EventArgs e)
        {
            Label1.Visible = true;
            if (Session["User"] != null || Session["Admin"] != null)
            {
                SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=comments;User Id=test;Password=test123;");
                using (sqlConnect)
                {
                    using (SqlCommand querySearch = new SqlCommand("INSERT INTO userPlayers(username, player, sourcePage, datetime) VALUES(@username, @player, @sourcePage, CAST(GETDATE() as datetime))"))
                    {
                        querySearch.Connection = sqlConnect;
                        querySearch.CommandType = CommandType.Text;
                        querySearch.Parameters.AddWithValue("@username", Session["User"]);
                        querySearch.Parameters.Add(new SqlParameter("@player", ddlRoster2.SelectedValue.ToString())); querySearch.Parameters.Add(new SqlParameter("@sourcePage", Title));
                        sqlConnect.Open();
                        querySearch.ExecuteScalar(); // Used for other than SELECT Queries
                        sqlConnect.Close();
                    }
                }
            }
            if (ddlRoster2.SelectedValue != "" && ddlRoster3.SelectedValue != "Player")
            {
                if (chkP.Checked == true)
                {
                    txtP2.Visible = true;
                }
                if (chkA.Checked == true)
                {
                    txtA2.Visible = true;
                }
                if (chkR.Checked == true)
                {
                    txtR2.Visible = true;
                }
                if (chk3.Checked == true)
                {
                    txt32.Visible = true;
                }
                if (chkB.Checked == true)
                {
                    txtB2.Visible = true;
                }
                if (chkS.Checked == true)
                {
                    txtS2.Visible = true;
                }
            }
            if (ddlRoster2.SelectedValue == "" || ddlRoster2.SelectedValue == "Player")
            {
                txtP2.Visible = false; txtA2.Visible = false; txtR2.Visible = false; txt32.Visible = false; txtB2.Visible = false; txtS2.Visible = false;
            }

        }
        protected void chkP_CheckedChanged(object sender, EventArgs e)
        {
            txtP.Visible = true;
            if (ddlRoster2.SelectedValue != "")
            {
                txtP2.Visible = true;
            }
            if (ddlRoster3.SelectedValue != "")
            {
                txtP3.Visible = true;
            }

            if (chkP.Checked == false)
            {
                txtP.Visible = false;
                txtP2.Visible = false;
                txtP3.Visible = false;
            }
        }

        protected void chkA_CheckedChanged(object sender, EventArgs e)
        {
            txtA.Visible = true;
            if (ddlRoster2.SelectedValue != "")
            {
                txtA2.Visible = true;
            }
            if (ddlRoster3.SelectedValue != "")
            {
                txtA3.Visible = true;
            }
            if (chkA.Checked == false)
            {
                txtA.Visible = false;
                txtA2.Visible = false;
                txtA3.Visible = false;
            }
        }

        protected void chkR_CheckedChanged(object sender, EventArgs e)
        {
            txtR.Visible = true;
            if (ddlRoster2.Text != "")
            {
                txtR2.Visible = true;
            }
            if (ddlRoster3.SelectedValue != "")
            {
                txtR3.Visible = true;
            }
            if (chkR.Checked == false)
            {
                txtR.Visible = false;
                txtR2.Visible = false;
                txtR3.Visible = false;
            }
        }
        protected void chk3_CheckedChanged(object sender, EventArgs e)
        {
            txt3.Visible = true;
            if (ddlRoster2.SelectedValue != "")
            {
                txt32.Visible = true;
            }
            if (ddlRoster3.SelectedValue != "")
            {
                txt33.Visible = true;
            }
            if (chk3.Checked == false)
            {
                txt3.Visible = false;
                txt32.Visible = false;
                txt33.Visible = false;
            }
        }

        protected void chkS_CheckedChanged(object sender, EventArgs e)
        {
            txtS.Visible = true;
            if (ddlRoster2.SelectedValue != "")
            {
                txtS2.Visible = true;
            }
            if (ddlRoster3.SelectedValue != "")
            {
                txtS3.Visible = true;
            }
            if (chkS.Checked == false)
            {
                txtS.Visible = false;
                txtS2.Visible = false;
                txtS3.Visible = false;
            }
        }

        protected void chkB_CheckedChanged(object sender, EventArgs e)
        {
            txtB.Visible = true;
            if (ddlRoster2.SelectedValue != "")
            {
                txtB2.Visible = true;
            }
            if (ddlRoster3.SelectedValue != "")
            {
                txtB3.Visible = true;
            }
            if (chkB.Checked == false)
            {
                txtB.Visible = false;
                txtB2.Visible = false;
                txtB3.Visible = false;
            }
        }

        protected void btnRetrieve_Click(object sender, EventArgs e)
        {
            if (txtP.Text == "")
            {
                txtP.Text = "0";
            }
            if (txtA.Text == "")
            {
                txtA.Text = "0";
            }
            if (txtR.Text == "")
            {
                txtR.Text = "0";
            }
            if (txt3.Text == "")
            {
                txt3.Text = "0";
            }
            if (txtB.Text == "")
            {
                txtB.Text = "0";
            }
            if (txtS.Text == "")
            {
                txtS.Text = "0";
            }
            if (txtP3.Text == "")
            {
                txtP3.Text = "0";
            }
            if (txtA3.Text == "")
            {
                txtA3.Text = "0";
            }
            if (txtR3.Text == "")
            {
                txtR3.Text = "0";
            }
            if (txt33.Text == "")
            {
                txt33.Text = "0";
            }
            if (txtB3.Text == "")
            {
                txtB3.Text = "0";
            }
            if (txtS3.Text == "")
            {
                txtS3.Text = "0";
            }
            if (txtP2.Text == "")
            {
                txtP2.Text = "0";
            }
            if (txtA2.Text == "")
            {
                txtA2.Text = "0";
            }
            if (txtR2.Text == "")
            {
                txtR2.Text = "0";
            }
            if (txt32.Text == "")
            {
                txt32.Text = "0";
            }
            if (txtB2.Text == "")
            {
                txtB2.Text = "0";
            }
            if (txtS2.Text == "")
            {
                txtS2.Text = "0";
            }
            string player = ddlRoster.SelectedValue.ToString();
            string injured = ddlInjured.SelectedValue.ToString();
            if (injured == "")
            {
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[9].Text.Contains('+') == false && row.Cells[9].Text.Contains('-') == false)
                                        {
                                            row.Cells[9].Text = "+" + row.Cells[9].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkA.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkR.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chk3.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkB.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true
                    && chkA.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("S"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@stl", s);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else
            {
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[9].Text.Contains('+') == false && row.Cells[9].Text.Contains('-') == false)
                                        {
                                            row.Cells[9].Text = "+" + row.Cells[9].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkA.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkR.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chk3.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkB.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true
                    && chkA.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("S_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@stl", s);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        protected void btnRetrieveW_Click(object sender, EventArgs e)
        {
            if (txtP.Text == "")
            {
                txtP.Text = "0";
            }
            if (txtA.Text == "")
            {
                txtA.Text = "0";
            }
            if (txtR.Text == "")
            {
                txtR.Text = "0";
            }
            if (txt3.Text == "")
            {
                txt3.Text = "0";
            }
            if (txtB.Text == "")
            {
                txtB.Text = "0";
            }
            if (txtS.Text == "")
            {
                txtS.Text = "0";
            }
            if (txtP3.Text == "")
            {
                txtP3.Text = "0";
            }
            if (txtA3.Text == "")
            {
                txtA3.Text = "0";
            }
            if (txtR3.Text == "")
            {
                txtR3.Text = "0";
            }
            if (txt33.Text == "")
            {
                txt33.Text = "0";
            }
            if (txtB3.Text == "")
            {
                txtB3.Text = "0";
            }
            if (txtS3.Text == "")
            {
                txtS3.Text = "0";
            }
            if (txtP2.Text == "")
            {
                txtP2.Text = "0";
            }
            if (txtA2.Text == "")
            {
                txtA2.Text = "0";
            }
            if (txtR2.Text == "")
            {
                txtR2.Text = "0";
            }
            if (txt32.Text == "")
            {
                txt32.Text = "0";
            }
            if (txtB2.Text == "")
            {
                txtB2.Text = "0";
            }
            if (txtS2.Text == "")
            {
                txtS2.Text = "0";
            }
            string player = ddlRoster.SelectedValue.ToString();
            string injured = ddlInjured.SelectedValue.ToString();
            if (injured == "")
            {
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[9].Text.Contains('+') == false && row.Cells[9].Text.Contains('-') == false)
                                        {
                                            row.Cells[9].Text = "+" + row.Cells[9].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkA.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkR.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chk3.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkB.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true
                    && chkA.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("S_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player);
                            querySearch.Parameters.AddWithValue("@stl", s);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else
            {
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[9].Text.Contains('+') == false && row.Cells[9].Text.Contains('-') == false)
                                        {
                                            row.Cells[9].Text = "+" + row.Cells[9].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[8].Text.Contains('+') == false && row.Cells[8].Text.Contains('-') == false)
                                        {
                                            row.Cells[8].Text = "+" + row.Cells[8].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkA.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkR.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chk3.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkB.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[7].Text.Contains('+') == false && row.Cells[7].Text.Contains('-') == false)
                                        {
                                            row.Cells[7].Text = "+" + row.Cells[7].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[6].Text.Contains('+') == false && row.Cells[6].Text.Contains('-') == false)
                                        {
                                            row.Cells[6].Text = "+" + row.Cells[6].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                        r = float.Parse(txtR.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            querySearch.Parameters.AddWithValue("@reb", r); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@stl", s); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@blk", b); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@3s", _3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        r = float.Parse(txtR.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@reb", r); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                        a = float.Parse(txtA.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            querySearch.Parameters.AddWithValue("@ast", a); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[5].Text.Contains('+') == false && row.Cells[5].Text.Contains('-') == false)
                                        {
                                            row.Cells[5].Text = "+" + row.Cells[5].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true
                    && chkA.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@blk", b);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        s = float.Parse(txtS.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("S_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@stl", s);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }















































































































































































        protected void btnRetrieve2_Click(object sender, EventArgs e)
        {
            if (txtP.Text == "")
            {
                txtP.Text = "0";
            }
            if (txtA.Text == "")
            {
                txtA.Text = "0";
            }
            if (txtR.Text == "")
            {
                txtR.Text = "0";
            }
            if (txt3.Text == "")
            {
                txt3.Text = "0";
            }
            if (txtB.Text == "")
            {
                txtB.Text = "0";
            }
            if (txtS.Text == "")
            {
                txtS.Text = "0";
            }
            if (txtP3.Text == "")
            {
                txtP3.Text = "0";
            }
            if (txtA3.Text == "")
            {
                txtA3.Text = "0";
            }
            if (txtR3.Text == "")
            {
                txtR3.Text = "0";
            }
            if (txt33.Text == "")
            {
                txt33.Text = "0";
            }
            if (txtB3.Text == "")
            {
                txtB3.Text = "0";
            }
            if (txtS3.Text == "")
            {
                txtS3.Text = "0";
            }
            if (txtP2.Text == "")
            {
                txtP2.Text = "0";
            }
            if (txtA2.Text == "")
            {
                txtA2.Text = "0";
            }
            if (txtR2.Text == "")
            {
                txtR2.Text = "0";
            }
            if (txt32.Text == "")
            {
                txt32.Text = "0";
            }
            if (txtB2.Text == "")
            {
                txtB2.Text = "0";
            }
            if (txtS2.Text == "")
            {
                txtS2.Text = "0";
            }
            string player = ddlRoster.SelectedValue.ToString();
            string player2 = ddlRoster2.SelectedValue.ToString();
            string injured = ddlInjured.SelectedValue.ToString();
            if (injured == "")
            {
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkA.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkR.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chk3.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkB.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txtB.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true
                    && chkA.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("S_2"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else
            {
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkA.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkR.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chk3.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkB.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txtB.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true
                    && chkA.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("S_2_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }


        protected void btnRetrieve2W_Click(object sender, EventArgs e)
        {
            if (txtP.Text == "")
            {
                txtP.Text = "0";
            }
            if (txtA.Text == "")
            {
                txtA.Text = "0";
            }
            if (txtR.Text == "")
            {
                txtR.Text = "0";
            }
            if (txt3.Text == "")
            {
                txt3.Text = "0";
            }
            if (txtB.Text == "")
            {
                txtB.Text = "0";
            }
            if (txtS.Text == "")
            {
                txtS.Text = "0";
            }
            if (txtP3.Text == "")
            {
                txtP3.Text = "0";
            }
            if (txtA3.Text == "")
            {
                txtA3.Text = "0";
            }
            if (txtR3.Text == "")
            {
                txtR3.Text = "0";
            }
            if (txt33.Text == "")
            {
                txt33.Text = "0";
            }
            if (txtB3.Text == "")
            {
                txtB3.Text = "0";
            }
            if (txtS3.Text == "")
            {
                txtS3.Text = "0";
            }
            if (txtP2.Text == "")
            {
                txtP2.Text = "0";
            }
            if (txtA2.Text == "")
            {
                txtA2.Text = "0";
            }
            if (txtR2.Text == "")
            {
                txtR2.Text = "0";
            }
            if (txt32.Text == "")
            {
                txt32.Text = "0";
            }
            if (txtB2.Text == "")
            {
                txtB2.Text = "0";
            }
            if (txtS2.Text == "")
            {
                txtS2.Text = "0";
            }
            string player = ddlRoster.SelectedValue.ToString();
            string player2 = ddlRoster2.SelectedValue.ToString();
            string injured = ddlInjured.SelectedValue.ToString();
            if (injured == "")
            {


                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkA.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkR.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chk3.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkB.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txtB.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true
                    && chkA.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("S_2_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else
            {


                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkA.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkR.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chk3.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkB.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txtB.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true
                    && chkA.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("S_2_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }



        protected void btnRetrieve3_Click(object sender, EventArgs e)
        {
            if (txtP.Text == "")
            {
                txtP.Text = "0";
            }
            if (txtA.Text == "")
            {
                txtA.Text = "0";
            }
            if (txtR.Text == "")
            {
                txtR.Text = "0";
            }
            if (txt3.Text == "")
            {
                txt3.Text = "0";
            }
            if (txtB.Text == "")
            {
                txtB.Text = "0";
            }
            if (txtS.Text == "")
            {
                txtS.Text = "0";
            }
            if (txtP3.Text == "")
            {
                txtP3.Text = "0";
            }
            if (txtA3.Text == "")
            {
                txtA3.Text = "0";
            }
            if (txtR3.Text == "")
            {
                txtR3.Text = "0";
            }
            if (txt33.Text == "")
            {
                txt33.Text = "0";
            }
            if (txtB3.Text == "")
            {
                txtB3.Text = "0";
            }
            if (txtS3.Text == "")
            {
                txtS3.Text = "0";
            }
            if (txtP2.Text == "")
            {
                txtP2.Text = "0";
            }
            if (txtA2.Text == "")
            {
                txtA2.Text = "0";
            }
            if (txtR2.Text == "")
            {
                txtR2.Text = "0";
            }
            if (txt32.Text == "")
            {
                txt32.Text = "0";
            }
            if (txtB2.Text == "")
            {
                txtB2.Text = "0";
            }
            if (txtS2.Text == "")
            {
                txtS2.Text = "0";
            }
            string player = ddlRoster.SelectedValue.ToString();
            string player2 = ddlRoster2.SelectedValue.ToString(); string player3 = ddlRoster3.SelectedValue.ToString();
            string injured = ddlInjured.SelectedValue.ToString();
            if (injured == "")
            {
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkA.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkR.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chk3.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkB.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txtB.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true
                    && chkA.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("S_3P"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else
            {
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkA.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkR.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chk3.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkB.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txtB.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true
                    && chkA.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("S_3P_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        protected void btnRetrieve3W_Click(object sender, EventArgs e)
        {
            if (txtP.Text == "")
            {
                txtP.Text = "0";
            }
            if (txtA.Text == "")
            {
                txtA.Text = "0";
            }
            if (txtR.Text == "")
            {
                txtR.Text = "0";
            }
            if (txt3.Text == "")
            {
                txt3.Text = "0";
            }
            if (txtB.Text == "")
            {
                txtB.Text = "0";
            }
            if (txtS.Text == "")
            {
                txtS.Text = "0";
            }
            if (txtP3.Text == "")
            {
                txtP3.Text = "0";
            }
            if (txtA3.Text == "")
            {
                txtA3.Text = "0";
            }
            if (txtR3.Text == "")
            {
                txtR3.Text = "0";
            }
            if (txt33.Text == "")
            {
                txt33.Text = "0";
            }
            if (txtB3.Text == "")
            {
                txtB3.Text = "0";
            }
            if (txtS3.Text == "")
            {
                txtS3.Text = "0";
            }
            if (txtP2.Text == "")
            {
                txtP2.Text = "0";
            }
            if (txtA2.Text == "")
            {
                txtA2.Text = "0";
            }
            if (txtR2.Text == "")
            {
                txtR2.Text = "0";
            }
            if (txt32.Text == "")
            {
                txt32.Text = "0";
            }
            if (txtB2.Text == "")
            {
                txtB2.Text = "0";
            }
            if (txtS2.Text == "")
            {
                txtS2.Text = "0";
            }
            string player = ddlRoster.SelectedValue.ToString();
            string player2 = ddlRoster2.SelectedValue.ToString(); string player3 = ddlRoster3.SelectedValue.ToString();
            string injured = ddlInjured.SelectedValue.ToString();
            if (injured == "")
            {


                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkA.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkR.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chk3.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkB.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txtB.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true
                    && chkA.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("S_3P_W"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            else
            {


                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }

                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_B_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_B_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkA.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkA.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_B_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkR.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_B_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkB.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chk3.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_B_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkB.Checked == false && chkS.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chkR.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkA.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_B_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_B_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_B_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_B_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_B_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txtB.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_B_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_R_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true && chkS.Checked == true
                    && chk3.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chkR.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_B_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_B_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkA.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_B_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkP.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_R_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkS.Checked == true
                    && chkB.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkB.Checked == true
                    && chkS.Checked == false && chk3.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_B_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chk3.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkR.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_R_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true && chkA.Checked == true
                    && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_A_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3); ;
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkP.Checked == true
                    && chkA.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        p = float.Parse(txtP.Text); p2 = float.Parse(txtP2.Text); p3 = float.Parse(txtP3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("P_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@pts", p); querySearch.Parameters.AddWithValue("@pts2", p2); querySearch.Parameters.AddWithValue("@pts3", p3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkA.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkR.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        a = float.Parse(txtA.Text); a2 = float.Parse(txtA2.Text); a3 = float.Parse(txtA3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("A_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@ast", a); querySearch.Parameters.AddWithValue("@ast2", a2); querySearch.Parameters.AddWithValue("@ast3", a3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkR.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        r = float.Parse(txtR.Text); r2 = float.Parse(txtR2.Text); r3 = float.Parse(txtR3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("R_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@reb", r); querySearch.Parameters.AddWithValue("@reb2", r2); querySearch.Parameters.AddWithValue("@reb3", r3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chk3.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkB.Checked == false && chkA.Checked == false && chkR.Checked == false)
                {
                    try
                    {
                        _3 = float.Parse(txt3.Text); _32 = float.Parse(txt32.Text); _33 = float.Parse(txt33.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("_3_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@3s", _3); querySearch.Parameters.AddWithValue("@3s2", _32); querySearch.Parameters.AddWithValue("@3s3", _33);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkB.Checked == true
                    && chkP.Checked == false && chkS.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        b = float.Parse(txtB.Text); b2 = float.Parse(txtB2.Text); b3 = float.Parse(txtB3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("B_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@blk", b); querySearch.Parameters.AddWithValue("@blk2", b2); querySearch.Parameters.AddWithValue("@blk3", b3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                if (chkS.Checked == true
                    && chkP.Checked == false && chkB.Checked == false && chkR.Checked == false && chkA.Checked == false && chk3.Checked == false)
                {
                    try
                    {
                        s = float.Parse(txtS.Text); s2 = float.Parse(txtS2.Text); s3 = float.Parse(txtS3.Text);
                    }
                    catch (FormatException ex)
                    {
                        lblError.Text = "Please restrict input to only numbers or a decimal point(.)";
                    }
                    SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=nba1_18;User Id=test;Password=test123;");
                    using (sqlConnect)
                    {
                        using (SqlCommand querySearch = new SqlCommand("S_3P_W_I"))
                        {
                            querySearch.CommandType = CommandType.StoredProcedure;
                            querySearch.Parameters.AddWithValue("@player", player); querySearch.Parameters.AddWithValue("@player2", player2); querySearch.Parameters.AddWithValue("@player3", player3); querySearch.Parameters.AddWithValue("@injured", injured);
                            querySearch.Parameters.AddWithValue("@stl", s); querySearch.Parameters.AddWithValue("@stl2", s2); querySearch.Parameters.AddWithValue("@stl3", s3);
                            using (SqlDataAdapter sDataSearch = new SqlDataAdapter())
                            {
                                querySearch.Connection = sqlConnect;
                                sDataSearch.SelectCommand = querySearch;
                                using (DataTable dataT = new DataTable())
                                {
                                    try { sDataSearch.Fill(dataT); } catch (SqlException) { lblError.Text = "No games meet the requested criteria"; }
                                    grd.DataSource = dataT;
                                    grd.DataBind();
                                    foreach (GridViewRow row in grd.Rows)
                                    {
                                        if (row.Cells[4].Text.Contains('+') == false && row.Cells[4].Text.Contains('-') == false)
                                        {
                                            row.Cells[4].Text = "+" + row.Cells[4].Text;
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }

        protected void btnjournal_Click(object sender, EventArgs e)
        {
            string team = "";
            string player1 = "";
            string player2 = "";
            string player3 = "";
            string injured = "";
            team = ddTeams.SelectedValue.ToString();
            player1 = ddlRoster.SelectedValue.ToString();
            try
            {
                p = float.Parse(HttpUtility.HtmlEncode(txtP.Text));
            }
            catch (FormatException ex)
            {   
                p = 0;   
            }
            try
            {
                p2 = float.Parse(HttpUtility.HtmlEncode(txtP2.Text));
            }
            catch (FormatException ex)
            {
                p2 = 0;
            }
            try
            {
                p3 = float.Parse(HttpUtility.HtmlEncode(txtP3.Text));
            }
            catch (FormatException ex)
            {
                p3 = 0;
            }

            try
            {
                a = float.Parse(HttpUtility.HtmlEncode(txtA.Text));
            }
            catch (FormatException ex)
            {
                a = 0;
            }
            try
            {
                a2 = float.Parse(HttpUtility.HtmlEncode(txtP2.Text));
            }
            catch (FormatException ex)
            {
                a2 = 0;
            }
            try
            {
                a3 = float.Parse(HttpUtility.HtmlEncode(txtA3.Text));
            }
            catch (FormatException ex)
            {
                a3 = 0;
            }

            try
            {
                r = float.Parse(HttpUtility.HtmlEncode(txtR.Text));
            }
            catch (FormatException ex)
            {
                r = 0;
            }
            try
            {
                r2 = float.Parse(HttpUtility.HtmlEncode(txtR2.Text));
            }
            catch (FormatException ex)
            {
                r2 = 0;
            }
            try
            {
                r3 = float.Parse(HttpUtility.HtmlEncode(txtR3.Text));
            }
            catch (FormatException ex)
            {
                r3 = 0;
            }
            try
            {
                _3 = float.Parse(HttpUtility.HtmlEncode(txt3.Text));
            }
            catch (FormatException ex)
            {
                _3 = 0;
            }
            try
            {
                _32 = float.Parse(HttpUtility.HtmlEncode(txt32.Text));
            }
            catch (FormatException ex)
            {
                _32 = 0;
            }
            try
            {
                _33 = float.Parse(HttpUtility.HtmlEncode(txt33.Text));
            }
            catch (FormatException ex)
            {
                _33 = 0;
            }

            try
            {
                b = float.Parse(HttpUtility.HtmlEncode(txtB.Text));
            }
            catch (FormatException ex)
            {
                b = 0;
            }
            try
            {
                b2 = float.Parse(HttpUtility.HtmlEncode(txtB2.Text));
            }
            catch (FormatException ex)
            {
                b2 = 0;
            }
            try
            {
                b3 = float.Parse(HttpUtility.HtmlEncode(txtB3.Text));
            }
            catch (FormatException ex)
            {
                b3 = 0;
            }

            try
            {
                s = float.Parse(HttpUtility.HtmlEncode(txtS.Text));
            }
            catch (FormatException ex)
            {
                s = 0;
            }
            try
            {
                s2 = float.Parse(HttpUtility.HtmlEncode(txtS2.Text));
            }
            catch (FormatException ex)
            {
                s2 = 0;
            }
            try
            {
                s3 = float.Parse(HttpUtility.HtmlEncode(txtS3.Text));
            }
            catch (FormatException ex)
            {
                s3 = 0;
            }
            player2 = ddlRoster2.SelectedValue.ToString();
            player3 = ddlRoster3.SelectedValue.ToString();
            injured = ddlInjured.SelectedValue.ToString();
            SqlConnection sqlConnect = new SqlConnection("Server=localhost;Database=comments;User Id=test;Password=test123;");
            using (sqlConnect)
            {
                int userID = 0;
                using (SqlCommand querySearch = new SqlCommand("users"))
                {
                    querySearch.Connection = sqlConnect;
                    querySearch.CommandType = CommandType.StoredProcedure;
                    querySearch.Parameters.AddWithValue("@username", HttpUtility.HtmlEncode(Session["User"].ToString()));
                    sqlConnect.Open();
                    SqlDataReader readersql = querySearch.ExecuteReader(); // create a reader

                    if (readersql.HasRows) // if the username exists, it will continue
                    {
                        if (readersql.Read()) // this will read the single record that matches the entered username
                        {
                            string stringUserID = readersql["id"].ToString();
                            userID = Int32.Parse(stringUserID);
                        }
                    }
                    sqlConnect.Close();
                }
                using (SqlCommand querySearch = new SqlCommand("journalEntryTest"))
                {
                    querySearch.Connection = sqlConnect;
                    querySearch.CommandType = CommandType.StoredProcedure;
                    querySearch.Parameters.AddWithValue("@userID", userID);
                    querySearch.Parameters.AddWithValue("@team1", ddTeams.SelectedValue.ToString());
                        querySearch.Parameters.AddWithValue("@player1", ddlRoster.SelectedValue.ToString());
                        querySearch.Parameters.AddWithValue("@player1p", p);
                        querySearch.Parameters.AddWithValue("@player1a", a);
                        querySearch.Parameters.AddWithValue("@player1r", r);
                        querySearch.Parameters.AddWithValue("@player13", _3);
                        querySearch.Parameters.AddWithValue("@player1b", b);
                        querySearch.Parameters.AddWithValue("@player1s", s);
                        querySearch.Parameters.AddWithValue("@player2", ddlRoster2.SelectedValue.ToString());
                        querySearch.Parameters.AddWithValue("@player2p", p2);
                        querySearch.Parameters.AddWithValue("@player2a", a2);
                        querySearch.Parameters.AddWithValue("@player2r", r2);
                        querySearch.Parameters.AddWithValue("@player23", _32);
                        querySearch.Parameters.AddWithValue("@player2b", b2);
                        querySearch.Parameters.AddWithValue("@player2s", s2);
                        querySearch.Parameters.AddWithValue("@player3", ddlRoster3.SelectedValue.ToString());
                        querySearch.Parameters.AddWithValue("@player3p", p3);
                        querySearch.Parameters.AddWithValue("@player3a", a3);
                        querySearch.Parameters.AddWithValue("@player3r", r3);
                        querySearch.Parameters.AddWithValue("@player33", _33);
                        querySearch.Parameters.AddWithValue("@player3b", b3);
                        querySearch.Parameters.AddWithValue("@player3s", s3);
                        querySearch.Parameters.AddWithValue("@injured", ddlInjured.SelectedValue.ToString());
                    



                    sqlConnect.Open();
                    querySearch.ExecuteScalar(); // Used for other than SELECT Queries
                    sqlConnect.Close();
                }
            }
        }
    } 
}